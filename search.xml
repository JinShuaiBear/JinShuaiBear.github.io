<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>分布式事务</title>
      <link href="/2022/10/26/fen-bu-shi-shi-wu/"/>
      <url>/2022/10/26/fen-bu-shi-shi-wu/</url>
      
        <content type="html"><![CDATA[<h1 id="分布式事务"><a href="#分布式事务" class="headerlink" title="分布式事务"></a><strong>分布式事务</strong></h1><h2 id="一、初始项目"><a href="#一、初始项目" class="headerlink" title="一、初始项目"></a>一、初始项目</h2><blockquote><p><strong>这部分内容是在一个聚合工程demo上进行演示的，包括三个服务：</strong></p><ol><li>商品服务</li><li>购物车服务</li><li>订单服务</li></ol></blockquote><p>逻辑很简单：下单后生成订单记录，删除购物车记录并修改商品中的库存</p><p>服务之间的通信组件使用OpenFeign</p><h3 id="1-创建Maven父工程"><a href="#1-创建Maven父工程" class="headerlink" title="1. 创建Maven父工程"></a>1. 创建Maven父工程</h3><p>新建Maven父工程 <code>spring-cloud-alibaba-distribution-demo</code></p><p><img src="https://bearcad.oss-cn-shanghai.aliyuncs.com/Code/Maven01.png" alt="Maven父工程"></p><p>pom文件如下</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">&gt;</span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.bear<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-alibaba-distribution-demo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>0.0.1-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>spring-cloud-alibaba-distribution-demo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>packaging</span><span class="token punctuation">&gt;</span></span>pom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>packaging</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">&gt;</span></span>Spring Cloud Alibaba Distribution Demo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>spring.boot.version</span><span class="token punctuation">&gt;</span></span>2.6.3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>spring.boot.version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>spring.cloud.dependencies.version</span><span class="token punctuation">&gt;</span></span>2021.0.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>spring.cloud.dependencies.version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>spring.cloud.alibaba.version</span><span class="token punctuation">&gt;</span></span>2021.0.1.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>spring.cloud.alibaba.version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>java.version</span><span class="token punctuation">&gt;</span></span>17<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>java.version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project.build.sourceEncoding</span><span class="token punctuation">&gt;</span></span>UTF-8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project.build.sourceEncoding</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project.reporting.outputEncoding</span><span class="token punctuation">&gt;</span></span>UTF-8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project.reporting.outputEncoding</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencyManagement</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-dependencies<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${spring.cloud.dependencies.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>type</span><span class="token punctuation">&gt;</span></span>pom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>type</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>import<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-dependencies<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${spring.boot.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>type</span><span class="token punctuation">&gt;</span></span>pom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>type</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>import<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alibaba.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-alibaba-dependencies<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${spring.cloud.alibaba.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>type</span><span class="token punctuation">&gt;</span></span>pom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>type</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>import<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${spring.boot.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${spring.boot.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencyManagement</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.maven.plugins<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>maven-compiler-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.8.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span><span class="token punctuation">&gt;</span></span>${java.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>source</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>target</span><span class="token punctuation">&gt;</span></span>${java.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>target</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>encoding</span><span class="token punctuation">&gt;</span></span>UTF-8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>encoding</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${spring.boot.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>repositories</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>repository</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">&gt;</span></span>central<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">&gt;</span></span>https://maven.aliyun.com/repository/central<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>aliyun<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>repository</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>repositories</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-商品服务编写"><a href="#2-商品服务编写" class="headerlink" title="2. 商品服务编写"></a>2. 商品服务编写</h3><h4 id="第一步：创建商品服务所需的数据库和表"><a href="#第一步：创建商品服务所需的数据库和表" class="headerlink" title="第一步：创建商品服务所需的数据库和表"></a><strong>第一步：创建商品服务所需的数据库和表</strong></h4><p>商品服务的数据库命名为 test_distribution_goods_db，商品表命名为 tb_goods。</p><p>SQL 语句如下：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment"># 创建商品服务所需数据</span><span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> <span class="token comment">/*!32312 IF NOT EXISTS*/</span><span class="token identifier"><span class="token punctuation">`</span>test_distribution_goods_db<span class="token punctuation">`</span></span> <span class="token comment">/*!40100 DEFAULT CHARACTER SET utf8 */</span><span class="token punctuation">;</span><span class="token keyword">USE</span> <span class="token identifier"><span class="token punctuation">`</span>test_distribution_goods_db<span class="token punctuation">`</span></span><span class="token punctuation">;</span><span class="token comment"># 表结构</span><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">`</span>tb_goods<span class="token punctuation">`</span></span><span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>tb_goods<span class="token punctuation">`</span></span>  <span class="token punctuation">(</span>  <span class="token identifier"><span class="token punctuation">`</span>goods_id<span class="token punctuation">`</span></span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span> <span class="token keyword">COMMENT</span> <span class="token string">'测试商品id'</span><span class="token punctuation">,</span>  <span class="token identifier"><span class="token punctuation">`</span>goods_name<span class="token punctuation">`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">''</span> <span class="token keyword">COMMENT</span> <span class="token string">'测试商品名称'</span><span class="token punctuation">,</span>  <span class="token identifier"><span class="token punctuation">`</span>goods_stock<span class="token punctuation">`</span></span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token number">0</span> <span class="token keyword">COMMENT</span> <span class="token string">'测试商品库存'</span><span class="token punctuation">,</span>    <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>goods_id<span class="token punctuation">`</span></span><span class="token punctuation">)</span> <span class="token keyword">USING</span> <span class="token keyword">BTREE</span><span class="token punctuation">)</span> <span class="token keyword">ENGINE</span> <span class="token operator">=</span> <span class="token keyword">InnoDB</span> <span class="token keyword">AUTO_INCREMENT</span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token keyword">CHARACTER</span> <span class="token keyword">SET</span> <span class="token operator">=</span> utf8 <span class="token keyword">COLLATE</span> <span class="token operator">=</span> utf8_general_ci ROW_FORMAT <span class="token operator">=</span> Dynamic<span class="token punctuation">;</span><span class="token comment"># 新增两条测试数据</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">`</span>tb_goods<span class="token punctuation">`</span></span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">2022</span><span class="token punctuation">,</span> <span class="token string">'Spring Cloud Alibaba 大型微服务项目实战（上册）'</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">`</span>tb_goods<span class="token punctuation">`</span></span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">2025</span><span class="token punctuation">,</span> <span class="token string">'Spring Cloud Alibaba 大型微服务项目实战（下册）'</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="第二步：编写商品服务"><a href="#第二步：编写商品服务" class="headerlink" title="第二步：编写商品服务"></a>第二步：编写商品服务</h4><ul><li>在父工程下新建Maven子工程 goods-service-demo</li><li><img src="https://bearcad.oss-cn-shanghai.aliyuncs.com/Code/Maven02.png" alt="Maven子工程"></li><li>添加依赖</li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-jdbc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mysql-connector-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alibaba.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-alibaba-nacos-discovery<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>application.yml 配置文件</li></ul><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">server</span><span class="token punctuation">:</span>  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8151</span><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">application</span><span class="token punctuation">:</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> cloud<span class="token punctuation">-</span>goods<span class="token punctuation">-</span>service  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>    <span class="token key atrule">nacos</span><span class="token punctuation">:</span>      <span class="token key atrule">discovery</span><span class="token punctuation">:</span>        <span class="token key atrule">server-addr</span><span class="token punctuation">:</span> 127.0.0.1<span class="token punctuation">:</span><span class="token number">8848</span>      <span class="token key atrule">password</span><span class="token punctuation">:</span> nacos      <span class="token key atrule">username</span><span class="token punctuation">:</span> nacos  <span class="token key atrule">datasource</span><span class="token punctuation">:</span>    <span class="token key atrule">driver-class-name</span><span class="token punctuation">:</span> com.mysql.cj.jdbc.Driver    <span class="token key atrule">url</span><span class="token punctuation">:</span> jdbc<span class="token punctuation">:</span>mysql<span class="token punctuation">:</span>//localhost<span class="token punctuation">:</span>3306/test_distribution_goods_db<span class="token punctuation">?</span>useUnicode=true<span class="token important">&amp;characterEncoding=utf8&amp;autoReconnect=true&amp;useSSL=false</span>    <span class="token key atrule">username</span><span class="token punctuation">:</span> root    <span class="token key atrule">password</span><span class="token punctuation">:</span> root980529<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>编写修改商品库存接口</li></ul><blockquote><p>这里直接使用 JdbcTemplate 来操作数据库，主要是演示数据的一致性</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>bear<span class="token punctuation">.</span>goods<span class="token punctuation">.</span>controller</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span><span class="token class-name">JdbcTemplate</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">PathVariable</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">PutMapping</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RestController</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Resource</span></span><span class="token punctuation">;</span><span class="token comment">/** * @description: 商品服务接口 * @author: bear * @date: 2022-10-25 **/</span><span class="token annotation punctuation">@RestController</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CloudGoodsApi</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Resource</span>    <span class="token keyword">private</span> <span class="token class-name">JdbcTemplate</span> jdbcTemplate<span class="token punctuation">;</span>    <span class="token annotation punctuation">@PutMapping</span><span class="token punctuation">(</span><span class="token string">"/goods/{goodsId}"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">Boolean</span> <span class="token function">deStock</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">"goodsId"</span><span class="token punctuation">)</span> <span class="token keyword">int</span> goodsId<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">// 减库存操作</span>        <span class="token keyword">int</span> result <span class="token operator">=</span> jdbcTemplate<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token string">"update tb_goods set goods_stock=goods_stock-1 where goods_id="</span> <span class="token operator">+</span> goodsId<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> result <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>配置一下数据库</li></ul><p><img src="https://bearcad.oss-cn-shanghai.aliyuncs.com/Code/SQL01.png" alt="SQL连接"></p><p>修改商品库存接口逻辑并不复杂，请求方式为PUT，接口地址为/goods/{goodsId}。接收一个路径参数goodsId，然后直接执行一条update语句，将库存字段goods_stock减一，最后根据执行结果返回成功或者失败。</p><h4 id="第三步：功能测试"><a href="#第三步：功能测试" class="headerlink" title="第三步：功能测试"></a>第三步：<strong>功能测试</strong></h4><p><font color="red"> <strong>编写启动主类， 启动 goods-service-demo 项目，启动Nacos。</strong></font></p><p><img src="https://bearcad.oss-cn-shanghai.aliyuncs.com/Code/Nacos01.png" alt="Nacos启动"></p><p>测试该接口是否正常，测试用例如下：</p><p><img src="https://bearcad.oss-cn-shanghai.aliyuncs.com/Code/Postman01.png" alt="Postman测试"></p><p>PUT <a href="https://link.juejin.cn/?target=http://localhost:8151/goods/2022">http://localhost:8151/goods/2022</a></p><p>接口请求成功。</p><p>当然，还需要去数据库中查看，id为2022的测试数据是否被正确的修改库存。</p><p>数据库结果如下图所示：</p><p><img src="https://bearcad.oss-cn-shanghai.aliyuncs.com/Code/SQL04.png" alt="数据库结果"></p><p>数据与预期结果一致，编码完成。</p><h3 id="3-购物车服务编写"><a href="#3-购物车服务编写" class="headerlink" title="3. 购物车服务编写"></a>3. 购物车服务编写</h3><h4 id="第一步：创建购物车服务所需的数据库和表"><a href="#第一步：创建购物车服务所需的数据库和表" class="headerlink" title="第一步：创建购物车服务所需的数据库和表"></a>第一步：创建购物车服务所需的数据库和表</h4><p>购物车服务的数据库命名为test_distribution_cart_db，购物项的表命名为tb_cart_item。</p><p>SQL语句如下：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment"># 创建购物车服务所需数据</span><span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> <span class="token comment">/*!32312 IF NOT EXISTS*/</span><span class="token identifier"><span class="token punctuation">`</span>test_distribution_cart_db<span class="token punctuation">`</span></span> <span class="token comment">/*!40100 DEFAULT CHARACTER SET utf8 */</span><span class="token punctuation">;</span><span class="token keyword">USE</span> <span class="token identifier"><span class="token punctuation">`</span>test_distribution_cart_db<span class="token punctuation">`</span></span><span class="token punctuation">;</span><span class="token comment"># 表结构</span><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">`</span>tb_cart_item<span class="token punctuation">`</span></span><span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>tb_cart_item<span class="token punctuation">`</span></span>  <span class="token punctuation">(</span>  <span class="token identifier"><span class="token punctuation">`</span>cart_id<span class="token punctuation">`</span></span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span> <span class="token keyword">COMMENT</span> <span class="token string">'测试购物项id'</span><span class="token punctuation">,</span>  <span class="token identifier"><span class="token punctuation">`</span>goods_id<span class="token punctuation">`</span></span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token number">0</span> <span class="token keyword">COMMENT</span> <span class="token string">'测试商品id'</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>create_time<span class="token punctuation">`</span></span> <span class="token keyword">timestamp</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CURRENT_TIMESTAMP</span> <span class="token keyword">COMMENT</span> <span class="token string">'创建时间'</span><span class="token punctuation">,</span>  <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>cart_id<span class="token punctuation">`</span></span><span class="token punctuation">)</span> <span class="token keyword">USING</span> <span class="token keyword">BTREE</span><span class="token punctuation">)</span> <span class="token keyword">ENGINE</span> <span class="token operator">=</span> <span class="token keyword">InnoDB</span> <span class="token keyword">AUTO_INCREMENT</span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token keyword">CHARACTER</span> <span class="token keyword">SET</span> <span class="token operator">=</span> utf8 <span class="token keyword">COLLATE</span> <span class="token operator">=</span> utf8_general_ci ROW_FORMAT <span class="token operator">=</span> Dynamic<span class="token punctuation">;</span><span class="token comment"># 新增10条测试数据</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">`</span>tb_cart_item<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>cart_id<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>goods_id<span class="token punctuation">`</span></span><span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2022</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">`</span>tb_cart_item<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>cart_id<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>goods_id<span class="token punctuation">`</span></span><span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2022</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">`</span>tb_cart_item<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>cart_id<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>goods_id<span class="token punctuation">`</span></span><span class="token punctuation">)</span>  <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2022</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">`</span>tb_cart_item<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>cart_id<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>goods_id<span class="token punctuation">`</span></span><span class="token punctuation">)</span>  <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">2022</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">`</span>tb_cart_item<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>cart_id<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>goods_id<span class="token punctuation">`</span></span><span class="token punctuation">)</span>  <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">2022</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">`</span>tb_cart_item<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>cart_id<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>goods_id<span class="token punctuation">`</span></span><span class="token punctuation">)</span>  <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">2025</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">`</span>tb_cart_item<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>cart_id<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>goods_id<span class="token punctuation">`</span></span><span class="token punctuation">)</span>  <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">2025</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">`</span>tb_cart_item<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>cart_id<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>goods_id<span class="token punctuation">`</span></span><span class="token punctuation">)</span>  <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">2025</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">`</span>tb_cart_item<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>cart_id<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>goods_id<span class="token punctuation">`</span></span><span class="token punctuation">)</span>  <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">2025</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">`</span>tb_cart_item<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>cart_id<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>goods_id<span class="token punctuation">`</span></span><span class="token punctuation">)</span>  <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2025</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="第二步：编写购物车服务"><a href="#第二步：编写购物车服务" class="headerlink" title="第二步：编写购物车服务"></a>第二步：编写购物车服务</h4><ul><li>在父工程下新建Maven子工程 shopcart-service-demo</li></ul><p><img src="https://bearcad.oss-cn-shanghai.aliyuncs.com/Code/Maven03.png" alt="Maven子工程"></p><ul><li><strong>pom依赖同前一个模块</strong></li><li><strong>application.yml 注意修改服务名称，连接的数据库为</strong> <strong>test_distribution_cart_db</strong> <strong>，修改服务器端口为8152，其他同前</strong></li></ul><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">server</span><span class="token punctuation">:</span>  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8152</span><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">application</span><span class="token punctuation">:</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> cloud<span class="token punctuation">-</span>shopcart<span class="token punctuation">-</span>service  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>    <span class="token key atrule">nacos</span><span class="token punctuation">:</span>      <span class="token key atrule">discovery</span><span class="token punctuation">:</span>        <span class="token key atrule">server-addr</span><span class="token punctuation">:</span> 127.0.0.1<span class="token punctuation">:</span><span class="token number">8848</span>      <span class="token key atrule">password</span><span class="token punctuation">:</span> nacos      <span class="token key atrule">username</span><span class="token punctuation">:</span> nacos  <span class="token key atrule">datasource</span><span class="token punctuation">:</span>    <span class="token key atrule">driver-class-name</span><span class="token punctuation">:</span> com.mysql.cj.jdbc.Driver    <span class="token key atrule">url</span><span class="token punctuation">:</span> jdbc<span class="token punctuation">:</span>mysql<span class="token punctuation">:</span>//localhost<span class="token punctuation">:</span>3306/test_distribution_cart_db<span class="token punctuation">?</span>useUnicode=true<span class="token important">&amp;characterEncoding=utf8&amp;autoReconnect=true&amp;useSSL=false</span>    <span class="token key atrule">username</span><span class="token punctuation">:</span> root    <span class="token key atrule">password</span><span class="token punctuation">:</span> root980529<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><strong>编写接口</strong></li></ul><blockquote><p>编写 CloudShopCartApi接口，该接口包括两个功能：</p><ol><li>根据id查询购物车数据项</li><li>批量删除购物车数据</li></ol></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>bear<span class="token punctuation">.</span>shopcart<span class="token punctuation">.</span>controller</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span><span class="token class-name">JdbcTemplate</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Resource</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span></span><span class="token punctuation">;</span><span class="token comment">/** * @description: 购物车接口 * @author: bear * @date: 2022-10-25 **/</span><span class="token annotation punctuation">@RestController</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CloudShopCartApi</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Resource</span>    <span class="token keyword">private</span> <span class="token class-name">JdbcTemplate</span> jdbcTemplate<span class="token punctuation">;</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/shop-cart/getGoodsId"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getGoodsId</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">"cartId"</span><span class="token punctuation">)</span> <span class="token keyword">int</span> cartId<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">// 根据主键id查询购物表</span>        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> cartItemObject <span class="token operator">=</span> jdbcTemplate<span class="token punctuation">.</span><span class="token function">queryForMap</span><span class="token punctuation">(</span><span class="token string">"select * from tb_cart_item where cart_id="</span> <span class="token operator">+</span> cartId <span class="token operator">+</span> <span class="token string">" limit 1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>cartItemObject<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span><span class="token string">"goods_id"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment">// 返回商品id</span>            <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> cartItemObject<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"goods_id"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@DeleteMapping</span><span class="token punctuation">(</span><span class="token string">"/shop-cart/{cartId}"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">Boolean</span> <span class="token function">deleteItem</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">"cartId"</span><span class="token punctuation">)</span> <span class="token keyword">int</span> cartId<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">// 删除购物车数据</span>        <span class="token keyword">int</span> result <span class="token operator">=</span> jdbcTemplate<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token string">"delete from tb_cart_item where cart_id="</span> <span class="token operator">+</span> cartId<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> result <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>两个接口，分别是根据购物项cartId获取对应的goodsId接口和根据购物项cartId删除记录的接口。</p><p>查询goodsId接口的请求方式为GET，接口地址为/shop-cart/getGoodsId。接收一个请求参数cartId，然后直接执行一条select查询语句，将记录中的goods_id返回给调用端。</p><p>删除购物车数据接口的请求方式为DELETE，接口地址为/shop-cart/{cartId}。接收一个路径参数cartId，然后直接执行一条delete删除语句，将表中id为cartId的记录删除。</p><ul><li><strong>配置数据源</strong></li></ul><p><img src="https://bearcad.oss-cn-shanghai.aliyuncs.com/Code/SQL07.png" alt="数据库管理"></p><h4 id="第三步：功能测试-1"><a href="#第三步：功能测试-1" class="headerlink" title="第三步：功能测试"></a>第三步：功能测试</h4><p>编写启动主类，启动 shopcart-service-demo 项目</p><p><img src="https://bearcad.oss-cn-shanghai.aliyuncs.com/Code/Nacos02.png" alt="Nacos启动"></p><p>测试该接口是否正常，测试URL如下</p><p>GET <a href="https://link.juejin.cn/?target=http://localhost:8154/shop-cart/getGoodsId?cartId=1">http://localhost:8152/shop-cart/getGoodsId?cartId=1</a></p><p>DELETE <a href="https://link.juejin.cn/?target=http://localhost:8154/shop-cart/1">http://localhost:8152/shop-cart/1</a></p><p>查询goodsId接口的结果如下图所示</p><p><img src="https://bearcad.oss-cn-shanghai.aliyuncs.com/Code/Postman02.png" alt="Postman测试"></p><p>删除购物车数据接口的结果如下图所示</p><p><img src="https://bearcad.oss-cn-shanghai.aliyuncs.com/Code/Postman03.png" alt="Postman测试"></p><p>接口请求成功。</p><p>当然，还需要去数据库中查看，购物项表中id为1的测试数据已被删除。</p><p>数据与预期结果一致，编码完成。</p><h3 id="4-订单服务编写"><a href="#4-订单服务编写" class="headerlink" title="4. 订单服务编写"></a>4. 订单服务编写</h3><h5 id="第一步：创建订单服务所需的数据库和表-订单服务的数据库命名为-test-distribution-order-db，购物项的表命名为-tb-order。-SQL语句如下："><a href="#第一步：创建订单服务所需的数据库和表-订单服务的数据库命名为-test-distribution-order-db，购物项的表命名为-tb-order。-SQL语句如下：" class="headerlink" title="第一步：创建订单服务所需的数据库和表 订单服务的数据库命名为 test_distribution_order_db，购物项的表命名为 tb_order。 SQL语句如下："></a>第一步：创建订单服务所需的数据库和表 订单服务的数据库命名为 test_distribution_order_db，购物项的表命名为 tb_order。 SQL语句如下：</h5><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment"># 创建订单服务所需数据</span><span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> <span class="token comment">/*!32312 IF NOT EXISTS*/</span><span class="token identifier"><span class="token punctuation">`</span>test_distribution_order_db<span class="token punctuation">`</span></span> <span class="token comment">/*!40100 DEFAULT CHARACTER SET utf8 */</span><span class="token punctuation">;</span><span class="token keyword">USE</span> test_distribution_order_db<span class="token punctuation">;</span><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">`</span>tb_order<span class="token punctuation">`</span></span><span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>tb_order<span class="token punctuation">`</span></span>  <span class="token punctuation">(</span>  <span class="token identifier"><span class="token punctuation">`</span>order_id<span class="token punctuation">`</span></span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span> <span class="token keyword">COMMENT</span> <span class="token string">'测试订单id'</span><span class="token punctuation">,</span>  <span class="token identifier"><span class="token punctuation">`</span>cart_id<span class="token punctuation">`</span></span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'测试购物车id'</span><span class="token punctuation">,</span>  <span class="token identifier"><span class="token punctuation">`</span>create_time<span class="token punctuation">`</span></span> <span class="token keyword">timestamp</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CURRENT_TIMESTAMP</span> <span class="token keyword">COMMENT</span> <span class="token string">'创建时间'</span><span class="token punctuation">,</span>  <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>order_id<span class="token punctuation">`</span></span><span class="token punctuation">)</span> <span class="token keyword">USING</span> <span class="token keyword">BTREE</span><span class="token punctuation">)</span> <span class="token keyword">ENGINE</span> <span class="token operator">=</span> <span class="token keyword">InnoDB</span> <span class="token keyword">AUTO_INCREMENT</span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token keyword">CHARACTER</span> <span class="token keyword">SET</span> <span class="token operator">=</span> utf8 <span class="token keyword">COLLATE</span> <span class="token operator">=</span> utf8_general_ci ROW_FORMAT <span class="token operator">=</span> Dynamic<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="第二步：编写订单服务"><a href="#第二步：编写订单服务" class="headerlink" title="第二步：编写订单服务"></a>第二步：编写订单服务</h5><ul><li>在父工程下新建 Maven子工程 order-service-demo</li></ul><p><img src="https://bearcad.oss-cn-shanghai.aliyuncs.com/Code/Maven04.png" alt="Maven自工子"></p><ul><li><strong>pom依赖</strong></li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alibaba.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-alibaba-nacos-discovery<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-openfeign<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- jdbc-starter --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-jdbc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- MySQL 驱动包 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mysql-connector-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-loadbalancer<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><strong>application.yml ，注意增加OpenFeign 的配置</strong></li></ul><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">server</span><span class="token punctuation">:</span>  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8153</span><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">application</span><span class="token punctuation">:</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> cloud<span class="token punctuation">-</span>order<span class="token punctuation">-</span>service  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>    <span class="token key atrule">nacos</span><span class="token punctuation">:</span>      <span class="token key atrule">discovery</span><span class="token punctuation">:</span>        <span class="token key atrule">server-addr</span><span class="token punctuation">:</span> 127.0.0.1<span class="token punctuation">:</span><span class="token number">8848</span>      <span class="token key atrule">password</span><span class="token punctuation">:</span> nacos      <span class="token key atrule">username</span><span class="token punctuation">:</span> nacos  <span class="token key atrule">datasource</span><span class="token punctuation">:</span>    <span class="token key atrule">driver-class-name</span><span class="token punctuation">:</span> com.mysql.cj.jdbc.Driver    <span class="token key atrule">url</span><span class="token punctuation">:</span> jdbc<span class="token punctuation">:</span>mysql<span class="token punctuation">:</span>//localhost<span class="token punctuation">:</span>3306/test_distribution_order_db<span class="token punctuation">?</span>useUnicode=true<span class="token important">&amp;characterEncoding=utf8&amp;autoReconnect=true&amp;useSSL=false</span>    <span class="token key atrule">username</span><span class="token punctuation">:</span> root    <span class="token key atrule">password</span><span class="token punctuation">:</span> root980529<span class="token key atrule">feign</span><span class="token punctuation">:</span>  <span class="token key atrule">client</span><span class="token punctuation">:</span>    <span class="token key atrule">config</span><span class="token punctuation">:</span>      <span class="token key atrule">default</span><span class="token punctuation">:</span>        <span class="token key atrule">connectTimeout</span><span class="token punctuation">:</span> <span class="token number">2000</span>        <span class="token key atrule">readTimeout</span><span class="token punctuation">:</span> <span class="token number">5000</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>编写 FeignClient 代码</li></ul><p><font color="red"><strong>订单服务中会远程调用商品服务和购物车服务，所以这里就需要先声明远程调用商品服务和购物车服务中新增的接口。</strong></font></p><p>OpenFeign：GoodsDemoService</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>bear<span class="token punctuation">.</span>order<span class="token punctuation">.</span>openfeign</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>openfeign<span class="token punctuation">.</span></span><span class="token class-name">FeignClient</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">PathVariable</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">PutMapping</span></span><span class="token punctuation">;</span><span class="token comment">/** * @author bear */</span><span class="token annotation punctuation">@FeignClient</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"cloud-goods-service"</span><span class="token punctuation">,</span> path <span class="token operator">=</span> <span class="token string">"/goods"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">GoodsDemoService</span> <span class="token punctuation">{</span>    <span class="token comment">/**     * 减库存     *     * @param goodsId 商品id     * @return Boolean     */</span>    <span class="token annotation punctuation">@PutMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/{goodsId}"</span><span class="token punctuation">)</span>    <span class="token class-name">Boolean</span> <span class="token function">deStock</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"goodsId"</span><span class="token punctuation">)</span> <span class="token keyword">int</span> goodsId<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>OpenFeign：ShopCartDemoService</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>bear<span class="token punctuation">.</span>order<span class="token punctuation">.</span>openfeign</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>openfeign<span class="token punctuation">.</span></span><span class="token class-name">FeignClient</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">DeleteMapping</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">GetMapping</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">PathVariable</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestParam</span></span><span class="token punctuation">;</span><span class="token comment">/** * @author bear */</span><span class="token annotation punctuation">@FeignClient</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"cloud-shopcart-service"</span><span class="token punctuation">,</span> path <span class="token operator">=</span> <span class="token string">"/shop-cart"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ShopCartDemoService</span> <span class="token punctuation">{</span>    <span class="token comment">/**     * 查询商品     *     * @param cartId 购物项id     * @return int     */</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/getGoodsId"</span><span class="token punctuation">)</span>    <span class="token keyword">int</span> <span class="token function">getGoodsId</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"cartId"</span><span class="token punctuation">)</span> <span class="token keyword">int</span> cartId<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">/**     * 删除购物车商品     *     * @param cartId 购物项id     * @return Boolean     */</span>    <span class="token annotation punctuation">@DeleteMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/{cartId}"</span><span class="token punctuation">)</span>    <span class="token class-name">Boolean</span> <span class="token function">deleteItem</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"cartId"</span><span class="token punctuation">)</span> <span class="token keyword">int</span> cartId<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>编写订单服务中的service层代码:</strong> <strong>OrderService</strong></p><p>这个方法主要是模拟订单生成的过程，接收参数为购物项id，方法上方也加上了@Transactional事务注解。执行逻辑如下：</p><ol><li>调用购物车服务获取将要扣减库存的商品id。</li><li>调用商品服务进行扣减库存的操作。</li><li>调用购物车服务删除当前的购物车数据。</li><li>如果两个服务都调用成功，则生成订单数据。</li><li>向订单表中新增一条记录，根据订单操作的SQL返回内容，返回成功或者失败。</li></ol><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>bear<span class="token punctuation">.</span>order<span class="token punctuation">.</span>service</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>bear<span class="token punctuation">.</span>order<span class="token punctuation">.</span>openfeign<span class="token punctuation">.</span></span><span class="token class-name">GoodsDemoService</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>bear<span class="token punctuation">.</span>order<span class="token punctuation">.</span>openfeign<span class="token punctuation">.</span></span><span class="token class-name">ShopCartDemoService</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span><span class="token class-name">JdbcTemplate</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Service</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>transaction<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Transactional</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Resource</span></span><span class="token punctuation">;</span><span class="token comment">/** * @author bear */</span><span class="token annotation punctuation">@Service</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OrderService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Resource</span>    <span class="token keyword">private</span> <span class="token class-name">JdbcTemplate</span> jdbcTemplate<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Resource</span>    <span class="token keyword">private</span> <span class="token class-name">GoodsDemoService</span> goodsDemoService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Resource</span>    <span class="token keyword">private</span> <span class="token class-name">ShopCartDemoService</span> shopCartDemoService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Transactional</span><span class="token punctuation">(</span>rollbackFor <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token class-name">RuntimeException</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">Boolean</span> <span class="token function">saveOrder</span><span class="token punctuation">(</span><span class="token keyword">int</span> cartId<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">// 简单的模拟下单流程，包括服务间的调用流程。</span>        <span class="token comment">// 调用购物车服务-获取即将操作的goods_id</span>        <span class="token keyword">int</span> goodsId <span class="token operator">=</span> shopCartDemoService<span class="token punctuation">.</span><span class="token function">getGoodsId</span><span class="token punctuation">(</span>cartId<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 调用商品服务-减库存</span>        <span class="token class-name">Boolean</span> goodsResult <span class="token operator">=</span> goodsDemoService<span class="token punctuation">.</span><span class="token function">deStock</span><span class="token punctuation">(</span>goodsId<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 调用购物车服务-删除当前购物车数据</span>        <span class="token class-name">Boolean</span> cartResult <span class="token operator">=</span> shopCartDemoService<span class="token punctuation">.</span><span class="token function">deleteItem</span><span class="token punctuation">(</span>cartId<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 执行下单逻辑</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>goodsResult <span class="token operator">&amp;&amp;</span> cartResult<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment">// 向订单表中新增一条记录</span>            <span class="token keyword">int</span> orderResult <span class="token operator">=</span> jdbcTemplate<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token string">"insert into tb_order(`cart_id`) value (\""</span> <span class="token operator">+</span> cartId <span class="token operator">+</span> <span class="token string">"\")"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> orderResult <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>订单接口 CloudOrderApi</li></ul><blockquote><p>编写saveOrder()方法，接收cartId参数，然后调用OrderService业务类的saveOrder()方法。</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>bear<span class="token punctuation">.</span>order<span class="token punctuation">.</span>controller</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>bear<span class="token punctuation">.</span>order<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">OrderService</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">GetMapping</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestParam</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RestController</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Resource</span></span><span class="token punctuation">;</span><span class="token comment">/** * @description: 订单接口 * @author: bear * @date: 2022-10-25 **/</span><span class="token annotation punctuation">@RestController</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CloudOrderApi</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Resource</span>    <span class="token keyword">private</span> <span class="token class-name">OrderService</span> orderService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/order/saveOrder"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">Boolean</span> <span class="token function">saveOrder</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">"cartId"</span><span class="token punctuation">)</span> <span class="token keyword">int</span> cartId<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> orderService<span class="token punctuation">.</span><span class="token function">saveOrder</span><span class="token punctuation">(</span>cartId<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>启动主类</li></ul><blockquote><p>要开启扫描 OpenFeign </p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@SpringBootApplication</span><span class="token annotation punctuation">@EnableFeignClients</span><span class="token punctuation">(</span>clients<span class="token operator">=</span><span class="token punctuation">{</span><span class="token class-name">ShopCartDemoService</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">GoodsDemoService</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OrderServiceApplication</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>   <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">OrderServiceApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="第三步：功能测试-2"><a href="#第三步：功能测试-2" class="headerlink" title="第三步：功能测试"></a>第三步：功能测试</h5><p>启动 order-service-demo 项目</p><p><img src="https://bearcad.oss-cn-shanghai.aliyuncs.com/Code/Nacos03.png" alt="Nacos启动"></p><p>测试生成订单的接口是否正常，测试URL如下：</p><p>GET <a href="https://link.juejin.cn/?target=http://localhost:8157/order/saveOrder?cartId=3">http://localhost:8153/order/saveOrder?cartId=3</a></p><p>测试结果如下图所示：</p><p><img src="https://bearcad.oss-cn-shanghai.aliyuncs.com/Code/Postman04.png" alt="Postman测试"></p><p>接口请求成功。</p><p>去数据库中查看，此时订单表中的结果如下图所示：</p><p><img src="https://bearcad.oss-cn-shanghai.aliyuncs.com/Code/SQL06.png" alt="数据库结果"></p><p>生成了一条订单数据。</p><p>然后再去查看商品表和购物车表的记录，对应的商品库存字段已经被扣减</p><p><img src="https://bearcad.oss-cn-shanghai.aliyuncs.com/Code/SQL04.png" alt="数据库结果"></p><p>对应的购物项也被删除</p><p>数据与预期结果一致，编码完成。</p><h1 id="二、分布式事务问题演示"><a href="#二、分布式事务问题演示" class="headerlink" title="二、分布式事务问题演示"></a>二、分布式事务问题演示</h1><p>在订单服务编码完成后演示的是一切都正常的情况：订单记录生成并存储至数据库，且商品库存扣减成功，且购物车数据成功删除。这也是最终期待的结果。比如商品没有扣减成功，那么购物车中的数据不应该删除，订单记录也不应该落库成功。比如订单记录没有成功生成，则商品不应该扣减库存，购物车中的数据也不应该删除。</p><p>如果在saveOrder()方法执行期间，某些环节出现问题，比如网络波动或者代码中出现异常，则会出现数据不一致的问题。接下来，我们就以<strong>网络异常</strong>和<strong>代码异常</strong>这两种问题来模拟分布式项目中会出现的数据不一致的问题。</p><h2 id="1-模拟网络异常的问题"><a href="#1-模拟网络异常的问题" class="headerlink" title="1. 模拟网络异常的问题"></a>1. 模拟网络异常的问题</h2><p>比如，在商品服务的扣减库存的接口中故意加上一行休眠10秒的代码。</p><p>代码如下：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@PutMapping</span><span class="token punctuation">(</span><span class="token string">"/goods/{goodsId}"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">Boolean</span> <span class="token function">deStock</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">"goodsId"</span><span class="token punctuation">)</span> <span class="token keyword">int</span> goodsId<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment">// 减库存操作</span>    <span class="token keyword">int</span> result <span class="token operator">=</span> jdbcTemplate<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token string">"update tb_goods set goods_stock=goods_stock-1 where goods_id="</span> <span class="token operator">+</span> goodsId<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 模拟网络异常</span>    <span class="token keyword">try</span> <span class="token punctuation">{</span>        <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">10</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>        e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> result <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>重启服务，然后重新测试订单生成接口</p><p>测试地址：<a href="https://link.juejin.cn/?target=http://localhost:8157/order/saveOrder?cartId=4">http://localhost:8153/order/saveOrder?cartId=4</a></p><p>结果出现了异常信息，生成订单的接口没有返回成功的响应。</p><p><img src="https://bearcad.oss-cn-shanghai.aliyuncs.com/Code/Postman05.png" alt="Postman测试"></p><p>控制台报出的异常信息如下：</p><p><img src="https://bearcad.oss-cn-shanghai.aliyuncs.com/Code/Order01.png" alt="异常"></p><p>由于在配置文件中，配置了OpenFeign的超时时间为5秒，所以saveOrder()方法执行到扣减库存这里就会出现超时的问题，也就不会继续进行下去了。</p><p>但是查看三个数据库中的数据，可以发现一个问题：<strong>订单没有新增、购物车数据没删除，但是商品库存却扣减成功了！</strong>这就出现了数据不一致的问题。</p><h2 id="2-模拟代码异常的问题"><a href="#2-模拟代码异常的问题" class="headerlink" title="2. 模拟代码异常的问题"></a>2. 模拟代码异常的问题</h2><p>接着，屏蔽网络异常这个问题，<strong>把商品服务中模拟超时的休眠代码注释掉</strong>。</p><p>在订单服务中，模拟代码异常的问题。</p><p>修改OrderService中的 saveOrder()方法，添加一行执行会出现异常的代码，如下所示：</p><p><img src="https://bearcad.oss-cn-shanghai.aliyuncs.com/Code/Order02.png" alt="异常的代码"></p><p><strong>重启所有服务！！</strong></p><p>然后请求测试地址：<a href="https://link.juejin.cn/?target=http://localhost:8157/order/saveOrder?cartId=5">http://localhost:8153/order/saveOrder?cartId=5</a></p><p><img src="https://bearcad.oss-cn-shanghai.aliyuncs.com/Code/Postman06.png" alt="Postman测试"></p><p>结果同样是出现了异常信息，生成订单的接口没有返回成功的响应。</p><p>此时，控制台报出的异常信息如下：</p><p><img src="https://bearcad.oss-cn-shanghai.aliyuncs.com/Code/Order03.png" alt="异常"></p><p>查看三个数据库中的数据，现象如下：订单数据没有新增，但是购物车数据删除了，商品库存也扣减成功了！</p><p>分析原因：在执行到int i=1/0;这一行代码前是执行了向订单表中新增一条记录的SQL请求的，然而由于业务层方法中出现了异常以及该方法上标注了@Transactional注解，捕捉到异常后数据回滚了。</p><p>因此，订单表中是没有新增数据的。另外两个服务中的代码中并没有发生异常，数据是会正常落库的。</p><p>数据不一致的问题就出现了。</p><p>不止是微服务架构，在常见的分布式架构中，由于数据库的分割、项目代码的分割，导致事务并不在同一个事务管理器中，分布式事务的问题就出现了。</p><p>分布式事务的定义如下：</p><blockquote><p><strong>分布式事务是指事务的参与者、支持事务的服务器、资源服务器以及事务管理器分别位于不同的分布式系统的不同节点之上。</strong></p></blockquote><h1 id="三、分布式事务解决方案及Seata搭建"><a href="#三、分布式事务解决方案及Seata搭建" class="headerlink" title="三、分布式事务解决方案及Seata搭建"></a>三、分布式事务解决方案及Seata搭建</h1><h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1. 前言"></a>1. 前言</h2><blockquote><p>分布式事务这个问题并不是微服务架构中才出现的问题，而是分布式系统下很容易出现的事务问题，微服务架构只是分布式技术中的一种架构。</p><p>分布式场景中，要完成一个功能可能会涉及到多个数据库或者多个服务，也就会牵涉到跨数据库的事务操作。</p></blockquote><p>比如一个应用中的某个业务方法需要操作到多个数据库中的多张表，此时就出现了跨数据库的事务问题。</p><p>如果系统拆分时做了分库分表的操作，这种情况下也极有可能出现跨数据库的事务问题。</p><p>微服务架构下，各个服务都有自己独立的数据库系统。如果一个功能的实现过程中需要涉及多个服务，此时也会出现跨服务、跨数据库的事务问题。比如生成订单时需要订单服务、商品服务和购物车服务，各自的数据库又是独立的，跨数据库的事务问题也就出现了。</p><p><strong>在上述的跨数据库、跨分区、跨服务情况下，如果要保证一个方法中的SQL操作全部成功或者全部失败，则有些复杂。</strong></p><p>分布式事务这种问题存在已久，所以业内也有很多分布式事务的应对方案，比如常见的有二阶段提交（2PC）、三阶段提交（3PC）、TCC方案和最终一致性方案。</p><p>这些方案都是实现原理，算是一种顶层设计，如果要实际的应用到项目中，则需要使用这些方案所对应的实际软件产品。在Java开源领域能够提供分布式事务解决方案的软件中，比较有代表性的有Sharding JDBC、Atomikos、MyCat、Alibaba Seata等等。</p><p>在这些落地方案中，不管是基于长事务的方案还是基于消息通知的方案，都是对跨数据库事务的进一步抽象，形成一个新的事务概念。未加入分布式事务方案时，跨数据库的事务一致性是无法解决的，因为每个数据库都是独立的，其中的事务管理器也是独立的，互不干涉、互不影响。而上述的这些分布式事务解决方案，则是在数据库之外引入了一个新的角色，对整个流程进行进一步的抽象，在其中加入了一个<strong>协调者（或者说管理者）</strong>，此时就存在一个第三方的管理者来协调多个数据库事务。</p><p><img src="https://bearcad.oss-cn-shanghai.aliyuncs.com/Code/Seata01.png" alt="Seata"></p><p>我们使用 Alibaba Seata来作为解决分布式事务问题的组件，从技术支持、成熟度、社区活跃度等角度综合来看，Alibaba Seata都是非常优秀的分布式事务中间件。</p><p>以Seata组件为例，它就是一个跨数据库事务的第三方“管理者”，它把跨数据库、跨服务的分布式事务场景变成了一个拥有多个分支事务的全局事务。</p><p>通俗一些来说，就是用一条虚拟的绳子把原本独立的本地事务串联了起来，让这些跨数据库的本地事务变成了“一根绳上的蚂蚱”。</p><p><img src="https://bearcad.oss-cn-shanghai.aliyuncs.com/Code/Seata02.png" alt="Seata"></p><p>这样做的目的是为了解决分布式事务场景下的数据一致性问题，让全局事务下的分支事务要么全部成功，要么全部失败，所以Alibaba Seata中间件对跨多数据库的多个独立事务做了进一步的抽象，形成了全局事务的概念。</p><p><strong>使用前面的saveOrder方法举例：</strong></p><p>订单的SQL操作、购物车SQL操作和商品的SQL操作都是在各自的数据库中进行的，如果不加入分布式事务组件，则数据一致性不能完全保证。</p><p>而加入分布式事务组件后，saveOrder这个操作下的所有跨数据库的事务就会被抽象为一个全局事务S，订单事务被抽象为分支事务branch-o，购物车事务被抽象为分支事务branch-s，商品服务被抽象为分支事务branch-g，在分布式事务组件的协调下，全局事务S下的branch-o、branch-s、branch-g要么全部成功，此时会生成一条订单数据、购物车数据被删除、商品库存被扣减。要么全部失败，此时不会生成新的订单数据、购物车数据不会删除、商品库存不变。</p><p>只有所有的分支事务都成功了，全局事务才算成功（Commit）。只要有一个分支事务失败了，则全部分支事务失败，所有的分支事务全部都会回滚（Rollback）。</p><p><strong>延伸起来理解，加入全局事务的概念和技术实现后，所有跨数据库的本地事务都成为了全局事务中的一个分支。在全局事务管理器的协调下，所有本地事务（即分支事务）中执行的SQL语句，要么全部都执行，要么全部都不执行。</strong></p><h2 id="2-认识-Alibaba-Seata"><a href="#2-认识-Alibaba-Seata" class="headerlink" title="2. 认识 Alibaba Seata"></a>2. 认识 Alibaba Seata</h2><blockquote><p><strong>Seata是一款开源的分布式事务解决方案，致力于提供高性能和简单易用的分布式事务服务。</strong></p></blockquote><p>Seata为用户提供了AT、TCC、SAGA和XA事务模式，为用户打造一站式的分布式解决方案，官方社区：<a href="https://seata.io/zh-cn/">Seata官网</a></p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/228333/1666686384970-92e5dd59-981e-4e38-a23f-22933b13be87.png?x-oss-process=image/resize,w_1500,limit_0"></p><p>Seata 是一款开源的分布式事务解决方案，致力于在微服务架构下提供高性能和简单易用的分布式事务服务。</p><p>在 Seata 开源之前，其内部版本在阿里经济体内部一直扮演着应用架构层数据一致性的中间件角色，帮助经济体平稳的度过历年的双11，对上层业务进行了有力的技术支撑。经过多年沉淀与积累，于<strong>2019年1月</strong>正式宣布对外开源，并以社区共建的形式帮助用户快速落地分布式事务解决方案。</p><h2 id="3-下载-Seata-Sever-安装包"><a href="#3-下载-Seata-Sever-安装包" class="headerlink" title="3. 下载 Seata Sever 安装包"></a>3. 下载 Seata Sever 安装包</h2><p>Seata安装包的下载地址为：<a href="https://github.com/seata/seata/releases">Seata安装包</a></p><p>根据官方推荐的毕业版本推荐，我们选择V1.4.2版本下载</p><p><a href="https://github.com/seata/seata/releases/download/v1.4.2/seata-server-1.4.2.zip">https://github.com/seata/seata/releases/download/v1.4.2/seata-server-1.4.2.zip</a></p><p>下载成功后，会得到一个名称为seata-server-1.4.2.zip的文件，解压后的目录结构如下：</p><ul><li>bin：存放启动Seata Server的脚本文件</li><li>conf：Seata Server的配置目录</li><li>lib：Seata Server的Jar包存放目录</li><li>logs：存放日志文件</li></ul><p>下载解压后，还需要对一些关键配置做一些更改。</p><h2 id="4-Seata-Server-的持久化配置"><a href="#4-Seata-Server-的持久化配置" class="headerlink" title="4. Seata Server 的持久化配置"></a>4. Seata Server 的持久化配置</h2><p>首先是更改Seata Server的持久化配置。Seata Server作为全局事务的管理者，需要记录和存储一些数据，因此需要存储介质来做数据持久化的工作。</p><p><strong>Seata支持file、db、redis三种持久化模式</strong>。</p><p>file是本地文件，db就是数据库，比如MySQL、Oracle、OceanBase等，redis就是使用Redis作为存储介质。默认情况下，Seata使用本地文件来做持久化工作，本地文件的方式不适合后期Seata Server的集群拓展，因此建议把Seata Server持久化方案修改为db或者redis的方式。这里我们使用MySQL来做Seata Server的持久化工作。</p><p>接下来，是具体的操作流程。</p><p>Seata安装目录下的conf文件夹中，有一个名称为file.conf的文件，这个文件就是用来配置Seata Server持久化方式的。打开这个文件，做如下修改：</p><p><strong>第一步，修改存储方式</strong></p><p>将mode配置修改为db，代码如下：</p><pre class="line-numbers language-nginx" data-language="nginx"><code class="language-nginx"><span class="token directive"><span class="token keyword">store</span></span> <span class="token punctuation">{</span>  <span class="token comment">## store mode: file、db、redis</span>  mode = "db"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><strong>第二步，配置MySQL的连接信息</strong></p><p>相关的配置项同样是在file.conf文件中，只需要把数据库地址、登录用户和登录密码修改成自己的，然后其它配置项使用默认的即可。</p><p>最终配置内容如下所示：</p><pre class="line-numbers language-nginx" data-language="nginx"><code class="language-nginx"><span class="token comment">## transaction log store, only used in seata-server</span><span class="token directive"><span class="token keyword">store</span></span> <span class="token punctuation">{</span>  <span class="token comment">## store mode: file、db、redis</span>  <span class="token directive"><span class="token keyword">mode</span> = <span class="token string">"db"</span>  <span class="token comment">## database store property</span>  db</span> <span class="token punctuation">{</span>    <span class="token comment">## the implement of javax.sql.DataSource, such as DruidDataSource(druid)/BasicDataSource(dbcp)/HikariDataSource(hikari) etc.</span>    datasource = "druid"    <span class="token comment">## mysql/oracle/postgresql/h2/oceanbase etc.</span>    dbType = "mysql"    driverClassName = "com.mysql.cj.jdbc.Driver"    <span class="token comment">## if using mysql to store the data, recommend add rewriteBatchedStatements=true in jdbc connection param</span>        <span class="token comment">## 修改为你的数据库地址连接，数据库名称为seata_server_db（可自行定义）</span>    url = "jdbc:mysql://127.0.0.1:3306/seata_server_db?rewriteBatchedStatements=true&amp;useUnicode=true&amp;characterEncoding=utf8&amp;autoReconnect=true&amp;useSSL=false"    <span class="token comment">## 修改为你的数据库登录用户</span>    user = "root"    <span class="token comment">## 修改为你的数据库登录密码</span>    password = "123456"    minConn = 5    maxConn = 100    globalTable = "global_table"    branchTable = "branch_table"    lockTable = "lock_table"    queryLimit = 100    maxWait = 5000  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>第三步，新建数据库并创建表结构</strong></p><p>新建 seata_server_db 数据库，导入Seata Server所需的表结构。</p><p>具体的建表语句Seata官方已经提供了，地址如下：</p><p><a href="https://github.com/seata/seata/blob/develop/script/server/db/mysql.sql">建表语句</a></p><p>这些字段的定义中，某些参数是可以根据自身系统进行修改的。</p><p>比如lock_table表中的table_name字段，由于部分业务表的表名太长导致超出了32个长度，在执行分布式事务流程时就会报错。那么在建表时就可以把这个字段的长度增大，这一点需要格外注意。</p><p>执行成功后的数据库结构如下图所示：</p><p><img src="https://bearcad.oss-cn-shanghai.aliyuncs.com/Code/SQL08.png" alt="建表结构"></p><p>这个数据库与微服务中的数据库并没有什么关系，把它当作是Seata Server中间件的一个部分即可。</p><h2 id="5-Seata-Server-整合-Nacos"><a href="#5-Seata-Server-整合-Nacos" class="headerlink" title="5. Seata Server 整合 Nacos"></a>5. Seata Server 整合 Nacos</h2><p>配置好Seata Server持久化之后，还要考虑一个问题：<strong>存在分布式事务的微服务实例是如何与Seata组件通信的呢？</strong></p><p>在微服务架构下，当然离不开服务注册与服务发现的机制。此时又要请出老朋友Nacos了。</p><p>Seata Server是可以作为一个服务实例注册到Nacos服务中心的，进而需要引入分布式事务组件的微服务（比如订单服务、购物车服务和商品服务）就能够通过服务发现与Seata Server进行通信。</p><p>接下来，我们看一下如何设置Seata Server的服务注册功能。</p><p>Seata安装目录下的conf文件夹中，有一个名称为registry.conf的文件，这个文件就是用来配置Seata Server服务发现功能的。</p><p>打开这个文件，作如下修改。</p><p><strong>第一步，修改服务中心的技术选型</strong></p><p>默认为file，同样也支持nacos 、eureka、redis、zk、consul、etcd3、sofa等服务中心。</p><p>这里就需要把type配置修改为nacos，代码如下：</p><pre class="line-numbers language-nginx" data-language="nginx"><code class="language-nginx"><span class="token directive"><span class="token keyword">registry</span></span> <span class="token punctuation">{</span>  <span class="token comment"># file 、nacos 、eureka、redis、zk、consul、etcd3、sofa</span>  type = "nacos"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><strong>第二步，配置Nacos的连接信息</strong></p><p>相关的配置项同样是在registry.conf文件中，只需要把Nacos服务中心的相关连接信息配置上即可。</p><p>最终配置内容如下所示：</p><pre class="line-numbers language-nginx" data-language="nginx"><code class="language-nginx"><span class="token directive"><span class="token keyword">registry</span></span> <span class="token punctuation">{</span>  <span class="token comment"># file 、nacos 、eureka、redis、zk、consul、etcd3、sofa</span>  <span class="token directive"><span class="token keyword">type</span> = <span class="token string">"nacos"</span>  nacos</span> <span class="token punctuation">{</span>    application = "seata-server"    serverAddr = "127.0.0.1:8848"    group = "DEFAULT_GROUP"    namespace = "public"    cluster = "default"    username = "nacos"    password = "nacos"  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="6-启动-Seata-Server"><a href="#6-启动-Seata-Server" class="headerlink" title="6. 启动 Seata Server"></a>6. 启动 Seata Server</h2><p>启动方式比较简单，Seata安装目录下的bin文件夹下存放着启动Seata Server的脚本文件。</p><p>根据操作系统的不同，选择直接运行 seata-server.sh 文件或者 seata-server.bat 文件即可</p><p><img src="https://bearcad.oss-cn-shanghai.aliyuncs.com/Code/Seata04.png" alt="启动Seata"></p><p>Seata启动失败报错如上，经baidu，原因是jdk17版本太高，切换到8</p><p><img src="https://bearcad.oss-cn-shanghai.aliyuncs.com/Code/Seata05.png" alt="版本切换"></p><p>重新启动Seata，启动成功，默认端口是 8091</p><p><img src="https://bearcad.oss-cn-shanghai.aliyuncs.com/Code/Seata06.png" alt="启动Seata"></p><p>Seata Server启动成功的同时，MySQL数据源对象也初始化成功，即成功连接到MySQL数据库了。</p><p>之后还需要验证Seata Server服务注册流程是否成功。</p><p>进入Nacos控制台，点击“服务管理”中的服务列表，可以看到列表中已经存在seata-server服务的服务信息，如下图所示：</p><p><img src="https://bearcad.oss-cn-shanghai.aliyuncs.com/Code/Nacos04.png" alt="Nacos启动"></p><p>启动Seata Server过程中还有可能遇到的问题，列举如下：</p><ul><li>数据库无法连接，检查一下数据库连接信息的配置是否正确。还有就是driverClassName配置项，新版本（5.7及以上版本）的MySQL需要使用com.mysql.cj.jdbc.Driver这个驱动类。</li><li>服务中心无法连接，检查一下配置文件，看看具体的报错信息。</li><li>端口占用。默认端口为8091，可能是重复启动了Seata Server，关闭重复的进程即可。或者通过-p参数修改Seata Server的启动端口号。</li></ul><p>在启动时一定要关注启动日志，有任何问题都会在日志信息中详细的打印出来，看到错误日志后再针对性的处理即可。</p><p>搭建Seata Server并不复杂：</p><ul><li>首先配置它的持久化模式，创建数据库并导入数据库和表并修改file.conf配置文件。</li><li>其次是配置Seata Server的服务注册，修改registry.conf文件中的内容即可。</li><li>最后就是执行命令来启动Seata Server了。</li></ul>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Axios网络请求</title>
      <link href="/2022/04/20/axios-wang-luo-qing-qiu/"/>
      <url>/2022/04/20/axios-wang-luo-qing-qiu/</url>
      
        <content type="html"><![CDATA[<h2 id="（4-20）axios网络请求"><a href="#（4-20）axios网络请求" class="headerlink" title="（4.20）axios网络请求"></a>（4.20）axios网络请求</h2><h4 id="一、axios简单介绍"><a href="#一、axios简单介绍" class="headerlink" title="一、axios简单介绍"></a>一、axios简单介绍</h4><h6 id="1、前端ajax框架选型"><a href="#1、前端ajax框架选型" class="headerlink" title="1、前端ajax框架选型"></a>1、前端ajax框架选型</h6><ul><li>XMLHTTPRequest</li><li>jQuery</li><li>Vue &amp; axios <ul><li>Vuel.x -&gt; vue-resource</li><li>Vue2.x -&gt; axios</li></ul></li></ul><h6 id="2、axios简介及优势"><a href="#2、axios简介及优势" class="headerlink" title="2、axios简介及优势"></a>2、axios简介及优势</h6><ul><li>基于Promise</li><li>用在浏览器和NodeJS环境</li><li>是一个HTTP请求类库</li></ul><ol><li>支持从浏览器中创建XMLHttpRequests</li><li>支持从node.js创建http请求（这个是其他框架不具备的）</li><li>支持PromiseAPI(最重要特点）</li><li>支持拦截器，拦截请求和响应（核心功能）</li><li>支持转换请求数据和响应数据（核心功能）</li><li>自动转换JSON数据（核心功能）</li><li>客户端支持防御XSRF攻击</li></ol><h6 id="3、支持多种请求方法"><a href="#3、支持多种请求方法" class="headerlink" title="3、支持多种请求方法"></a>3、支持多种请求方法</h6><ul><li>request(config)</li><li>get(url[, config])</li><li>delete(url[,config])</li><li>head(url[,config])</li><li>post ( url[ , data[ , config]] )</li><li>put(url[, data[, config])</li><li>patch ( url[ , data [ , config]] )</li></ul><h6 id="4、浏览器兼容性"><a href="#4、浏览器兼容性" class="headerlink" title="4、浏览器兼容性"></a>4、浏览器兼容性</h6><h4 id="二、axios的基本用法"><a href="#二、axios的基本用法" class="headerlink" title="二、axios的基本用法"></a>二、axios的基本用法</h4><h6 id="1、安装使用axios"><a href="#1、安装使用axios" class="headerlink" title="1、安装使用axios"></a>1、安装使用axios</h6><ul><li>文件引用方式</li><li>npm安装方式</li><li>yarn安装方式</li><li>在vue项目中引入axios模块</li></ul><h6 id="2、axios基本概念"><a href="#2、axios基本概念" class="headerlink" title="2、axios基本概念"></a>2、axios基本概念</h6><ul><li>提供免费的HTTP请求及相应服务网站h团体票   <a href="http://httpbin.org/">http://httpbin.org</a></li><li>使用axios(config)发送http请求， config为该请求的配置信息对象</li><li>axios是基于Promise的HTTP客户端， 所以可以使用then、catch对请求结果进行处理。</li></ul><h6 id="3、axios发送GET请求"><a href="#3、axios发送GET请求" class="headerlink" title="3、axios发送GET请求"></a>3、axios发送GET请求</h6><ul><li>axios.get等同于axios使用method:get</li><li>get请求可以在ur上带参数，或者使用params传参</li></ul><h6 id="4、axios发送POST请求"><a href="#4、axios发送POST请求" class="headerlink" title="4、axios发送POST请求"></a>4、axios发送POST请求</h6><ul><li>axios. post等同于axios使用method:post</li><li>post请求使用data传参</li></ul><h6 id="5、axios发送并行请求"><a href="#5、axios发送并行请求" class="headerlink" title="5、axios发送并行请求"></a>5、axios发送并行请求</h6><ul><li>某些异步网络请求结果处理有一定的顺序</li><li>axios. all()</li></ul><h4 id="三、axios的配置详解"><a href="#三、axios的配置详解" class="headerlink" title="三、axios的配置详解"></a>三、axios的配置详解</h4><h6 id="1、常用数据格式"><a href="#1、常用数据格式" class="headerlink" title="1、常用数据格式"></a>1、常用数据格式</h6><ul><li>JSON数据格式</li><li>表单数据格式</li></ul><h6 id="2、文件上传与下载进度"><a href="#2、文件上传与下载进度" class="headerlink" title="2、文件上传与下载进度"></a>2、文件上传与下载进度</h6><ul><li>onDownloadProgress</li><li>onUploadProgress</li></ul><h6 id="3、axios请求配置"><a href="#3、axios请求配置" class="headerlink" title="3、axios请求配置"></a>3、axios请求配置</h6><h6 id="4、axios响应数据结构"><a href="#4、axios响应数据结构" class="headerlink" title="4、axios响应数据结构"></a>4、axios响应数据结构</h6><h6 id="5、axios全局配置"><a href="#5、axios全局配置" class="headerlink" title="5、axios全局配置"></a>5、axios全局配置</h6><ul><li>针对大部分一致的内容，可以采用全局配置。</li><li>请求服务端根地址baseURL,通常是很多api使用统-的地址提供服务。</li><li>Authorization的用户名密码信息等，不需要每次请求都进行设置</li><li>timeout请求超时时间，也不需要每次请求都单独设置</li><li>全局设置的方式<ul><li>axios. defaults baseURL = “<a href="https://api.example.com&quot;/">https://api.example.com"</a>;</li><li>axios. defaults headers .common[‘Authorization] = AUTH_TOKEN;</li></ul></li><li>配置的优先级:当defaults全 局配置与局部config配置发生冲突的时候，局部config配置的优先级要高于全局配置。</li></ul><h4 id="四、axios的实例与拦截器"><a href="#四、axios的实例与拦截器" class="headerlink" title="四、axios的实例与拦截器"></a>四、axios的实例与拦截器</h4><h6 id="1、axios多实例的必要性"><a href="#1、axios多实例的必要性" class="headerlink" title="1、axios多实例的必要性"></a>1、axios多实例的必要性</h6><ul><li><p><img src="https://bearcad.oss-cn-shanghai.aliyuncs.com/%E7%AC%94%E8%AE%B0/014.png"></p></li><li><p>根据请求不同的服务主体，创建多个axios实例</p></li></ul><h6 id="2、创建axios实例"><a href="#2、创建axios实例" class="headerlink" title="2、创建axios实例"></a>2、创建axios实例</h6><ul><li>```js<br>import Vue from ‘vue’<br>import App from ‘./App.vue’import qs from “qs”;<br>import axios from “axios”;//Vue2 全局挂载<br>Vue.prototype.$axios = axios;<br>//axios.defaults.baseURL = “<a href="http://httpbin.org&quot;/">http://httpbin.org"</a><br>Vue.prototype.$qs = qs;let instance = axios.create({<br>  baseURL: “<a href="http://httpbin.org&quot;/">http://httpbin.org"</a>,<br>});// instanceof.defaults.headers.common[‘Authorization’] = AUTH_TOKEN;Vue.config.productionTip = false;new Vue({<br>  render: h =&gt; h(App),<br>}).$mount(‘#app’)<pre class="line-numbers language-none"><code class="language-none">###### 3、axios拦截器拦截器的作用就是针对所有请求和响应做拦截,所谓的拦截就是统一修改请求或响应的内容、参数、配置等信息- request拦截器  - 统一给请求加上JWT令牌、loading处理      ```js    //request 拦截器    instance.interceptors.request.use(      (config) =&gt; {        //根据条件加入token- 安全携带        if (true) {          //需自定义          //让每个请求携带token          config.headers["JWT-TOKEN"] = "";        }        return config;      }    ),    (error) =&gt; {      // 请求错误处理      return Promise.reject(error);    };<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>response拦截器<ul><li>统一响应数据解析、统一的异常处理</li></ul></li></ul><h4 id="附加"><a href="#附加" class="headerlink" title="附加"></a>附加</h4><h6 id="1、技术导航网站开发"><a href="#1、技术导航网站开发" class="headerlink" title="1、技术导航网站开发"></a>1、技术导航网站开发</h6><ul><li>集成Vuetify框架<ul><li>创建Vuetify：vue create vuetify-demo</li></ul></li><li>Vuetify布局<ul><li>字体图标本地化：npm add @mdi/font -D</li><li>添加字体：npm add typeface-roboto -D</li></ul></li><li>导航网站组件开发</li></ul>]]></content>
      
      
      <categories>
          
          <category> Axios </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Axios </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>端路由VueRouter&amp;&amp;Vuex应用状态管理</title>
      <link href="/2022/04/17/qian-duan-lu-you-vuerouter/"/>
      <url>/2022/04/17/qian-duan-lu-you-vuerouter/</url>
      
        <content type="html"><![CDATA[<h2 id="前端路由VueRouter-amp-amp-Vuex应用状态管理"><a href="#前端路由VueRouter-amp-amp-Vuex应用状态管理" class="headerlink" title="前端路由VueRouter&amp;&amp;Vuex应用状态管理"></a>前端路由VueRouter&amp;&amp;Vuex应用状态管理</h2><h3 id="一、单页面应用与前端路由"><a href="#一、单页面应用与前端路由" class="headerlink" title="一、单页面应用与前端路由"></a>一、单页面应用与前端路由</h3><h4 id="（一）单页面应用SPA介绍"><a href="#（一）单页面应用SPA介绍" class="headerlink" title="（一）单页面应用SPA介绍"></a>（一）单页面应用SPA介绍</h4><blockquote><p>单页Web应用（single page web application，SPA），就是只有一张Web页面的应用，是加载单个HTML 页面并在用户与应用程序交互时动态更新该页面的Web应用程序。 </p></blockquote><p><strong>主要特点</strong></p><ul><li> 速度：更好的用户体验，让用户在web app感受native app的速度和流畅 </li><li> MVVM：经典MVVM开发模式，前后端各负其责 </li><li> ajax：重前端，业务逻辑全部在本地操作，数据都需要通过AJAX同步、提交 </li><li> 路由：在URL中采用#号来作为当前视图的地址,改变#号后的参数，页面并不会重载 </li></ul><p><img src="https://cdn.jsdelivr.net/gh/Radicalfive/MK-image@master/image.3cshcr93x680.webp" alt="image"></p><h4 id="（二）前端路由的两种实现方式"><a href="#（二）前端路由的两种实现方式" class="headerlink" title="（二）前端路由的两种实现方式"></a>（二）前端路由的两种实现方式</h4><ul><li><p>**hash #**模式</p><ul><li>window对象的location属性值里的 hash属性可以拿到hash值：window.location.hash。</li><li>window对象的全局方法hashchange()可以<strong>监听</strong>到hash值得变化。 </li></ul></li><li><p>history模式</p><ol><li>pushState()</li><li>replaceState()</li></ol></li><li><p>```js<br> const router = new VueRouter({<br>   routes,<br>   mode: “history”,<br> });</p> <pre class="line-numbers language-none"><code class="language-none">![image](https://cdn.jsdelivr.net/gh/Radicalfive/MK-image@master/image.36u82t97tli0.webp)#### （三）单页面应用的优缺点- **优点**  - 良好的交互体验  - 良好的前后端工作分离模式  - 减轻服务器压力- **缺点**  - 首屏加载慢**（解决办法：vue-router懒加载）**  - 使用CDN加速   - 异步加载组件   - 服务端渲染  ## 二、安装与配置VueRouter ###### 1、 已有项目中手动安装VueRouter## 三、VueRouter开发第一个Demo###### 1、创建被路由的组件###### 2、配置组件与路由路径的映射关系###### 3、在父组件中使用路由及子组件## 四、路由重定向与组件懒加载#### 概念：&gt; 路由重定向：将你原来在转发列表中发向一台路由的路径改成另外一条路径，也就相当于让你的数据走另外一条路到服务器&gt;&gt; 懒加载： 延迟加载或按需加载，即在需要的时候进行加载 -  异步组件懒加载方式 - ```js  const Home = () =&gt; import("../views/Home");  const Article = () =&gt; import("../components/Article");  const News = () =&gt; import("../components/News");<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><p><strong>路由重定向</strong></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> routes <span class="token operator">=</span> <span class="token punctuation">[</span>  <span class="token punctuation">{</span>    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">"/"</span><span class="token punctuation">,</span>    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"layout"</span><span class="token punctuation">,</span>    <span class="token literal-property property">component</span><span class="token operator">:</span> Layout<span class="token punctuation">,</span>  <span class="token punctuation">}</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="五、嵌套路由的配置实现"><a href="#五、嵌套路由的配置实现" class="headerlink" title="五、嵌套路由的配置实现"></a>五、嵌套路由的配置实现</h2><h3 id="5-1-什么是嵌套路由"><a href="#5-1-什么是嵌套路由" class="headerlink" title="5.1 什么是嵌套路由"></a>5.1 什么是嵌套路由</h3><blockquote><p>嵌套路由就是在路由里面嵌套它的子路由。</p></blockquote><h3 id="5-2-嵌套路由的实现"><a href="#5-2-嵌套路由的实现" class="headerlink" title="5.2 嵌套路由的实现"></a>5.2 嵌套路由的实现</h3><ol><li>创建被路由的组件</li><li>配置组件与路由路径的映射关系</li><li>在父组件中加入router-view</li></ol><ul><li><p>需要注意,当一个父组件有多个子组件的时候,要在template里面加上一个唯一的根标签。如图中的div#home</p></li><li><p>另外注意:路由router-link的to属性,需要写完整的路由路径，如: “/home/article”，不能写” /article”</p></li></ul><p><strong>需要注意的规则</strong></p><ul><li>需要特别注意的一点是:根据不同的需求，router-link可以定义在任何组件内,不一定非要定义在对应的router-view的同一个父组件里面。只要router-link和router-view同时在浏览器内显示，在任何其他组件内触发router-link都会导致其对应的router-view发生组件切换。</li></ul><h2 id="六、动态路由的配置与实现"><a href="#六、动态路由的配置与实现" class="headerlink" title="六、动态路由的配置与实现"></a>六、动态路由的配置与实现</h2><h6 id="1、-含义"><a href="#1、-含义" class="headerlink" title="1、 含义"></a>1、 含义</h6><p><img src="https://cdn.jsdelivr.net/gh/Radicalfive/MK-image@master/image.1t040uty0x0g.webp" alt="image"></p><ul><li>动态路由可以传递参数，如上图中的id，根据不同的参数组件可以显示不同的内容。</li><li>动态路由可以实现路由导航,也就是匹配一个路由规则,从而显示该路由规则对应的组件。</li></ul><h6 id="2、动态路由的多段匹配"><a href="#2、动态路由的多段匹配" class="headerlink" title="2、动态路由的多段匹配"></a>2、动态路由的多段匹配</h6><p><img src="https://cdn.jsdelivr.net/gh/Radicalfive/MK-image@master/image.1sqnqcx4kdz4.webp" alt="image"></p><p>第一条路由匹配是一个单段的路由匹配，第二个路由匹配是一个多段路由匹配。</p><p>多段的路由匹配可以实现更为复杂的路由匹配规则和传递更多的参数，表达更为丰富的含义</p><h6 id="3、动态路由的正则匹配"><a href="#3、动态路由的正则匹配" class="headerlink" title="3、动态路由的正则匹配"></a>3、动态路由的正则匹配</h6><p><img src="https://cdn.jsdelivr.net/gh/Radicalfive/MK-image@master/image.6ibmh8r2l5c0.webp" alt="image"></p><p>一个url路径匹配了多个路由规则怎么办?<br><strong>哪个路由先定义的，哪个路由的匹配优先级就更高</strong></p><h2 id="八、编程式导航"><a href="#八、编程式导航" class="headerlink" title="八、编程式导航"></a>八、编程式导航</h2><blockquote><p>通过this.$router获取到当前的路由实例</p></blockquote><p><strong>编程式导航+命名路由，传递参数</strong></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>i name<span class="token operator">:</span> <span class="token string">"my"</span><span class="token literal-property property">，params</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">username</span><span class="token operator">:</span> <span class="token string">"zhangsan"</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>编程式导航+path路由，传递参数</strong></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> username <span class="token operator">=</span> <span class="token string">"aaa"</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span> <span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">path</span><span class="token operator">:</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">"/my/siusername}</span><span class="token template-punctuation string">`</span></span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="九、路由的参数传递与获取"><a href="#九、路由的参数传递与获取" class="headerlink" title="九、路由的参数传递与获取"></a>九、路由的参数传递与获取</h2><p> <strong>路由传递参数一般有两种方式：</strong> </p><ul><li>在路由上添加key/value串使用，通过this.$route.query来获取</li><li>将参数作为路由一部分进行传参数,通过this.$route.params来获取</li></ul><h2 id="十、Vuex简介"><a href="#十、Vuex简介" class="headerlink" title="十、Vuex简介"></a>十、Vuex简介</h2><blockquote><ul><li><strong>状态</strong>，驱动应用的数据源；</li><li><strong>视图</strong>，以声明方式将<strong>状态</strong>映射到视图；</li><li><strong>操作</strong>，响应在<strong>视图</strong>上的用户输入导致的状态变化。</li></ul></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Radicalfive/MK-image@master/image.4w572rrcfpg0.webp" alt="image"></p><ul><li>多个视图依赖于同一状态。</li><li>来自不同视图的行为需要变更同一状态。</li></ul><h6 id="1-mutations基础使用"><a href="#1-mutations基础使用" class="headerlink" title="1 mutations基础使用"></a>1 mutations基础使用</h6><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">add</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  state<span class="token punctuation">.</span>counter<span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token function">sub</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  state<span class="token punctuation">.</span>counter<span class="token operator">--</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>mutations携带参数</strong></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">add</span><span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span> num</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> state<span class="token punctuation">.</span>counter <span class="token operator">+=</span> num<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token function">sub</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  state<span class="token punctuation">.</span>counter <span class="token operator">-=</span> num<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>通过payload封装多个参数</strong></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">add</span><span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span> payload</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  state<span class="token punctuation">.</span>counter <span class="token operator">=</span> state<span class="token punctuation">.</span>counter <span class="token operator">+</span> payload<span class="token punctuation">.</span>num <span class="token operator">*</span> payload<span class="token punctuation">.</span>multiple<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token function">sub</span><span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span> payload</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  state<span class="token punctuation">.</span>counter <span class="token operator">=</span> state<span class="token punctuation">.</span>counter <span class="token operator">-</span> payload<span class="token punctuation">.</span>num <span class="token operator">*</span> payload<span class="token punctuation">.</span>multiple<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>通过常量引用函数</strong></p><p>外部定义常量函数</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">COUNTER_ADD</span> <span class="token operator">=</span> <span class="token string">"add"</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">COUNTER_SUB</span> <span class="token operator">=</span> <span class="token string">"sub"</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">HANDLE_FIRST</span> <span class="token operator">=</span> <span class="token string">"handleFirstNameVal"</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">HANDLE_LAST</span> <span class="token operator">=</span> <span class="token string">"handleLastNameVal"</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>引入</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token punctuation">{</span>  <span class="token constant">COUNTER_ADD</span><span class="token punctuation">,</span>  <span class="token constant">COUNTER_SUB</span><span class="token punctuation">,</span>  <span class="token constant">HANDLE_FIRST</span><span class="token punctuation">,</span>  <span class="token constant">HANDLE_LAST</span><span class="token punctuation">,</span><span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"./mutation-types"</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>进行使用</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token punctuation">[</span><span class="token constant">COUNTER_ADD</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span> payload</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  state<span class="token punctuation">.</span>counter <span class="token operator">=</span> state<span class="token punctuation">.</span>counter <span class="token operator">+</span> payload<span class="token punctuation">.</span>num <span class="token operator">*</span> payload<span class="token punctuation">.</span>multiple<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token constant">COUNTER_SUB</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span> payload</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  state<span class="token punctuation">.</span>counter <span class="token operator">=</span> state<span class="token punctuation">.</span>counter <span class="token operator">-</span> payload<span class="token punctuation">.</span>num <span class="token operator">*</span> payload<span class="token punctuation">.</span>multiple<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token constant">HANDLE_FIRST</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span> payload</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  state<span class="token punctuation">.</span>firstName <span class="token operator">=</span> payload<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token constant">HANDLE_LAST</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span> payload</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  state<span class="token punctuation">.</span>lastName <span class="token operator">=</span> payload<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token function">submitMutations</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  state<span class="token punctuation">.</span>firstName <span class="token operator">=</span> <span class="token string">"zhang"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="2-全局计算属性"><a href="#2-全局计算属性" class="headerlink" title="2 全局计算属性"></a>2 全局计算属性</h6><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token literal-property property">getters</span><span class="token operator">:</span> <span class="token punctuation">{</span>  <span class="token function">fullName</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> state<span class="token punctuation">.</span>firstName <span class="token operator">+</span> state<span class="token punctuation">.</span>lastName<span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>Vuex的getters其实就是全局的一个computed</li></ul><ul><li>Vuex 允许我们在 store 中定义“getter”（可以认为是 store 的计算属性）。就像计算属性一样，getter 的返回值会根据它的依赖被缓存起来，且只有当它的依赖值发生了改变才会被重新计算</li></ul><h6 id="3-、actions的基本用法"><a href="#3-、actions的基本用法" class="headerlink" title="3 、actions的基本用法"></a>3 、actions的基本用法</h6><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token literal-property property">actions</span><span class="token operator">:</span> <span class="token punctuation">{</span>  <span class="token comment">// submitActions(context) {</span>  <span class="token comment">// 模拟异步</span>  <span class="token comment">//   setTimeout(() =&gt; {</span>  <span class="token comment">//     context.commit("submitMutations");</span>  <span class="token comment">//   }, 1000);</span>  <span class="token comment">// },</span>  <span class="token function">submitActions</span><span class="token punctuation">(</span><span class="token parameter">context<span class="token punctuation">,</span> payload</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>        context<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">"submitMutations"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">"异步操作完成"</span> <span class="token operator">+</span> payload <span class="token operator">+</span> <span class="token string">"over"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token function">demoActions</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> commit <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>      <span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">"submitMutations"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="4、-modules模块划分"><a href="#4、-modules模块划分" class="headerlink" title="4、 modules模块划分"></a>4、 modules模块划分</h6><p><strong>引入Modules的意义</strong></p><ul><li>vuex进行集中状态管理，可以认为它是单例模式</li><li>当应用变的非常复杂的时候,所有的状态都定义在一个store对象里面会显得十分的臃肿</li></ul><p><strong>store的终极目录组织</strong></p><p><img src="https://cdn.jsdelivr.net/gh/Radicalfive/MK-image@master/image.73mnq2plu2o0.webp" alt="image"></p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>异步任务和定时任务</title>
      <link href="/2022/04/13/yi-bu-ren-wu-he-ding-shi-ren-wu/"/>
      <url>/2022/04/13/yi-bu-ren-wu-he-ding-shi-ren-wu/</url>
      
        <content type="html"><![CDATA[<h1 id="异步任务和定时任务"><a href="#异步任务和定时任务" class="headerlink" title="异步任务和定时任务"></a>异步任务和定时任务</h1><h2 id="一、实现Async异步任务"><a href="#一、实现Async异步任务" class="headerlink" title="一、实现Async异步任务"></a>一、实现<code>Async</code>异步任务</h2><h3 id="1-1-环境准备"><a href="#1-1-环境准备" class="headerlink" title="1.1 环境准备"></a>1.1 环境准备</h3><p><img src="https://cdn.jsdelivr.net/gh/Radicalfive/MK-image@master/lQLPDhtTIijCaLPNAbfNA8OwWJpPHmb77YsCWOEHK8A8AA_963_439.rmztj18qyxs.webp"></p><h3 id="1-2-同步调用"><a href="#1-2-同步调用" class="headerlink" title="1.2 同步调用"></a>1.2 同步调用</h3><p><img src="https://cdn.jsdelivr.net/gh/Radicalfive/MK-image@master/lQLPDhtTIjVGwgLNAd3NAgOw5Wp960Qwk1UCWOEbv4D1AA_515_477.23q39i1q29b4.webp"></p><ul><li>创建任务抽象类<code>AbstractTask</code>，并分别配置三个任务方法<code>doTaskOne（）</code>,<code>doTaskTwo（）</code>,<code>doTaskThree（）</code></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">AbstractTask</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Random</span> <span class="token constant">RANDOM</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doTaskOne</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"开始做任务一"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">long</span> start <span class="token operator">=</span> <span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token constant">RANDOM</span><span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">long</span> end <span class="token operator">=</span> <span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"完成任务一，耗时："</span> <span class="token operator">+</span> <span class="token punctuation">(</span>end <span class="token operator">-</span> start<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"毫秒"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doTaskTwo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"开始做任务二"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">long</span> start <span class="token operator">=</span> <span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token constant">RANDOM</span><span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">long</span> end <span class="token operator">=</span> <span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"完成任务二，耗时："</span> <span class="token operator">+</span> <span class="token punctuation">(</span>end <span class="token operator">-</span> start<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"毫秒"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doTaskThree</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"开始做任务三"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">long</span> start <span class="token operator">=</span> <span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token constant">RANDOM</span><span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">long</span> end <span class="token operator">=</span> <span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"完成任务三，耗时："</span> <span class="token operator">+</span> <span class="token punctuation">(</span>end <span class="token operator">-</span> \start<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"毫秒"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>定义Task类，继承<code>AbstractTask</code></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AsyncTask</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractTask</span><span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doTaskOne</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">doTaskOne</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doTaskTwo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">doTaskTwo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doTaskThree</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">doTaskThree</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>在单元测试用例中，注入<code>SyncTask</code>对象，并在测试用例中执行<code>doTaskOne()</code>,<code>doTaskTwo()</code>,<code>doTaskThree()</code>三个方法</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@SpringBootTest</span><span class="token annotation punctuation">@ExtendWith</span><span class="token punctuation">(</span><span class="token class-name">SpringExtension</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token keyword">class</span> <span class="token class-name">SyncTaskTest</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Resource</span>    <span class="token keyword">public</span> <span class="token class-name">SyncTask</span> syncTask<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">{</span>        syncTask<span class="token punctuation">.</span><span class="token function">doTaskOne</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        syncTask<span class="token punctuation">.</span><span class="token function">doTaskTwo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        syncTask<span class="token punctuation">.</span><span class="token function">doTaskThree</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>测试结果</li></ul><p><img src="https://cdn.jsdelivr.net/gh/Radicalfive/MK-image@master/image.6qhqid4zd2o0.webp" alt="image"></p><h3 id="1-3-异步调用"><a href="#1-3-异步调用" class="headerlink" title="1.3 异步调用"></a>1.3 异步调用</h3><p><img src="https://ossstored.oss-cn-shanghai.aliyuncs.com/img/other/2.png"></p><ul><li>在单元测试用例中，注入<code>SyncTask</code>对象，并在测试用例中执行<code>doTaskOne()</code>,<code>doTaskTwo()</code>,<code>doTaskThree()</code>三个方法</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@SpringBootTest</span><span class="token annotation punctuation">@ExtendWith</span><span class="token punctuation">(</span><span class="token class-name">SpringExtension</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token keyword">class</span> <span class="token class-name">AsyncTaskTest</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Resource</span>    <span class="token keyword">public</span> <span class="token class-name">AsyncTask</span> asyncTask<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">{</span>        asyncTask<span class="token punctuation">.</span><span class="token function">doTaskOne</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        asyncTask<span class="token punctuation">.</span><span class="token function">doTaskTwo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        asyncTask<span class="token punctuation">.</span><span class="token function">doTaskThree</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>测试结果</li></ul><p><img src="C:%5CUsers%5Ctest%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1649770824254.png" alt="1649770824254"></p><h3 id="1-4-异步回调"><a href="#1-4-异步回调" class="headerlink" title="1.4 异步回调"></a>1.4 异步回调</h3><h2 id="二、为异步任务规划线程池"><a href="#二、为异步任务规划线程池" class="headerlink" title="二、为异步任务规划线程池"></a>二、为异步任务规划线程池</h2><h3 id="2-1-Spring-Boot任务线程池"><a href="#2-1-Spring-Boot任务线程池" class="headerlink" title="2.1 Spring Boot任务线程池"></a>2.1 Spring Boot任务线程池</h3><h4 id="线程池的作用"><a href="#线程池的作用" class="headerlink" title="线程池的作用"></a>线程池的作用</h4><ul><li>防止资源占用无限的扩张</li><li>调用过程省去资源的创建和销毁所占用的时间</li></ul><h3 id="2-2-自定义线程池"><a href="#2-2-自定义线程池" class="headerlink" title="2.2 自定义线程池"></a>2.2 自定义线程池</h3><ul><li>创建一个线程池配置类<code>TaskConfiguration</code></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TaskConfiguration</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Bean</span><span class="token punctuation">(</span><span class="token string">"taskExecutor"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">Executor</span> <span class="token function">taskExecutor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">ThreadPoolTaskExecutor</span> executor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThreadPoolTaskExecutor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        executor<span class="token punctuation">.</span><span class="token function">setCorePoolSize</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        executor<span class="token punctuation">.</span><span class="token function">setMaxPoolSize</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        executor<span class="token punctuation">.</span><span class="token function">setQueueCapacity</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        executor<span class="token punctuation">.</span><span class="token function">setKeepAliveSeconds</span><span class="token punctuation">(</span><span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        executor<span class="token punctuation">.</span><span class="token function">setThreadNamePrefix</span><span class="token punctuation">(</span><span class="token string">"taskExecutor——"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        executor<span class="token punctuation">.</span><span class="token function">setWaitForTasksToCompleteOnShutdown</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        executor<span class="token punctuation">.</span><span class="token function">setAwaitTerminationSeconds</span><span class="token punctuation">(</span><span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        executor<span class="token punctuation">.</span><span class="token function">setRejectedExecutionHandler</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor<span class="token punctuation">.</span>CallerRunsPolicy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> executor<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>配置一个任务线程池对象taskExcutor</li></ul><p><img src="https://ossstored.oss-cn-shanghai.aliyuncs.com/img/other/3.png"></p><ul><li><strong>线程池参数</strong></li></ul><p><img src="https://ossstored.oss-cn-shanghai.aliyuncs.com/img/other/4.png"></p><h3 id="2-3-优雅地关闭线程池"><a href="#2-3-优雅地关闭线程池" class="headerlink" title="2.3 优雅地关闭线程池"></a>2.3 优雅地关闭线程池</h3><ul><li><code>setWaitForTasksToCompleteOnShutdown(true)</code></li><li><code>setAwaitTerminationSeconds(60)</code></li></ul><h2 id="三、通过-Scheduled实现定时任务"><a href="#三、通过-Scheduled实现定时任务" class="headerlink" title="三、通过@Scheduled实现定时任务"></a>三、通过@Scheduled实现定时任务</h2><h3 id="3-1-开启定时任务方法"><a href="#3-1-开启定时任务方法" class="headerlink" title="3.1 开启定时任务方法"></a>3.1 开启定时任务方法</h3><ul><li><p>Scheduled定时任务是Spring boot自身提供的功能，所以不需要引入Maven依赖包</p></li><li><p>在项目入口main方法上加注解︰<code>@EnableScheduling</code></p></li></ul><h3 id="3-2-不同定时方法的解析"><a href="#3-2-不同定时方法的解析" class="headerlink" title="3.2 不同定时方法的解析"></a>3.2 不同定时方法的解析</h3><ul><li><code>fixedDelay</code>和<code>fixedRate</code></li></ul><p><img src="https://ossstored.oss-cn-shanghai.aliyuncs.com/img/other/5.png"></p><ul><li><code>cron</code>表达式:灵活</li></ul><p><img src="https://ossstored.oss-cn-shanghai.aliyuncs.com/img/other/6.png"></p><ul><li><p><img src="https://ossstored.oss-cn-shanghai.aliyuncs.com/img/other/7.jpg"></p></li><li><p><img src="https://ossstored.oss-cn-shanghai.aliyuncs.com/img/other/8.jpg"></p></li></ul><p><strong>应用：</strong></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyJobs</span> <span class="token punctuation">{</span>    <span class="token comment">/**     * 开始结束     *     * @throws InterruptedException 中断异常     */</span>    <span class="token annotation punctuation">@Scheduled</span><span class="token punctuation">(</span>fixedDelay <span class="token operator">=</span> <span class="token number">5000</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">fixedDelayJob</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"fixedDelay 开始："</span> <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">10</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"fixedDelay 结束："</span> <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">/**     * 每隔3秒执行 定时任务     *     * @throws InterruptedException 中断异常     */</span>    <span class="token annotation punctuation">@Scheduled</span><span class="token punctuation">(</span>fixedDelay <span class="token operator">=</span> <span class="token number">10000</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">fixedRateJob</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"========fixedRate 开始："</span> <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">10</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"========fixedRate 结束："</span> <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Scheduled</span><span class="token punctuation">(</span>cron <span class="token operator">=</span> <span class="token string">"0/30 * * * * ? "</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">cronJob</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"========== ...&gt;&gt;&gt;cron..."</span> <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-3-使用定时器发邮件"><a href="#3-3-使用定时器发邮件" class="headerlink" title="3.3 使用定时器发邮件"></a>3.3 使用定时器发邮件</h3><p><strong>添加相关依赖</strong></p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-mail<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>配置application.yml</strong></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">mail</span><span class="token punctuation">:</span>    <span class="token key atrule">host</span><span class="token punctuation">:</span> smtp.qq.com    <span class="token key atrule">username</span><span class="token punctuation">:</span> 1561548288@qq.com    <span class="token key atrule">password</span><span class="token punctuation">:</span> ayidcxjmxrfzhhje    <span class="token key atrule">protocol</span><span class="token punctuation">:</span> smtp    <span class="token key atrule">properties.main.smtp.auth</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">properties.main.smtp.port</span><span class="token punctuation">:</span> <span class="token number">587</span>    <span class="token key atrule">properties.main.display.sendmail</span><span class="token punctuation">:</span> Javen    <span class="token key atrule">properties.main.display.sendname</span><span class="token punctuation">:</span> Spring Boot Email    <span class="token key atrule">properties.main.smtp.starttls.enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">properties.main.smtp.starttls.required</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">properties.main.smtp.ssl.enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">default-encoding</span><span class="token punctuation">:</span> utf<span class="token punctuation">-</span><span class="token number">8</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>书写发送邮件相关的工具类</strong></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Service</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MailService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Resource</span>    <span class="token keyword">private</span> <span class="token class-name">JavaMailSender</span> mailSender<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"${spring.mail.username}"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> fromEmail<span class="token punctuation">;</span>    <span class="token comment">/**     * 发送文本邮件     *     * @param to      收件人     * @param subject subject     * @param content 内容     */</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sendSimpleMail</span><span class="token punctuation">(</span><span class="token class-name">String</span> <span class="token keyword">to</span><span class="token punctuation">,</span> <span class="token class-name">String</span> subject<span class="token punctuation">,</span> <span class="token class-name">String</span> content<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">SimpleMailMessage</span> message <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleMailMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        message<span class="token punctuation">.</span><span class="token function">setFrom</span><span class="token punctuation">(</span>fromEmail<span class="token punctuation">)</span><span class="token punctuation">;</span>        message<span class="token punctuation">.</span><span class="token function">setTo</span><span class="token punctuation">(</span><span class="token keyword">to</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        message<span class="token punctuation">.</span><span class="token function">setSubject</span><span class="token punctuation">(</span>subject<span class="token punctuation">)</span><span class="token punctuation">;</span>        message<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span>        mailSender<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">/**     * 发送HTML邮件     *     * @param to      收件人     * @param subject subject     * @param content content     * @throws MessagingException MessagingException     */</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sendHtmlMail</span><span class="token punctuation">(</span><span class="token class-name">String</span> <span class="token keyword">to</span><span class="token punctuation">,</span> <span class="token class-name">String</span> subject<span class="token punctuation">,</span> <span class="token class-name">String</span> content<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">MessagingException</span> <span class="token punctuation">{</span>        <span class="token class-name">MimeMessage</span> message <span class="token operator">=</span> mailSender<span class="token punctuation">.</span><span class="token function">createMimeMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">MimeMessageHelper</span> helper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MimeMessageHelper</span><span class="token punctuation">(</span>message<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        helper<span class="token punctuation">.</span><span class="token function">setFrom</span><span class="token punctuation">(</span>fromEmail<span class="token punctuation">)</span><span class="token punctuation">;</span>        helper<span class="token punctuation">.</span><span class="token function">setTo</span><span class="token punctuation">(</span><span class="token keyword">to</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        helper<span class="token punctuation">.</span><span class="token function">setSubject</span><span class="token punctuation">(</span>subject<span class="token punctuation">)</span><span class="token punctuation">;</span>        helper<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>content<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        mailSender<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">/**     * 发送带附件的邮件     *     * @param to       收件人     * @param subject  subject     * @param content  content     * @param filePath filePath     * @throws MessagingException MessagingException     */</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sendAttachmentsMail</span><span class="token punctuation">(</span><span class="token class-name">String</span> <span class="token keyword">to</span><span class="token punctuation">,</span> <span class="token class-name">String</span> subject<span class="token punctuation">,</span> <span class="token class-name">String</span> content<span class="token punctuation">,</span> <span class="token class-name">String</span> filePath<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">MessagingException</span> <span class="token punctuation">{</span>        <span class="token class-name">MimeMessage</span> message <span class="token operator">=</span> mailSender<span class="token punctuation">.</span><span class="token function">createMimeMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">MimeMessageHelper</span> helper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MimeMessageHelper</span><span class="token punctuation">(</span>message<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        helper<span class="token punctuation">.</span><span class="token function">setFrom</span><span class="token punctuation">(</span>fromEmail<span class="token punctuation">)</span><span class="token punctuation">;</span>        helper<span class="token punctuation">.</span><span class="token function">setTo</span><span class="token punctuation">(</span><span class="token keyword">to</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        helper<span class="token punctuation">.</span><span class="token function">setSubject</span><span class="token punctuation">(</span>subject<span class="token punctuation">)</span><span class="token punctuation">;</span>        helper<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>content<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//    添加附件资源</span>        <span class="token class-name">FileSystemResource</span> file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileSystemResource</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> fileName <span class="token operator">=</span> filePath<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>filePath<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token class-name">File</span><span class="token punctuation">.</span>separator<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        helper<span class="token punctuation">.</span><span class="token function">addAttachment</span><span class="token punctuation">(</span>fileName<span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//  发送邮件</span>        mailSender<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>书写相关测试方法</strong></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Slf4j</span><span class="token annotation punctuation">@SpringBootTest</span><span class="token punctuation">(</span>webEnvironment <span class="token operator">=</span> <span class="token class-name">SpringBootTest<span class="token punctuation">.</span>WebEnvironment</span><span class="token punctuation">.</span><span class="token constant">DEFINED_PORT</span><span class="token punctuation">)</span><span class="token keyword">class</span> <span class="token class-name">MailServiceTest</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Resource</span>    <span class="token keyword">private</span> <span class="token class-name">MailService</span> mailService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">void</span> <span class="token function">sendSimpleMail</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        mailService<span class="token punctuation">.</span><span class="token function">sendSimpleMail</span><span class="token punctuation">(</span><span class="token string">"1161655980@qq.com"</span><span class="token punctuation">,</span> <span class="token string">"测试"</span><span class="token punctuation">,</span> <span class="token string">"普通文本邮件内容测试"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>测试成功</strong></p><p><img src="https://ossstored.oss-cn-shanghai.aliyuncs.com/img/other/9.jpg"></p><h2 id="四、quartz简单定时任务（内存持久化）"><a href="#四、quartz简单定时任务（内存持久化）" class="headerlink" title="四、quartz简单定时任务（内存持久化）"></a>四、quartz简单定时任务（内存持久化）</h2><h3 id="4-1-引入对应的-maven依赖"><a href="#4-1-引入对应的-maven依赖" class="headerlink" title="4.1 引入对应的 maven依赖"></a>4.1 引入对应的 maven依赖</h3><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!--引⼊quartz定时框架--&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-quartz<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://ossstored.oss-cn-shanghai.aliyuncs.com/img/other/10.jpg"></p><h3 id="4-2-创建一个任务类Job"><a href="#4-2-创建一个任务类Job" class="headerlink" title="4.2 创建一个任务类Job"></a>4.2 创建一个任务类Job</h3><p> 新建⼀个定时任务类：QuartzSimpleTask </p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">QuartzSimpleTask</span> <span class="token keyword">extends</span> <span class="token class-name">QuartzJobBean</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">executeInternal</span><span class="token punctuation">(</span><span class="token class-name">JobExecutionContext</span> jobExecutionContext<span class="token punctuation">)</span>            <span class="token keyword">throws</span> <span class="token class-name">JobExecutionException</span> <span class="token punctuation">{</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"quartz简单的定时任务执⾏时间："</span> <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-3-创建-Quartz-定时配置类"><a href="#4-3-创建-Quartz-定时配置类" class="headerlink" title="4.3 创建 Quartz 定时配置类"></a>4.3 创建 Quartz 定时配置类</h3><p><img src="C:%5CUsers%5Ctest%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1649773771088.png" alt="1649773771088"></p><p> 将之前创建的定时任务添加到定时调度⾥⾯ </p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">QuartzSimpleConfig</span> <span class="token punctuation">{</span>    <span class="token comment">/**     * 指定具体的定时任务类     *     * @return JobDetail     */</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> <span class="token class-name">JobDetail</span> <span class="token function">uploadTaskDetail</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token class-name">JobBuilder</span><span class="token punctuation">.</span><span class="token function">newJob</span><span class="token punctuation">(</span><span class="token class-name">QuartzSimpleTask</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">withIdentity</span><span class="token punctuation">(</span><span class="token string">"QuartzSimpleTask"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">storeDurably</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> <span class="token class-name">Trigger</span> <span class="token function">uploadTaskTrigger</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">//这⾥设定触发执⾏的⽅式</span>        <span class="token class-name">CronScheduleBuilder</span> scheduleBuilder <span class="token operator">=</span>                <span class="token class-name">CronScheduleBuilder</span><span class="token punctuation">.</span><span class="token function">cronSchedule</span><span class="token punctuation">(</span><span class="token string">"*/5 * * * * ?"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 返回任务触发器</span>        <span class="token keyword">return</span> <span class="token class-name">TriggerBuilder</span><span class="token punctuation">.</span><span class="token function">newTrigger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forJob</span><span class="token punctuation">(</span><span class="token function">uploadTaskDetail</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">withIdentity</span><span class="token punctuation">(</span><span class="token string">"QuartzSimpleTask"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">withSchedule</span><span class="token punctuation">(</span>scheduleBuilder<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>启动主类上加 @EnableScheduling 注解，运⾏项⽬，查看效果（把其他的定时任务注释 掉）。 </p><p><img src="https://ossstored.oss-cn-shanghai.aliyuncs.com/img/other/11.jpg"></p><ul><li><p><code>JobDetail</code>：包含多个构造函数，最常⽤的是 <code>JobDetail</code>(String name, String group, Class <code>jobClass</code>) <code>Jobclass</code>是实现作业接⼝的类，name是调度程序中任务的 名称，group是调度程序中任务的组名。默认组名称为 <code>Scheduler.DEFAULT_GROUP </code>。 </p></li><li><p><code>Trigger</code>：描述触发作业执⾏的时间规则的类。包含：</p><ul><li> <code>SimpleTrigger</code>：⼀次或固定间隔时间段的触发规则。 </li><li> <code>CronTrigger</code>：通过cron表达式描述更复杂的触发规则。 </li></ul></li><li><p> <code>Calendar</code>：<code>Quartz</code>提供的Calendar类。触发器可以与多个Calendar关联以排除特殊⽇期。 </p></li><li><p><code>Scheduler</code>：代表独⽴于Quartz 的运⾏容器。在Scheduler 中注册了Trigger和 <code>JobDetail</code>。它们在调度程序中具有⾃⼰的名称（名称）和组名称（Group）。触发器和 <code>JobDetai</code>l名称和组名称的组合必须唯⼀，但是触发器名称和组名称的组合可以与 <code>JobDetail</code>相同。⼀个Job可以绑定到多个触发器，也可以不绑定。 </p></li></ul><p> Job还具有⼀个⼦接⼝：<code>statefuljob</code>，这是⼀个没有⽅法的标签接⼝，表示有状态任务。 </p><ol><li>⽆状态任务：它具有<code>jobdatamap</code>复制，因此可以并发运⾏； </li><li>有状态任务<code>statefuljob</code>：共享⼀个<code>jobdatamap</code>，并且将保存对<code>jobdatamap</code>的每次修 改。因此，前⼀个有<code>statefuljob</code>将阻⽌下⼀个<code>statefuljob</code>。</li></ol><p><img src="https://ossstored.oss-cn-shanghai.aliyuncs.com/img/other/12.jpg"></p><h2 id="五、quartz动态定时任务（数据库持久化）"><a href="#五、quartz动态定时任务（数据库持久化）" class="headerlink" title="五、quartz动态定时任务（数据库持久化）"></a>五、quartz动态定时任务（数据库持久化）</h2><h3 id="5-1-前言"><a href="#5-1-前言" class="headerlink" title="5.1 前言"></a>5.1 前言</h3><blockquote><p>在项⽬开发过程当中，某些定时任务，可能在运⾏⼀段时间之后就不需要了，或者需要修改定 时任务的执⾏时间等等。 这就需要在代码中进⾏修改，重新打包发布，就很麻烦。</p><p>使⽤Quartz定时任务框架来实现，就不需要重新修改代码⽽达到要求。 </p></blockquote><h3 id="5-2-原理"><a href="#5-2-原理" class="headerlink" title="5.2 原理"></a>5.2 原理</h3><ol><li>使⽤quartz提供的<code>API</code>完成配置任务的增删改查  </li><li>将任务的配置保存在数据库中</li></ol><h3 id="5-3-配置"><a href="#5-3-配置" class="headerlink" title="5.3 配置"></a>5.3 配置</h3><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mysql-connector-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.mybatis.spring.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mybatis-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.2.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>然后开始配置quartz：</strong> </p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">datasource</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> jdbc<span class="token punctuation">:</span>mysql<span class="token punctuation">:</span>//localhost<span class="token punctuation">:</span>3306/exception<span class="token punctuation">?</span>useUnicode=true<span class="token important">&amp;characterEncoding=utf-8&amp;useSSL=false</span>    <span class="token key atrule">username</span><span class="token punctuation">:</span> root    <span class="token key atrule">password</span><span class="token punctuation">:</span> radical0618    <span class="token key atrule">driverClassName</span><span class="token punctuation">:</span> com.mysql.cj.jdbc.Driver  <span class="token key atrule">quartz</span><span class="token punctuation">:</span>    <span class="token key atrule">job-store-type</span><span class="token punctuation">:</span> JDBC <span class="token comment">#数据库存储quartz任务配置</span>    <span class="token key atrule">jdbc</span><span class="token punctuation">:</span>      <span class="token key atrule">initialize-schema</span><span class="token punctuation">:</span> NEVER <span class="token comment">#⾃动初始化表结构，第⼀次启动的时候这⾥写always</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://ossstored.oss-cn-shanghai.aliyuncs.com/img/other/13.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>嵌入式容器的配置与应用</title>
      <link href="/2022/04/08/qian-ru-shi-rong-qi-de-pei-zhi-yu-ying-yong/"/>
      <url>/2022/04/08/qian-ru-shi-rong-qi-de-pei-zhi-yu-ying-yong/</url>
      
        <content type="html"><![CDATA[<h2 id="嵌入式容器的配置与应用"><a href="#嵌入式容器的配置与应用" class="headerlink" title="嵌入式容器的配置与应用"></a>嵌入式容器的配置与应用</h2><h4 id="嵌入式容器的运行参数配置"><a href="#嵌入式容器的运行参数配置" class="headerlink" title="嵌入式容器的运行参数配置"></a>嵌入式容器的运行参数配置</h4><h6 id="1、SpringBoot支持的应用服务容器"><a href="#1、SpringBoot支持的应用服务容器" class="headerlink" title="1、SpringBoot支持的应用服务容器"></a>1、SpringBoot支持的应用服务容器</h6><ul><li>Tomcat (默认)</li><li>Jetty</li><li>Undertow</li></ul><h6 id="2、调整SpringBoot应用容器的参数两种配置方法"><a href="#2、调整SpringBoot应用容器的参数两种配置方法" class="headerlink" title="2、调整SpringBoot应用容器的参数两种配置方法"></a>2、调整SpringBoot应用容器的参数两种配置方法</h6><ul><li><p>修改配置文件（简单）</p><p><a href="https://docs.spring.io/spring-boot/docs/current/reference/html/application-properties.html#appendix.application-properties.server">https://docs.spring.io/spring-boot/docs/current/reference/html/application-properties.html#appendix.application-properties.server</a></p><ul><li><p>配置项</p><ul><li>server .xx开头的是所有servlet容器通用的配置</li><li>server. tomcat.xx开头的是tomcat容器特有的配置参数</li><li>server.jetty.xx开头的是Jetty容器特有的配置参数</li><li>server. undertow.xx开头的是undertow容器特有的配置参数</li></ul></li><li><p>常用配置参数</p><ul><li><table><thead><tr><th>参数</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>server.port</td><td>8080</td><td>配置Web容器的端口号</td></tr><tr><td>server.servlet.session.timeout</td><td>30m</td><td>session失效时间。如果不写单位则默认单位是秒。(注意: 由于Tomcat中配置session过期时间是以分钟为单位，如果这里设置是秒的话，那么会自动转换为一个不超过所配置秒数的最大分钟数。比如配置了119秒(1分59秒)，那么实际session过期时间是1分钟)</td></tr><tr><td>server.servlet.context-path</td><td>/</td><td>URL访问路径的基础路径</td></tr><tr><td>server.tomcat.uri-encoding</td><td>UTF-8</td><td>配置Tomcat请求编码</td></tr><tr><td>server.tomcat. basedir</td><td></td><td>配置Tomcat运行日志和临时文件的目录。若不配置，则默认使用系统的临时目录。</td></tr></tbody></table></li></ul></li><li><p>tomcat性能优化核心参数</p><ul><li><p>tomcat连接器工作原理</p><ul><li>在Acceptor之前维护一个请求接收队列，该队列的最大长度即: tomcat可以接受的最大请求连接数: server.tomcat.max-connections。</li><li>Acceptor监听连接请求，并生成一个SocketProcessor任务提交到线程池去处理</li><li>当线程池里面的所有线程都被占用，新建的SocketProcessor任务被放入等待队列，即:server. tomcat. accept-count</li><li>线程池的server. tomcat. threads.max决定了tomcat的极限SocketProcessor任务处理能力。不是越大越好，线程越多耗费的资源也越多。</li><li>线程池的server. tomcat. threads .min-spare在应用空闲时，保留一定的线程数在线程池内。避免请求到来后，临时创建线程浪费时间。</li></ul></li><li><table><thead><tr><th>参数</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>server. tomcat.max-connections</td><td>8192</td><td>接受的最大请求连接数</td></tr><tr><td>server.tomcat.accept-count</td><td>100</td><td>当所有的线程都被占用，被放入请求队列等待的最大的请求连接数量</td></tr><tr><td>server.tomcat.threads.max</td><td>200</td><td>最大的工作线程池数量</td></tr><tr><td>server.tomcat.threads.min-spare</td><td>10</td><td>最小的工作线程池数量</td></tr></tbody></table></li></ul></li></ul></li></ul><p>自定义配置类（专业调优）</p><ul><li><p>建立一个配置，加上@Configuration注解</p></li><li><p>添加定制器ConfigurableServletWebServerFactory</p></li><li><p>将定制器返回</p><p><img src="https://bearcad.oss-cn-shanghai.aliyuncs.com/%E7%AC%94%E8%AE%B0/01.png"></p><p>这种方法可定制的内容更多，也更灵活需要深入理解server容器的底层实现原理及设计机制</p></li></ul><h4 id="Web容器配置HTTPS"><a href="#Web容器配置HTTPS" class="headerlink" title="Web容器配置HTTPS"></a>Web容器配置HTTPS</h4><h6 id="如何生成自签名证书"><a href="#如何生成自签名证书" class="headerlink" title="如何生成自签名证书"></a>如何生成自签名证书</h6><ul><li><img src="https://bearcad.oss-cn-shanghai.aliyuncs.com/%E7%AC%94%E8%AE%B0/06.png"><br>keytool -genkeypair -alias selfsigned_localhost_sslserver -keyalg RSA -keysize 2048 -storetype PKCS12 -keystore bear-ssl-key.p12 -validity 3650</li><li>命令参数说明<ul><li>-genkey: 表示要创建一 个新的密钥</li><li>-alias: 表示keystore的别名</li><li>-keyalg: 表示使用的加密算法是RSA (-种非对称加密算法)</li><li>-keysize:表示密钥的长度</li><li>-keystore: 表示生成的密钥存放位置</li><li>-validity: 表示密钥的有效时间(单位为天)</li></ul></li></ul><h6 id="将SSL应用于Spring-Boot应用程序"><a href="#将SSL应用于Spring-Boot应用程序" class="headerlink" title="将SSL应用于Spring Boot应用程序"></a>将SSL应用于Spring Boot应用程序</h6><ul><li>复制bear-ssl-key并将其放在父项目spring-boot-learning根目录下</li><li><img src="https://bearcad.oss-cn-shanghai.aliyuncs.com/%E7%AC%94%E8%AE%B0/05.png"><br>将SSL密钥信息添加到application.yml中</li></ul><h6 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h6><h6 id="将HTTP请求重定向为HTTPS"><a href="#将HTTP请求重定向为HTTPS" class="headerlink" title="将HTTP请求重定向为HTTPS"></a>将HTTP请求重定向为HTTPS</h6><h4 id="切换到jetty-amp-undertow容器"><a href="#切换到jetty-amp-undertow容器" class="headerlink" title="切换到jetty&amp;undertow容器"></a>切换到jetty&amp;undertow容器</h4><p>去除tomcat容器的依赖</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span><span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span> <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>spring<span class="token operator">-</span>boot<span class="token operator">-</span>starter<span class="token operator">-</span>web<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span> <span class="token generics"><span class="token punctuation">&lt;</span>exclusions<span class="token punctuation">&gt;</span></span><span class="token generics"><span class="token punctuation">&lt;</span>exclusion<span class="token punctuation">&gt;</span></span><span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span><span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>spring<span class="token operator">-</span>boot<span class="token operator">-</span>starter<span class="token operator">-</span>tomcat<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span> <span class="token operator">&lt;</span><span class="token operator">/</span>exclusion<span class="token operator">&gt;</span> <span class="token operator">&lt;</span><span class="token operator">/</span>exclusions<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>添加 jetty 容器的依赖</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span>    <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>    <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>spring<span class="token operator">-</span>boot<span class="token operator">-</span>starter<span class="token operator">-</span>jetty<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>application.yml 配置 jetty</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">server<span class="token operator">:</span>  port<span class="token operator">:</span> <span class="token number">8888</span>  jetty<span class="token operator">:</span>    threads<span class="token operator">:</span>      max<span class="token operator">:</span> <span class="token number">100</span>      min<span class="token operator">:</span> <span class="token number">20</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>添加undertow容器的依赖</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span>    <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>    <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>spring<span class="token operator">-</span>boot<span class="token operator">-</span>starter<span class="token operator">-</span>undertow<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>application.yml 配置 undertow</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">server<span class="token operator">:</span>  port<span class="token operator">:</span> <span class="token number">9090</span>  undertow<span class="token operator">:</span>    threads<span class="token operator">:</span>      io<span class="token operator">:</span> <span class="token number">4</span>      worker<span class="token operator">:</span> <span class="token number">32</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="打war包部署到外置tomcat容器"><a href="#打war包部署到外置tomcat容器" class="headerlink" title="打war包部署到外置tomcat容器"></a>打war包部署到外置tomcat容器</h4><ul><li>打成war包</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token generics"><span class="token punctuation">&lt;</span>packaging<span class="token punctuation">&gt;</span></span>war<span class="token operator">&lt;</span><span class="token operator">/</span>packaging<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>给war添加名字的依赖</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token generics"><span class="token punctuation">&lt;</span>finalName<span class="token punctuation">&gt;</span></span>demo<span class="token operator">&lt;</span><span class="token operator">/</span>finalName<span class="token operator">&gt;</span><span class="token comment">//名字无所谓，可以是项目名</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>打成war包的命令行</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java">mvn clean <span class="token keyword">package</span> <span class="token operator">-</span><span class="token class-name">Dmaven</span> test<span class="token punctuation">.</span>skip<span class="token operator">=</span><span class="token boolean">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>容器初始化</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ServletInitializer</span> <span class="token keyword">extends</span> <span class="token class-name">SpringBootServletInitializer</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token class-name">SpringApplicationBuilder</span> <span class="token function">configure</span><span class="token punctuation">(</span><span class="token class-name">SpringApplicationBuilder</span> builder<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> builder<span class="token punctuation">.</span><span class="token function">sources</span><span class="token punctuation">(</span><span class="token class-name">WebDemoApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>下载tomcat链接<ul><li><a href="https://tomcat.apache.org/">https://tomcat.apache.org/</a></li></ul></li></ul><p>将打成的war放到webapp中</p><p>在tomcat的bin目录下启动startup.bat，关闭shutdown.bat</p>]]></content>
      
      
      <categories>
          
          <category> SpringBoot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>生命周期内的拦截过滤与监听</title>
      <link href="/2022/04/04/sheng-ming-zhou-qi-nei-de-lan-jie-guo-lu-yu-jian-ting/"/>
      <url>/2022/04/04/sheng-ming-zhou-qi-nei-de-lan-jie-guo-lu-yu-jian-ting/</url>
      
        <content type="html"><![CDATA[<h2 id="生命周期内的拦截过滤与监听"><a href="#生命周期内的拦截过滤与监听" class="headerlink" title="生命周期内的拦截过滤与监听"></a>生命周期内的拦截过滤与监听</h2><h4 id="一、select域对象与属性变化监听"><a href="#一、select域对象与属性变化监听" class="headerlink" title="一、select域对象与属性变化监听"></a>一、select域对象与属性变化监听</h4><h6 id="1、提问1-监听器有哪几类"><a href="#1、提问1-监听器有哪几类" class="headerlink" title="1、提问1:监听器有哪几类?"></a>1、提问1:监听器有哪几类?</h6><ul><li><p>ServletContext</p></li><li><p>HttpSession</p></li><li><p>ServletRequest</p></li><li><p>域对象的创建、销毁属性发生变化</p></li></ul><h6 id="2、提问2-监听器使用了设计模式中的什么模式"><a href="#2、提问2-监听器使用了设计模式中的什么模式" class="headerlink" title="2、提问2:监听器使用了设计模式中的什么模式?"></a>2、提问2:监听器使用了设计模式中的什么模式?</h6><ul><li>观察者模式</li><li>关注特定事物的创建、销毁以及变化并作出回调动作——&gt;异步</li></ul><h6 id="3、提问3：监听器的主要接口"><a href="#3、提问3：监听器的主要接口" class="headerlink" title="3、提问3：监听器的主要接口"></a>3、提问3：监听器的主要接口</h6><ul><li>ServletContextListener</li><li>HttpSessionListener</li><li>SelectRequestListener</li></ul><p><img src="https://ossstored.oss-cn-shanghai.aliyuncs.com/img/other/E8920EF7-8748-4BA2-8021-16976E437A7B.png"></p><h6 id="4、提问4：使用场景"><a href="#4、提问4：使用场景" class="headerlink" title="4、提问4：使用场景"></a>4、提问4：使用场景</h6><ul><li>系统启动的时候，初始化信息</li><li>统计在线用户</li><li>统计网站访问量</li></ul><h6 id="3、监听器定义与实现"><a href="#3、监听器定义与实现" class="headerlink" title="3、监听器定义与实现"></a>3、监听器定义与实现</h6><h6 id="4、监听器测试"><a href="#4、监听器测试" class="headerlink" title="4、监听器测试"></a>4、监听器测试</h6><h4 id="二、Servlet过滤器的实现"><a href="#二、Servlet过滤器的实现" class="headerlink" title="二、Servlet过滤器的实现"></a>二、Servlet过滤器的实现</h4><h6 id="1、过滤器"><a href="#1、过滤器" class="headerlink" title="1、过滤器"></a>1、过滤器</h6><ul><li>Servlet过滤器是可用于Servlet编程的Java类</li><li>目的<ul><li>在客户端的请求访问后端资源之前，拦截这些请求。</li><li>在服务器的响应发送回客户端之前，处理这些响应。</li></ul></li><li>使用场景<ul><li>授权逻辑</li><li>IP黑名单</li><li>对经过加密的HTTP请求数据，进行统- - 解密</li><li>敏感词过滤</li></ul></li><li>过滤器的特点<ul><li>可以过滤所有请求</li><li> 能够改变请求的数据内容</li></ul></li><li>过滤器的实现<ul><li>利用WebFilter注解配置过滤器</li><li>FilterRegistrationBean方式注册过滤器</li></ul></li></ul><h6 id="2、Servlet"><a href="#2、Servlet" class="headerlink" title="2、Servlet"></a>2、Servlet</h6><ul><li>定义</li><li>使用场景</li><li>实现</li></ul><h4 id="三、Spring拦截器及请求链路说明"><a href="#三、Spring拦截器及请求链路说明" class="headerlink" title="三、Spring拦截器及请求链路说明"></a>三、Spring拦截器及请求链路说明</h4><h6 id="1、拦截器Interceptor"><a href="#1、拦截器Interceptor" class="headerlink" title="1、拦截器Interceptor"></a>1、拦截器Interceptor</h6><p><img src="https://cdn.jsdelivr.net/gh/casdxz/image@master/head/21.4dw59kg63v20.webp" alt="21"></p><h6 id="2、拦截器与过滤器的核心区别"><a href="#2、拦截器与过滤器的核心区别" class="headerlink" title="2、拦截器与过滤器的核心区别"></a>2、拦截器与过滤器的核心区别</h6><ul><li><img src="https://cdn.jsdelivr.net/gh/casdxz/image@master/head/24.58jmrjpczyc0.webp" alt="24"></li></ul><center>请求处理的生命周期类似</center><ul><li><p>使用场景</p><ul><li>规范不同</li><li>拦截器可以获取并使用Spring loC容器中的bean</li><li>拦截器可以访问Spring上下文中的对象</li><li>拦截粒度:<ul><li>过滤器比拦截器更大<ul><li>适合系统级别的API的处理动作</li><li>Spring Security大量使用了过滤器</li></ul></li><li>拦截器粒度小，适合分模块、分范围来进行统一业务逻辑处理</li></ul></li></ul></li></ul><h6 id="3、拦截器的实现"><a href="#3、拦截器的实现" class="headerlink" title="3、拦截器的实现"></a>3、拦截器的实现</h6><ul><li>实现HandlerInterceptor接口</li><li>实现WebMvcConfigurer接口完成拦截器的注册</li></ul><h6 id="4、请求链路说明"><a href="#4、请求链路说明" class="headerlink" title="4、请求链路说明"></a>4、请求链路说明</h6><ul><li>分析拦截器、过滤器中各接口函数的执行顺序</li><li><img src="https://ossstored.oss-cn-shanghai.aliyuncs.com/img/other/B15FE481-EA96-404D-9CC6-D4AA93E8B170.png"></li></ul><h6 id="5、拦截器实现统一访问日志"><a href="#5、拦截器实现统一访问日志" class="headerlink" title="5、拦截器实现统一访问日志"></a>5、拦截器实现统一访问日志</h6><ul><li><p>需求:针对当前系统的每一次接口访问，要记录是什么人访问的(用户名) 、什么时间访问的、访问耗时多长时间、使用什么HTTP method方法访问的、访问结果如何等。可以称为审计日志。</p></li><li><p>日志输出</p><ul><li>控制台</li><li>输出一个单独的日志文件</li><li>持久化</li></ul></li><li><p>实现步骤</p><ul><li><p>定义一个日志内容的实体类</p></li><li><p>自定义一个日志拦截器</p><ul><li>preHandle：</li></ul></li></ul></li></ul><h4 id="四、自定义事件的发布与监听"><a href="#四、自定义事件的发布与监听" class="headerlink" title="四、自定义事件的发布与监听"></a>四、自定义事件的发布与监听</h4><p>事件监听介绍</p><ul><li>事件的几个角色<ul><li>事件发布者（事件源）</li><li>事件监听者</li><li>事件本身</li></ul></li><li>事件监听的特点<ul><li>异步</li><li>解耦</li><li>不规律性</li></ul></li><li>实现事件监听的方法<ul><li>消息对列，中间件——&gt;发布订阅模式</li><li>JDK自带的：java.uilt.EventListener</li><li>Spring环境下实现的:事件发布监听方法</li><li>。。。</li></ul></li></ul><p>具体实现</p><ul><li><p>自定义事件</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyEvent</span> <span class="token keyword">extends</span> <span class="token class-name">ApplicationEvent</span> <span class="token punctuation">{</span><span class="token keyword">public</span> <span class="token class-name">MyEvent</span> <span class="token punctuation">(</span><span class="token number">0</span>bject source<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">super</span> <span class="token punctuation">(</span>source<span class="token punctuation">)</span> <span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>定义事件监听器</p><ul><li><p>写代码向ApplicationContext中添加监听器</p></li><li><p>```java<br>@Slf4j<br>public class MyListener1 implements ApplicationListener<myevent> {</myevent></p><pre><code>@Overridepublic void onApplicationEvent(MyEvent event) {    log.info(String.format("%s 监听到事件源: %s.",MyListener1.class.getName(),event.getSource()));}</code></pre><p>}</p><pre class="line-numbers language-none"><code class="language-none">- ```java  @Component  @Slf4j  public class MyListener2 implements ApplicationListener&lt;MyEvent&gt; {      @Override      public void onApplicationEvent(MyEvent event) {          log.info(String.format("%s 监听到事件源: %s.",MyListener2.class.getName(),event.getSource()));      }  }<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>```java<br>@Slf4j<br>public class MyListener3 implements ApplicationListener<myevent> {</myevent></p><pre><code>@Overridepublic void onApplicationEvent(MyEvent event) {    log.info(String.format("%s 监听到事件源: %s.",MyListener3.class.getName(),event.getSource()));}</code></pre><p>}</p><pre class="line-numbers language-none"><code class="language-none">- ```java  @Slf4j  @Component  public class MyListener4 {      @EventListener      public void listener(MyEvent event) {          log.info(String.format("%s 监听到事件源: %s.",MyListener4.class.getName(),event.getSource()));      }  }<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul><p>测试监听时间的发布</p><h4 id="五、应用启动的监听"><a href="#五、应用启动的监听" class="headerlink" title="五、应用启动的监听"></a>五、应用启动的监听</h4><h6 id="1、简介"><a href="#1、简介" class="headerlink" title="1、简介"></a>1、简介</h6><ul><li>Spring Boot提供了两个接口: CommandLineRunner、 ApplicationRunner,用于启动应用时做特殊处理，这些代码会在SpringApplication的run()方法运行完成之前被执行。</li></ul><h6 id="2、常用场景介绍"><a href="#2、常用场景介绍" class="headerlink" title="2、常用场景介绍"></a>2、常用场景介绍</h6><ul><li>应用启动前的特殊代码执行<ul><li>将系统常用的数据加载到内存</li><li> 应用上一次运行的垃圾数据清理</li><li>系统启动成功后的通知的发送</li></ul></li></ul><h6 id="3、代码练习"><a href="#3、代码练习" class="headerlink" title="3、代码练习"></a>3、代码练习</h6><ul><li>通过@Component定义方式实现<ul><li>CommandL ineRunner:参数是字符串数组</li><li>ApplicationRunner:参数被放入AppticationArguments，通过getOptionNames()、getOptionValues()、 getSourceArgs()获取参数</li></ul></li><li>通过@Bean定义方式实现<ul><li>可以通过@Order设置执行顺序</li></ul></li></ul><h6 id="4、测试"><a href="#4、测试" class="headerlink" title="4、测试"></a>4、测试</h6><ul><li>在启动配置中加入参数，保存后启动应用</li><li>顺序？<ul><li>ApplicationRunner执行优先级高于Commandl ineRunner</li><li>以Bean的形式运行的Runner优先级要低于Component注解加implements Runner接口的方式</li><li>Order注解只能保证同类的CommandL ineRunner或ApplicationRunner的执行顺序，不能跨类保证顺序</li></ul></li></ul><h6 id="5、总结"><a href="#5、总结" class="headerlink" title="5、总结"></a>5、总结</h6><ul><li>CommandLineRunner、ApplicationRunner的核心用法是一 致的，就是用于应用启动前的特殊代码执行</li><li>ApplicationRunner的执行顺序先于CommandL ineRunner</li><li>ApplicationRunner将参数封装成了对象，提供了获取参数名、参数值等方法，操作上会方便- -些</li></ul>]]></content>
      
      
      <categories>
          
          <category> Spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>手动搭建webpack脚手架</title>
      <link href="/2022/04/01/shou-dong-da-jian-webpack-jiao-shou-jia/"/>
      <url>/2022/04/01/shou-dong-da-jian-webpack-jiao-shou-jia/</url>
      
        <content type="html"><![CDATA[<h2 id="手动搭建webpack脚手架"><a href="#手动搭建webpack脚手架" class="headerlink" title="手动搭建webpack脚手架"></a>手动搭建webpack脚手架</h2><h3 id="一、Webpack基础配置"><a href="#一、Webpack基础配置" class="headerlink" title="一、Webpack基础配置"></a>一、Webpack基础配置</h3><h6 id="1、loader"><a href="#1、loader" class="headerlink" title="1、loader"></a>1、loader</h6><p>Webpack可以把资源、新技术、新语法-翻译成浏览器可以认识的语法,这些”翻译官”就叫做:loader</p><ul><li>css文件模块打包到js文件</li><li>scss、less翻译成css代码</li><li>ES6+或TS翻译成ES5代码</li><li>JSX或者Vue文件翻译成js代码</li><li>图片文件转base64代码、打包到js文件</li></ul><p><font color="red">npm安装对应的loader在<code>webpack.config.js</code>写相应的配置</font></p><h6 id="2、CSS文件处理打包"><a href="#2、CSS文件处理打包" class="headerlink" title="2、CSS文件处理打包"></a>2、CSS文件处理打包</h6><ul><li>css-loader</li><li>style-loader</li><li>CSS预处理器<ul><li>sass</li><li>less</li><li>styles</li></ul></li></ul><h6 id="3、图片资源打包"><a href="#3、图片资源打包" class="headerlink" title="3、图片资源打包"></a>3、图片资源打包</h6><ul><li>文件路径处理：url-loader</li><li>图片文件处理：file-loader</li></ul><h2 id="Vue工程化"><a href="#Vue工程化" class="headerlink" title="Vue工程化"></a>Vue工程化</h2><h3 id="一、VueCLI脚手架"><a href="#一、VueCLI脚手架" class="headerlink" title="一、VueCLI脚手架"></a>一、VueCLI脚手架</h3><h6 id="1、Vue-CLI-简介"><a href="#1、Vue-CLI-简介" class="headerlink" title="1、Vue CLI 简介"></a>1、Vue CLI 简介</h6><ul><li><p>VueCLI官网</p><ul><li><a href="https://cli.vuejs.org/zh/index.html">https://cli.vuejs.org/zh/index.html</a></li></ul></li><li><p>Vue CLI帮我们做了哪些核心功能</p><ul><li>Vue CLI封装了完整的静态资源模块化打包方案</li><li>Vue CL l提供了本地的热加载调试服务</li><li>Vue CLI还提供了预处理，文件转译，自动化测试和静态检测等功能</li><li>Vue CL l提供了快速开始零配置的原型开发</li></ul></li><li><p>VueCLI与Webpack之间的关系</p><ul><li><img src="https://ossstored.oss-cn-shanghai.aliyuncs.com/img/other/webpack.png"></li></ul></li><li><p>Vue团队从Vue-CLI3.x版本开始，做了2个主要改进</p><ul><li><p>隐藏webpack配置，因为webpack配置绝大部分都是模板配置，每个项目的配置方法都差不多。在此基础上，提供了个性化修改入口。从而简化了项目目录结构，使配置文件更加清晰。</p></li><li><p>提供U|界面化配置的服务，使Vue-CLI上手 更加容易。</p></li></ul></li><li><p>凡事都有两面性</p><ul><li>把配置文件都隐藏起来干嘛?看着是清爽了，难道就是不用学Webpack了?</li><li>提供一个UI界面作什么?程序员还用UI界面?有没有点极客精神了!</li></ul></li></ul><p>隐藏webpack配置，因为webpack配置绝大部分都是模板配置，每个项目的配置方法都差不多。在此基础上，提供了个性化修改入口。从而简化了项目目录结构，使配置文件更加清晰。</p><p>提供U|界面化配置的服务，使Vue-CLI上手 更加容易。</p><p><img src="https://ossstored.oss-cn-shanghai.aliyuncs.com/img/other/vue%20UI%E7%95%8C%E9%9D%A2.png" alt="Vue UI"></p><h6 id="2、镜像源"><a href="#2、镜像源" class="headerlink" title="2、镜像源"></a>2、镜像源</h6><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> get registry<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> config <span class="token builtin class-name">set</span> registry http://registry.npm.taobao.org/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h6 id="3、使用VueCLI2快速搭建项目-NodeJS-8-9"><a href="#3、使用VueCLI2快速搭建项目-NodeJS-8-9" class="headerlink" title="3、使用VueCLI2快速搭建项目:NodeJS 8.9+"></a>3、使用VueCLI2快速搭建项目:NodeJS 8.9+</h6><ul><li><p>步骤</p><ul><li><p>卸载当前高版本: </p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> uninstall <span class="token parameter variable">-g</span> @vue/cli<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>全局安装: </p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> vue-cli<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>创建项目:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">vue init webpack vue-cli2 <span class="token parameter variable">-demo</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>browserify</li><li>browserify-simple</li><li>pwa</li><li>simple</li><li>webpack</li><li>webpack-simple</li></ul></li></ul></li><li><p>VueCLI2目录文件详解</p><ul><li>build文件夹内的文件是webpack资源模块化打包的核心配置文件，包括生产环境资源打包、测试环境资源热更新服务、npm及nodejs版本检查文件、vue文件处理等配置。</li><li>config文件夹内的主要是一些: 生产及测试环境常用环境变量相关的配置，如静态资源打包路径、测试环境服务端口、host等信息</li><li>src文件夹主要存放源代码文件，如js文件、vue文件。src/assets用于存放静态资源文件，如: css文件、图片文件等，是开发工作的核心目录</li><li>static文件夹是webpack默认存放静态资源(css、 image) 的文件夹与src/assets不同的是: static文件 夹内容在打包时会直接复制一个同名文件夹到dist文件夹里，不会参与webpack的编译过程。</li><li>dist文件夹，上图中没有， 是资源模块化打包结果文件夹。在资源打包后会自动创建，生产环境上线发布的就是这个文件夹的内容</li><li>node. modules文件夹是第三方类库安装目录，通常不需要开发人员手动修改。</li><li>.babelrc是is文件编译兼容性配置文件</li><li>.editorconfig是IDE开发工具配置文件，WebStorm、 Atom、Visual Studio(Code)、xcode等都予以支持。</li><li>gitignore是git文件版本管理工具忽略文件配置</li><li>.postcssrc.js主要是Ccss浏览器兼容性处理</li><li>package.json是前端项目配置文件，比如一-些项目的启动、打包脚本，第三方依赖类库版本信息等都是在这个文件中。package jison.lock是npm安装具体第三方类库版本锁定信息，只查看不修改。</li><li>README. md以mackdown语法描述项目信息</li></ul></li><li><p>构建过程调用关系</p><ul><li><img src="https://ossstored.oss-cn-shanghai.aliyuncs.com/img/other/%E6%9E%84%E5%BB%BA%E8%BF%87%E7%A8%8B%E8%B0%83%E7%94%A8%E5%85%B3%E7%B3%BB.png" alt="构建过程调用关系"></li></ul></li><li><p>src文件夹说明</p><ul><li>assets文件:用于存放静态资源，如css文件、 image文件</li><li>components文件夹:用来存放.vue单文件组件</li><li>router文件夹:用来存放前端页面路由配置信息文件</li><li>store文件夹:用来存放vuex状态保持文件</li><li>App.vue:项目的主组件，所有的vue组件都是该组件的子组件或后代组件</li><li>main.js:项目全局文件入口</li></ul></li></ul><h6 id="4、使用VueCLl-3-快速搭建项目-NodeJS-8-11"><a href="#4、使用VueCLl-3-快速搭建项目-NodeJS-8-11" class="headerlink" title="4、使用VueCLl 3+快速搭建项目:NodeJS 8.11+"></a>4、使用VueCLl 3+快速搭建项目:NodeJS 8.11+</h6><ul><li><p>安装Vue-CLI3：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> @vue-cli<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>创建项目：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">vue init webpack vue-cli3-demo<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>单页面应用SPA介绍</p></li><li><p>前端路由的两种实现方式</p><ul><li>hash #</li><li>history模式</li></ul></li><li><p>单页面应用的优缺点</p></li><li><p>安装与配置VueRouter </p><ul><li>已有项目中手动安装VueRouter<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i vue-router <span class="token parameter variable">--save</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>项目构建过程中安装VueRouter</li></ul></li></ul><h6 id="5、vue-CLl新版本与老版本的区别"><a href="#5、vue-CLl新版本与老版本的区别" class="headerlink" title="5、vue CLl新版本与老版本的区别"></a>5、vue CLl新版本与老版本的区别</h6><ul><li><p>新版本构建速度更快，利用了多核与缓存的技术</p></li><li><p>新版本的Webpack被内置到@vue/cli-service,可以很方便地升级。同时大量的webpack模板配置被隐藏到@vue/cli-service里面</p></li><li><p>新版本babel、TypeScript等功能服务以插件的方式注入，方便引入与排除</p></li><li><p>新版本提供了可视化的Vue UI命令，对于不习惯使用命令行的同学,更加方便易用</p></li></ul><h3 id="二、前端路由Vue"><a href="#二、前端路由Vue" class="headerlink" title="二、前端路由Vue"></a>二、前端路由Vue</h3><h6 id="1、单页面应用与-前端路由"><a href="#1、单页面应用与-前端路由" class="headerlink" title="1、单页面应用与 前端路由"></a>1、单页面应用与 前端路由</h6><ul><li><p>单页面应用SPA介绍</p><p>}单页Web应用（single page web application，SPA），就是只有一张Web页面的应用，是加载单个HTML 页面并在用户与应用程序交互时动态更新该页面的Web应用程序。</p></li><li><p>前端路由的两种实现方式</p><p><img src="https://ossstored.oss-cn-shanghai.aliyuncs.com/img/other/vue-Router.png"></p><ul><li><p>hash #</p></li><li><p>history模式</p><ul><li><p>history模式是基于window.history对象的方法 </p></li><li><p>history模式主要就是通过<code>history.pushState</code>和<code>history.replaceState</code>来更改浏览器中的url，并修改页面内容。由于通过history的api调整，并不会向后端发起请求，达到前端路由的目的。 </p></li></ul></li></ul></li><li><p>单页面应用的优缺点</p><ul><li><p>优点</p><ul><li>提供了更加吸引人的用户体验：具有桌面应用的即时性、网站的可移植性和可访问性。</li><li>单页应用的内容的改变不需要重新加载整个页面，web应用更具响应性和更令人着迷。</li><li>单页应用没有页面之间的切换，就不会出现“白屏现象”,也不会出现假死并有“闪烁”现象</li><li>单页应用相对服务器压力小，服务器只用出数据就可以，不用管展示逻辑和页面合成，吞吐能力会提高几倍。</li><li>良好的前后端分离。后端不再负责模板渲染、输出页面工作，后端API通用化，即同一套后端程序代码，不用修改就可以用于Web界面、手机、平板等多种客户端</li></ul></li><li><p>缺点：</p><ul><li><p>首次加载耗时比较多。</p></li><li><p>SEO问题，不利于百度，360等搜索引擎收录。</p></li><li><p>容易造成Css命名冲突。</p></li><li><p>前进、后退、地址栏、书签等，都需要程序进行管理，页面的复杂度很高，需要一定的技能水平和开发成本高。</p></li></ul></li></ul></li></ul><h6 id="2、安装与配置VueRouter"><a href="#2、安装与配置VueRouter" class="headerlink" title="2、安装与配置VueRouter"></a>2、安装与配置VueRouter</h6><ul><li>已有项目中手动安装VueRouter<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i vue-router <span class="token parameter variable">--save</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>项目构建过程中安装VueRouter<ul><li>引入VueRouter插件</li><li>定义路由规则的数组</li><li>创建VueRouter对象</li><li>导出VueRouter对象</li></ul></li></ul><h6 id="3、VueRouter开-发第一个Demo"><a href="#3、VueRouter开-发第一个Demo" class="headerlink" title="3、VueRouter开 发第一个Demo"></a>3、VueRouter开 发第一个Demo</h6><h6 id="4、路由重定向与组件懒加载"><a href="#4、路由重定向与组件懒加载" class="headerlink" title="4、路由重定向与组件懒加载"></a>4、路由重定向与组件懒加载</h6><h6 id="5、嵌套路由的配置实现-国"><a href="#5、嵌套路由的配置实现-国" class="headerlink" title="5、嵌套路由的配置实现-国"></a>5、嵌套路由的配置实现-国</h6><h6 id="6、动态路由的配置与实现"><a href="#6、动态路由的配置与实现" class="headerlink" title="6、动态路由的配置与实现"></a>6、动态路由的配置与实现</h6><h6 id="7、命名路由与命名视图"><a href="#7、命名路由与命名视图" class="headerlink" title="7、命名路由与命名视图"></a>7、命名路由与命名视图</h6><h6 id="8、编程式导航"><a href="#8、编程式导航" class="headerlink" title="8、编程式导航"></a>8、编程式导航</h6><h6 id="9、路由的参数传递与获取"><a href="#9、路由的参数传递与获取" class="headerlink" title="9、路由的参数传递与获取"></a>9、路由的参数传递与获取</h6>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
            <tag> Webpack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot配置管理</title>
      <link href="/2022/03/20/springboot-pei-zhi-guan-li/"/>
      <url>/2022/03/20/springboot-pei-zhi-guan-li/</url>
      
        <content type="html"><![CDATA[<h2 id="SpringBoot配置管理"><a href="#SpringBoot配置管理" class="headerlink" title="SpringBoot配置管理"></a>SpringBoot配置管理</h2><h3 id="一、SpringBoot启动流程简析"><a href="#一、SpringBoot启动流程简析" class="headerlink" title="一、SpringBoot启动流程简析"></a>一、SpringBoot启动流程简析</h3><ul><li><p>SpringApplication应用创建步骤</p></li><li><p>SpringfactoriesLoader</p><ul><li>META-INF/spring.factories文件获取工厂类接口中的实现类，初始化并保存在缓存中，供SpringBoot启动过程的各个阶段调用</li><li>自动化配置与此息息相关</li></ul></li><li><p>反射机制</p></li></ul><h3 id="二、bean自动装配原理"><a href="#二、bean自动装配原理" class="headerlink" title="二、bean自动装配原理"></a>二、bean自动装配原理</h3><ul><li>@EnableAUtoConfiguration作用</li><li>SpringFactoriesL oader会以@EnableAutoConfiguration的包名和类名org.springframework. boot. autoconfigure EnableAutoConfiguration为Key查找spring factories文件,并将value中的类 名实例化加载到Spring Boot应用中。</li><li>spring factories文件中的每一行都是一个自动装配类</li></ul><h3 id="三、详解YAML语法及占位符语法"><a href="#三、详解YAML语法及占位符语法" class="headerlink" title="三、详解YAML语法及占位符语法"></a>三、详解YAML语法及占位符语法</h3><ul><li><p>YAML是”YAML Aint a Markup Language” (YAML 不是一种标记语言)的递归缩写</p></li><li><p>一种数据序列化语言，用一定的格式代表数据结构</p></li><li><p>格式清晰，表现力强，常用于配置文件</p></li><li><p>例题</p><ul><li><p>一个家庭有爸爸、妈妈、孩子。</p></li><li><p>这个家庭有一个名字（family-name）叫做“happy family”</p></li><li><p>爸爸有名字（name）和年龄（age）两属性</p></li><li><p>妈妈有两个别名</p></li><li><p>孩子除了名字（name）和年龄（age）两个属性，还有一个friends的集合</p></li><li><p>每一friend有两个属性：hobby（爱好）和性别（gender）</p><ul><li><p>能够用@Value绑定单个属性</p></li><li><p>用@Component注解标注需要被Spring容器托管的bean</p></li><li><table><thead><tr><th></th><th>@ConfigurationProperties</th><th>@Value</th></tr></thead><tbody><tr><td>功能</td><td>批量注入属性到Java类</td><td>一个个属性指定注入</td></tr><tr><td>松散语法绑定</td><td>支持</td><td>不支持</td></tr><tr><td>复杂数据类型（对象、数组）</td><td>支持</td><td>不支持</td></tr><tr><td>JSR303数据校验</td><td>支持</td><td>不支持</td></tr><tr><td>SqlEL</td><td>不支持</td><td>支持</td></tr></tbody></table></li></ul></li></ul></li><li><p>占位符语法</p><ul><li>随机数占位符<ul><li>${random.value} - 类似uuid的随机数，没有”-“连接</li><li>${random.int} - 随机取整型范围内的一个值</li><li>${random.long} - 随机取长整型范围的一个值</li><li>${random.long(100,200)} - 随机生成长整型100-200范围的一个值</li><li>${random.uuid} - 生成一个uuid，有短杠连接</li><li>${random.int(10)} - 随机生成一个10以内的数</li><li>${random.int(100,200)} - 随机生成一个100-200 范围以内的数</li></ul></li></ul></li></ul><h3 id="四、YAMl配置绑定变量两种方式"><a href="#四、YAMl配置绑定变量两种方式" class="headerlink" title="四、YAMl配置绑定变量两种方式"></a>四、YAMl配置绑定变量两种方式</h3><ul><li>能够用 @Value(“$(family.family-name)”)绑定单个属性</li><li>能用@Configuration Properties（prefix = “family”)绑定所有属性</li><li>用@Component注解标注需要被Spring容器托管的bean</li></ul><h3 id="五、配置属性值数据绑定校验"><a href="#五、配置属性值数据绑定校验" class="headerlink" title="五、配置属性值数据绑定校验"></a>五、配置属性值数据绑定校验</h3><ul><li><p>为什么要做配置文件属性的校验</p></li><li><p>如何对绑定的属性值进行校验</p><ul><li>在需要校验的属性装配类上加上@Validated</li><li>对需要校验的属性指定规则</li><li>需要加 hibernate-validator 依赖</li></ul></li><li><p>Hibernate Validator是 Bean Validation 的参考实现，它提供了 JSR 303 规范中所有内置 constraint 的实现，除此之外还有一些附加的constraint。</p></li><li><p>在日常开发中，Hibernate Validator经常用来验证Bean的字段，基于注解，方便快捷高效</p><ul><li><table><thead><tr><th>注解</th><th>作用</th></tr></thead><tbody><tr><td>@Valid</td><td>被注解的元素是一个对象，需要检查此对象的所有字段值</td></tr><tr><td>@Null</td><td>被注释的元素必须为null</td></tr><tr><td>@NotNull</td><td>被注释的元素必须不为null</td></tr><tr><td>@AssertTrue</td><td>被注释的元素必须为true</td></tr><tr><td>@AssertFalse</td><td>被注释的元素必须为false</td></tr><tr><td>@Min(value)</td><td>被注释的元素必须是一个数字，其值必须大于等于指定的最小值</td></tr><tr><td>@Max(value)</td><td>被注释的元素必须是一个数字，其值必须小于等于指定的最大值</td></tr><tr><td>@DecmalMin(value)</td><td>被注释的元素必须是一个数字，其值必须大于等于指定的最小值</td></tr><tr><td>@DecmalMax(value)</td><td>被注释的元素必须是一个数字，其值必须小于等于指定的最大值</td></tr><tr><td>@Size(max,min)</td><td>被注释的元素的大小必须在指定的范围内</td></tr><tr><td>@Didits(integer,fraction)</td><td>被注释的元素必须是一个数字，其值必须在可接受的范围内</td></tr><tr><td>@Past</td><td>被注释的元素必须是一个过去的日期</td></tr><tr><td>@Future</td><td>被注释的元素必须是一个将来的日期</td></tr><tr><td>@Pattern(value)</td><td>被注释的元素必须符合指定的正则表达式</td></tr><tr><td>@Email</td><td>被注释的元素必须是电子邮箱的地址</td></tr></tbody></table></li><li><table><thead><tr><th>注解</th><th>作用</th></tr></thead><tbody><tr><td>@NotBlank</td><td>被注释的字符串必须为非空</td></tr><tr><td>@NotEmpty</td><td>被注释的字符串必须为非空</td></tr><tr><td>@Length(min=,max=)</td><td>被注释的字符串的大小必须在指定的范围内</td></tr><tr><td>@Range(min=,max=)</td><td>被注释的元素必须在合适的范围内</td></tr><tr><td>@URL(protocol=,host=,port=,regexp=,flags=)</td><td>被注释的字符串必须是一个有效的url</td></tr><tr><td>@CreditCardNumber</td><td>被注释的字符串必须通过Luhn校验算法，银行卡，信用卡等号码一般用Luhn计算合法性</td></tr><tr><td>@ScriptAssert(lang=,script=,alias=)</td><td>要有Java Script API 即 JSR 223 的实现</td></tr><tr><td>@SafeHtml(whitelisType,additionalTags=)</td><td>classpath中要有jsoup包</td></tr></tbody></table><p>附加约束</p></li></ul></li><li><p>HTTP请求的校验，需要在Controller类头部加上@validated 注解</p></li></ul><h3 id="六、加载额外配置文件的两种方式"><a href="#六、加载额外配置文件的两种方式" class="headerlink" title="六、加载额外配置文件的两种方式"></a>六、加载额外配置文件的两种方式</h3><ul><li><p>为什么要加载额外的配置文件？</p></li><li><p>使用@PrpertySource 加载自定义的yml 或 properties文件</p><ul><li>resouces目录子年间family.properties</li></ul></li><li><p>使用@ImportResource注解加载Spring的xml配置文件</p><ul><li><p>编写Bean类</p><ul><li>```java<br>public class TestBeanService{<pre><code>private String name;public void setName(String name){    this.name = name;}public void getName(String name){    return name;}</code></pre>}<pre class="line-numbers language-none"><code class="language-none">    - resouces新建beans.xml，通过setter注入或者构造方法注入给属性传值  - ```java    &lt;bean id="testBeanService" class="com.bear.boot.service.TestBeanService"&gt;    &lt;property name="name" value="SpringBoot"/&gt;    &lt;/bean&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li><li><p>在启动主类加注解，用来读取Spring.xml配置文件@ImportResource(locations = (“classpath.beans.xml”))</p></li><li><p>测试Spring环境中是否有指定名称的bean，做断言</p></li></ul></li></ul><h3 id="七、使用SqlEL表达式绑定配置项"><a href="#七、使用SqlEL表达式绑定配置项" class="headerlink" title="七、使用SqlEL表达式绑定配置项"></a>七、使用SqlEL表达式绑定配置项</h3><p>Annotation注解上，在Spring Bean的创建过程中生效。可用于在运行时查询和操作对象。SpEL 书写在XML配置文件或者Annotation注解上，在Spring Bean的创建过程中生效。</p><h3 id="八、profile不同环境使用不同配置"><a href="#八、profile不同环境使用不同配置" class="headerlink" title="八、profile不同环境使用不同配置"></a>八、profile不同环境使用不同配置</h3><ul><li><p>配置文件规划</p><ul><li>减少配置修改次数</li><li>方便环境的配置切换</li><li>准备工作(为不同的环境定义不同的配置文件)<ul><li>application.yml</li><li>application-dev.yml</li><li>application-text.yml</li><li>application-prod.yml</li></ul></li></ul></li><li><p>切换环境的方式</p><ul><li>通过主配置文件切换</li><li>配置VM options 、Program auguments 、Active Profile切换<ul><li>Dspring.profiles.active=prod</li><li>spring.profiles.active=prod</li></ul></li><li><img src="C:/Users/%E7%86%8A%E6%AE%BF%E4%B8%8B/Desktop/%E7%AA%81%E5%87%BB%E5%B0%8F%E9%98%9F/%E7%AC%94%E8%AE%B001.png" alt="笔记01"></li></ul></li></ul><h3 id="九、配置及配置文件的加载优先级"><a href="#九、配置及配置文件的加载优先级" class="headerlink" title="九、配置及配置文件的加载优先级"></a>九、配置及配置文件的加载优先级</h3><ul><li><p>classpath:/</p></li><li><p>classpath:/config/</p></li><li><p>/</p></li><li><p>/config/</p></li><li><p>file路径优先级高于classpath</p></li><li><p>加上config比不加优先级高</p><ul><li>当前项目路径config目录 下的配置文件优先级最高</li></ul></li><li><p>自定义配置文件（项目打包，启动时通过命令行参数来指定配置文件的位置）</p><ul><li><p>java-jar./boot-launch-1.0.jar – speing.config.location=/Users/bear/Desktop/application.yml</p></li><li><p>mvn.package - Dmaven.test.skp=true</p><p>maven跳过测试打包</p></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> SpringBoot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac下安装多个版本的JDK并随意切换</title>
      <link href="/2021/09/02/mac-xia-an-zhuang-duo-ge-ban-ben-de-jdk-bing-sui-yi-qie-huan/"/>
      <url>/2021/09/02/mac-xia-an-zhuang-duo-ge-ban-ben-de-jdk-bing-sui-yi-qie-huan/</url>
      
        <content type="html"><![CDATA[<blockquote><p>JDK 版本已经更新到了 17，我们需要学习 JDK 的一些新特性，但是日常使用基本上都是基于 JDK8，因此，需要在 Mac 环境下安装多个版本的 JDK，并且确保能够随意切换。</p></blockquote><h3 id="JDK-下载"><a href="#JDK-下载" class="headerlink" title="JDK 下载"></a>JDK 下载</h3><p>点击 <a href="https://www.oschina.net/action/GoToLink?url=https://www.oracle.com/technetwork/java/javase/downloads/index.html">官网</a> ，进入下载界面，</p><p>同意协议内容</p><p>找到对应的 Mac 版本，</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>安装下载下来的文件，期间会要求输入一次电脑密码，然后自动安装完。</p><p>如果显示文件已经损坏，打开 终端 输入</p><pre class="line-numbers language-c" data-language="c"><code class="language-c">sudo spctl <span class="token operator">--</span>master<span class="token operator">-</span>disable<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>表示可以安装非 app store 的软件。</p><blockquote><p>这里我安装了 OracleJDK 的 8、11、17 三个 LTS 版本</p></blockquote><p>在/Library/Java/JavaVirtualMachines 目录下会出现三个目录：</p><p><img src="https://bearcad.oss-cn-shanghai.aliyuncs.com/Code/JDK01.png" alt="JDK01"></p><h3 id="配置环境"><a href="#配置环境" class="headerlink" title="配置环境"></a>配置环境</h3><blockquote><p>Mac 下通过 bash_profile 文件来对环境信息进行配置。执行以下命令打开配置文件：</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vim</span> ~/.bash_profile<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果原本没有.bash_profile 文件，在运行 vim ~/.bash_profile 命令时会创建该文件。<br>根据环境变量信息新增 JDK 几个版本的相关内容：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># Java Config : Java家配置</span><span class="token builtin class-name">export</span> <span class="token assign-left variable">JAVA8_HOME</span><span class="token operator">=</span>/Library/Java/JavaVirtualMachines/jdk-1.8.0_345.jdk/Contents/Home<span class="token builtin class-name">export</span> <span class="token assign-left variable">JAVA17_HOME</span><span class="token operator">=</span>/Library/Java/JavaVirtualMachines/jdk-17.0.3.1.jdk/Contents/Home<span class="token builtin class-name">export</span> <span class="token assign-left variable">JAVA19_HOME</span><span class="token operator">=</span>/Library/Java/JavaVirtualMachines/jdk-19.0.1.jdk/Contents/Home<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token variable">${<span class="token environment constant">PATH</span>}</span><span class="token builtin class-name">:</span><span class="token variable">${JAVA_HOME}</span>/bin<span class="token comment"># config alias: 配置别名</span><span class="token builtin class-name">alias</span> <span class="token assign-left variable">jdk8</span><span class="token operator">=</span><span class="token string">"export JAVA_HOME=<span class="token variable">$JAVA8_HOME</span>"</span><span class="token builtin class-name">alias</span> <span class="token assign-left variable">jdk17</span><span class="token operator">=</span><span class="token string">"export JAVA_HOME=<span class="token variable">$JAVA17_HOME</span>"</span><span class="token builtin class-name">alias</span> <span class="token assign-left variable">jdk19</span><span class="token operator">=</span><span class="token string">"export JAVA_HOME=<span class="token variable">$JAVA19_HOME</span>"</span><span class="token comment"># config default :jdk 配置默认JDK</span><span class="token builtin class-name">export</span> <span class="token assign-left variable">JAVA_HOME</span><span class="token operator">=</span><span class="token variable">$JAVA8_HOME</span><span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token string">"<span class="token variable">$JAVA_HOME</span>:<span class="token environment constant">$PATH</span>"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>修改保存上述配置，对 bash_profile 进行编译生效</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">source</span> ~/.bash_profile<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果使用的是 zshrc,则使用以下命令</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">source</span> ~/.zshrc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后在终端执行 <code>java -version</code> 会发现 jdk 版本正常显示为 jdk8</p><p><img src="https://bearcad.oss-cn-shanghai.aliyuncs.com/Code/JDK03.png" alt="JDK03"></p><h3 id="任意切换-Java-环境"><a href="#任意切换-Java-环境" class="headerlink" title="任意切换 Java 环境"></a>任意切换 Java 环境</h3><blockquote><p>如需要将 jdk 版本切换为 jdk11，直接输入 JDK11 环境变量的别名：jdk11 即可,然后查看版本</p></blockquote><p><img src="https://bearcad.oss-cn-shanghai.aliyuncs.com/Code/JDK02.png" alt="JDK02"></p><h3 id="IDEA-中添加-JDK"><a href="#IDEA-中添加-JDK" class="headerlink" title="IDEA 中添加 JDK"></a>IDEA 中添加 JDK</h3><blockquote><p>在 IDEA 的 Project Structure 设置中新增 JDK 的配置，便可使用新增的 JDK 进行开发了</p></blockquote><p><img src="https://bearcad.oss-cn-shanghai.aliyuncs.com/Code/IDEA01.png" alt="IDEA添加JDK"></p><p><img src="https://bearcad.oss-cn-shanghai.aliyuncs.com/Code/IDEA02.png" alt="多个JDK可按需选择"></p><p>若项目是多模块的，可以为每个模块指定不同的 JDK 版本</p><p><img src="https://bearcad.oss-cn-shanghai.aliyuncs.com/Code/IDEA03.png" alt="不同模块指定不同JDK"></p>]]></content>
      
      
      <categories>
          
          <category> 环境 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mac </tag>
            
            <tag> JDK </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac软件汇总</title>
      <link href="/2021/09/01/mac-ruan-jian-hui-zong/"/>
      <url>/2021/09/01/mac-ruan-jian-hui-zong/</url>
      
        <content type="html"><![CDATA[<h2 id="一、常用软件"><a href="#一、常用软件" class="headerlink" title="一、常用软件"></a>一、常用软件</h2><h3 id="效率工具"><a href="#效率工具" class="headerlink" title="效率工具"></a>效率工具</h3><ul><li><a href="https://www.alfredapp.com/">Alfred</a> - Mac 上应该安装的第一个效率神器。</li></ul><h3 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h3><ul><li><a href="https://zh.snipaste.com/">snipaste</a> - 新生代截图工具。【荐】。</li><li><a href="https://zh.xnipapp.com/">Xnip</a>- Mac 上方便好用的截图工具，支持滚动截图；最大的优点是，<strong>截图可以自带阴影，效果不错</strong>。<a href="https://sspai.com/post/42654">#</a>。【荐】</li><li><a href="https://itunes.apple.com/cn/app/annotate-capture-and-share/id918207447?mt=12">Annotate</a> - 款非常强大的图片注释软件，可对屏幕截图或者现有图片进行批注。同时，在基础的图片注释功能上还增加了“局部高亮”、“Emoji 表情”、 ”GIF 动图录制与注释“、“与 Dropbox/CloudApp 同步数据“等功能，虽然没有 Skitch 的图片管理功能，也没有 Napkin 的图片拼贴功能，但从注释操作的需求上看，它的确算是 No.1。<a href="https://sspai.com/post/30486">#</a></li><li><a href="http://jietu.qq.com/">截图(Jietu)</a> - 截图附带强大的标注功能，腾讯作品。支持截图生成二维码。支持视频录制，可以录制成 gif、mp4、mov 等格式。 <a href="https://www.v2ex.com/t/280552">#</a> <a href="http://sspai.com/33021">#</a></li><li><a href="https://evernote.com/intl/zh-cn/skitch/">Skitch</a> - 截图附带强大的标注功能。</li><li><a href="http://snip.qq.com/">Snip</a> - 高效的截图工具，支持滚动截屏，腾讯作品。</li><li><a href="https://itunes.apple.com/cn/app/snappy-snapshots-the-smart-way/id512617038?mt=12">snappy</a> - 官网地址：<a href="http://snappy-app.com/%E3%80%82%E6%96%B0%E5%87%BA%E6%9D%A5%E7%9A%84%E4%B8%80%E6%AC%BE%E6%88%AA%E5%9B%BE%E5%B7%A5%E5%85%B7%EF%BC%8C%E6%88%AA%E5%9B%BE%E4%B9%8B%E5%90%8E%E5%8F%AF%E7%94%9F%E6%88%90%E6%82%AC%E6%B5%AE%E7%AA%97%E3%80%82[#](http://www.ifanr.com/app/891044)[#](https://sspai.com/post/36375)">http://snappy-app.com/。新出来的一款截图工具，截图之后可生成悬浮窗。[#](http://www.ifanr.com/app/891044)[#](https://sspai.com/post/36375)</a></li></ul><h3 id="gif录制"><a href="#gif录制" class="headerlink" title="gif录制"></a>gif录制</h3><ul><li><a href="http://www.cockos.com/licecap/">Licecap</a> - 是一款屏幕录制工具输出 GIF，录制过程中可以随意改变录屏范围，录制的文件也非常小。支持 Mac 和 Windows 平台。<a href="https://github.com/justinfrankel/licecap">开源</a> 【荐】。录制结束后，如果觉得文件过大，可以在这个网站<a href="https://ezgif.com/optimize%E4%B8%8A%E8%BF%9B%E8%A1%8C%E5%8E%8B%E7%BC%A9%E3%80%82">https://ezgif.com/optimize上进行压缩。</a></li><li><a href="https://getkap.co/">Kap</a> - 轻量 GIF 录屏小工具。<a href="https://github.com/wulkano/kap">开源</a>。</li></ul><h3 id="压缩／解压"><a href="#压缩／解压" class="headerlink" title="压缩／解压"></a>压缩／解压</h3><ul><li><a href="https://macitbetter.com/">BetterZip 3</a> - 压缩解压缩工具。支持格式 ZIP、TAR、TGZ、TBZ、TXZ (new)、7-ZIP、RAR。[荐]</li><li><a href="https://mqxu.top/2021/08/13/mac-ruan-jian-hui-zong/">The Unarchiver</a> - 压缩／解压工具。</li></ul><h3 id="输入法"><a href="#输入法" class="headerlink" title="输入法"></a>输入法</h3><ul><li><a href="http://pinyin.sogou.com/mac/">搜狗输入法</a> - 搜狗输入法。【荐】</li><li><a href="https://srf.baidu.com/input/mac.html">百度输入法</a> - 支持拼音五笔输入。</li><li><a href="https://qingg.im/index.html">清歌五笔输入法</a> - 为 iOS 和 Mac 专门打造的五笔输入法。</li><li><a href="http://www.pawpawsoft.com/">WBIM</a> - 五笔输入法。</li><li><a href="http://matthewpalmer.net/rocket/">Rocket</a> - Emoji 标签输入。</li><li><a href="https://itunes.apple.com/cn/app/yan-wen-zi/id914708191?mt=12">颜文字</a> - 颜文字输入。</li><li><a href="http://rime.im/">RIME</a> - 中州韻輸入法引擎。<a href="https://github.com/rime">开源</a>。</li><li><a href="https://github.com/dongyuwei/hallelujahIM">哈利路亚英文输入法</a> - 智能英文输入法，具备自动补全，自动纠错功能。</li><li><del><a href="http://qq.pinyin.cn/">QQ 输入法</a> - 腾讯出品的输入法。</del></li></ul><h3 id="下载工具"><a href="#下载工具" class="headerlink" title="下载工具"></a>下载工具</h3><blockquote><p>至今为止，我还没找到一个靠谱、好用的下载工具。</p></blockquote><ul><li><a href="https://www.xunlei.com/">迅雷</a> - 限速严重，没有会员基本没法儿用。</li><li><a href="https://www.transmissionbt.com/">Transmission</a> - 免费的 BitTorrent 客户端 <a href="https://github.com/Sigil-Ebook/Sigil">开源</a>。</li><li><a href="https://aria2.github.io/">aria2</a> - 一款支持多种协议的轻量级命令行下载工具。<a href="https://github.com/aria2">开源</a>。</li><li><a href="http://jdownloader.org/">JDownloader</a> - 下载工具，下载文件的一键式托管。</li><li><a href="https://you-get.org/">You-Get</a> - 网络富媒体命令行下载工具。<a href="https://github.com/soimort/you-get">开源</a>。</li><li><a href="http://www.freedownloadmanager.org/">Free Download Manager</a> - 功能强大的下载加速器。</li><li><a href="http://mac.eltima.com/download-manager.html">FOLX</a> - Folx 是一个 Mac osx 系统风格界面的下载管理工具。</li><li><a href="http://enfi.cloud/">ENFI 下载器</a> - 使用 P2P 下载技术，支持 HTTP，BT，磁力链等各种协议，高速下载让你摆脱限速的困扰，从此告别低速。</li></ul><h3 id="NTFS-移动硬盘读写"><a href="#NTFS-移动硬盘读写" class="headerlink" title="NTFS 移动硬盘读写"></a>NTFS 移动硬盘读写</h3><blockquote><p>其实，macOS 系统本身是已经原生支持 NTFS 磁盘格式的读与写的，只不过 NTFS 毕竟是老对手 微软 Windows 产品下的技术，碍于版权和商业上的原因，苹果只好把 NTFS 的“写入”功能给屏蔽掉，变成系统的隐藏特性。</p></blockquote><ul><li><a href="https://china.paragon-software.com/home-mac/ntfs-for-mac/">Paragon NTFS for Mac</a> - NTFS 移动硬盘读写工具。[荐]</li><li><a href="https://www.ntfsformac.com/">NTFS for Mac 助手</a> - 轻松实现 Mac 电脑读写 NTFS 磁盘。[荐]。</li><li><a href="http://enjoygineering.com/mounty/">Mounty</a> - 免费让 Mac 原生支持移动硬盘/U 盘 NTFS 读写的驱动应用。团长把这个软件试用了一段时间，发现容易导致文件丢失，所以，请慎用。<a href="http://www.iplaysoft.com/mounty-for-ntfs.html">#</a></li></ul><h3 id="日历工具"><a href="#日历工具" class="headerlink" title="日历工具"></a>日历工具</h3><ul><li><a href="https://flexibits.com/fantastical">Fantastical</a> - 日历应用程序，你将管理好生活。[荐]。</li></ul><h3 id="GTD-时间管理"><a href="#GTD-时间管理" class="headerlink" title="GTD 时间管理"></a>GTD 时间管理</h3><ul><li><a href="https://www.omnigroup.com/omnifocus">OmniFocus</a> - 著名 GTD，上手之后秒杀同类。79.99 美元。<a href="http://www.asianefficiency.com/technology/omnifocus-mac-review/">#</a></li></ul><h3 id="密码管理"><a href="#密码管理" class="headerlink" title="密码管理"></a>密码管理</h3><ul><li><a href="https://1password.com/">1password</a> - 全平台的帐号密码管理软件。[荐]</li><li><a href="https://lastpass.com/">LastPass</a> - 密码管理器和安全的数字笔记。</li><li><a href="https://www.keepassx.org/">KeePassX</a> - 一个免费的，<a href="https://github.com/keepassx/keepassx">开源</a>的，体积小的密码管理器。</li><li><a href="http://mstarke.github.io/MacPass/">MacPass</a> - <a href="https://github.com/mstarke/MacPass">开源</a>的密码管理器。</li></ul><h3 id="窗口管理"><a href="#窗口管理" class="headerlink" title="窗口管理"></a>窗口管理</h3><ul><li><a href="https://mqxu.top/2021/08/13/mac-ruan-jian-hui-zong/">Magnet</a> - 窗口分屏工具。【荐】</li><li><a href="https://github.com/fikovnik/ShiftIt">ShiftIt</a> - 窗口位置和大小管理软件。 [[开源]]<a href="https://mqxu.top/2021/08/13/mac-ruan-jian-hui-zong/%E8%8D%90">https://github.com/fikovnik/ShiftIt</a></li><li><a href="http://manytricks.com/moom/">Moom</a> - 多任务多窗口的软件。</li><li><a href="https://github.com/jigish/slate">Slate</a> - 窗口管理器，可用 JavaScript 写配置。[<a href="https://github.com/jigish/slate">开源]</a></li><li><a href="http://ianyh.com/amethyst/">Amethyst</a> - 窗口管理器（自动保持窗口大小的窗口）。<a href="https://github.com/ianyh/Amethyst">开源</a></li><li><a href="https://www.spectacleapp.com/">Spectacle</a> - 简单的移动和调整大小的窗口，和可定制的键盘快捷键。</li><li><a href="https://mqxu.top/2021/08/13/mac-ruan-jian-hui-zong/">Fenetre</a>- 窗口置顶工具。（我试了下，并不是那么好用）</li></ul><h3 id="翻译工具"><a href="#翻译工具" class="headerlink" title="翻译工具"></a>翻译工具</h3><ul><li><a href="http://cidian.youdao.com/multi.html">有道翻译</a> - 有道词典桌面版。</li><li><a href="http://cidian.dict.cn/mac.html">辞海词典</a> - 学单词、背单词、辞海词典。</li><li><a href="http://www.eudic.net/eudic/mac_dictionary.aspx">eudic</a> - 欧路词典。</li><li><a href="http://www.itranslate.com/">iTranslate</a> - 支持全世界超过 80 种语言发音和输出。</li></ul><h3 id="Magic-mouse-鼠标增强"><a href="#Magic-mouse-鼠标增强" class="headerlink" title="Magic mouse 鼠标增强"></a>Magic mouse 鼠标增强</h3><ul><li><a href="http://www.bettertouchtool.net/">BetterTouchTool</a> - 触控板、Magic mouse 鼠标增强工具。比如，这个工具可以让 Magic mouse 实现「轻点代替点按」。【荐】。<a href="https://mp.weixin.qq.com/s/A_LP4uQKSVkSNZR5EKEaxA">#</a>、<a href="https://mp.weixin.qq.com/s/DxvLJRF8nhIJ1z_7E5CuIA">#</a>、<a href="https://mp.weixin.qq.com/s/DxvLJRF8nhIJ1z_7E5CuIA">#</a></li></ul><h3 id="其他实用工具"><a href="#其他实用工具" class="headerlink" title="其他实用工具"></a>其他实用工具</h3><ul><li><a href="https://justgetflux.com/">f.lux</a> - 降低屏幕的色温，减弱蓝光，保护眼睛。【荐】</li><li><a href="https://www.mowglii.com/itsycal/">Itsycal</a> - 一款简洁实用的开源日历工具。可以直接在 menubar 上展示今天是几号；点击后，还自动框选出了本月的时间范围。好处是，可以在最短的时间内查看日历，基本可以替代原生的时间了。<a href="https://github.com/sfsam/itsycal">开源</a>。【荐】</li></ul><h3 id="其他工具"><a href="#其他工具" class="headerlink" title="其他工具"></a>其他工具</h3><ul><li><a href="https://github.com/fancymax/12306ForMac">12306ForMac</a> - Mac 版 12306 订票/捡票 助手。<a href="https://github.com/fancymax/12306ForMac">开源</a></li><li><a href="http://www.airserver.com/Download">AirServer</a> - 将手机投影到电脑上。</li><li><a href="https://www.mediaatelier.com/CheatSheet/">CheatSheet</a> - CheatSheet 是一款 Mac 上的非常实用的快捷键快速提醒工具。</li><li><a href="https://github.com/insidegui/WWDC">WWDC</a> - Mac OS 的非官方的 WWDC APP。[<a href="https://github.com/insidegui/WWDC">开源]</a></li><li><a href="http://xscopeapp.com/">xScope</a> - 测量、检查和测试屏幕上的图形和布局的工具。搜索你的苹果和网络，快速打开应用程序。</li><li><a href="https://todoist.com/mac">Todoist</a> - 跨平台的任务管理器与移动应用程序。</li><li><a href="https://www.taskpaper.com/">TaskPaper</a> - 漂亮的纯文本任务列表。</li><li><a href="https://todoist.com/mac">Wunderlist</a> - 奇妙清单跨平台的任务管理器与移动应用程序。</li><li><a href="http://scripts.sil.org/ukelele">Ukelele</a> - Unicode 键盘布局编辑器。</li><li><a href="https://pqrs.org/osx/karabiner/">Karabiner</a> - 一个强大的和稳定的 OS X 的键盘定制。[<a href="https://github.com/tekezo/Karabiner">开源</a></li><li><a href="http://keytty.com/">Keytty</a> - 让你通过键盘使用鼠标。</li><li><a href="http://freemacsoft.net/appcleaner/">AppCleaner</a> - 一个小应用程序，让你彻底卸载不需要的应用程序。</li><li><a href="https://macitbetter.com/">BetterZip 3</a> - 压缩解压缩工具支持格式 ZIP、TAR、TGZ、TBZ、TXZ (new)、7-ZIP、RAR。[荐]</li><li><a href="http://numi.io/">Numi</a> - 漂亮的计算器应用。</li><li><a href="http://www.shauninman.com/archive/2016/10/20/day_o_2_mac_menu_bar_clock">Day-O 2</a> - 菜单日历更换内置日历。</li><li><a href="http://www.titanium.free.fr/">OnyX</a> - 多功能实用工具来验证磁盘和文件，运行清洁和系统维护任务，配置隐藏选项等。</li><li><a href="https://codinn.com/products/ssh-tunnel/">SSH Tunnel</a> - 管理你的 SSH。</li><li><a href="http://enjoygineering.com/mounty/">Mounty</a> - NTFS 分区读写组件。</li><li><a href="https://www.paragon-software.com/home/ntfs-mac/">Paragon NTFS</a> - 在 Mac OS X 中完全读写、修改、访问 Windows NTFS 硬盘、U 盘等外接设备的文件。</li><li><a href="http://www.tuxera.com/products/tuxera-ntfs-for-mac/">Tuxera NTFS</a> - Mac 上的 NTFS 文件系统驱动。</li><li><a href="https://gfx.io/">gfxCardStatus</a> - 控制 Mac 独立显卡与集成显卡之间的切换。</li><li><a href="http://openemu.org/">openEmu</a> - 模拟器，可以玩魂斗罗之类，放松回到小时候。[<a href="https://github.com/OpenEmu/OpenEmu">开源]</a></li><li><a href="http://www.hammerspoon.org/">Hammerspoon</a> - 功能强大的自动化工具，Lua 脚本驱动，支持窗口管理。[<a href="https://github.com/Hammerspoon/hammerspoon">开源]</a></li><li><a href="https://daisydiskapp.com/">DaisyDisk</a> - 磁盘空间使用扫描工具。</li><li><a href="https://bjango.com/mac/istatmenus/">iStat pro</a> - 免费的 Mac OS 电脑硬件信息检测软件。</li><li><a href="https://getbitbar.com/">BitBar</a> - 支持使用各种语言将信息展示到 Mac OS 的菜单栏。<a href="https://github.com/matryer/bitbar">开源</a></li><li><a href="http://www.clipmenu.com/">ClipMenu</a> - 一个剪贴板操作的管理器。</li><li><a href="http://pasteapp.me/">Paste</a> - 智能剪贴板历史片段管理。</li><li><a href="http://www.controlplaneapp.com/">ControlPlane</a> - 自定义 Mac 情景模式。某些场景让 Mac 自动静音或是自动打开 Mail 客户端等等。<a href="https://github.com/dustinrue/ControlPlane">开源</a></li><li><a href="http://lightheadsw.com/caffeine/">Caffeine</a> - 实用工具，菜单栏按钮，点击休眠。</li><li><a href="http://zythum.sinaapp.com/youkuhtml5playerbookmark/">HTML5 Player</a> - Chrome 插件解决中国视频网站播放视频电脑发热的情况。</li><li><a href="http://www.monityapp.com/">Monity</a> - 帮助用户实时监控系统的一款非常漂亮的软件。</li><li><a href="https://github.com/Chris911/iStats">iStats</a> - iStats 是一个可以让你快速查看电脑 CPU 温度，磁盘转速和电池等信息的命令行工具。[<a href="https://github.com/Chris911/iStats">开源]</a></li><li><a href="https://www.macupdate.com/app/mac/22211/insomniax">InsomniaX</a> - 合上盖子不眠不休，继续听歌下载。</li><li><a href="https://www.macupdate.com/app/mac/37991/nosleep">NoSleep</a> - 合上盖子不休眠，可根据是否连接电源单独设置。</li><li>Finder<ul><li><a href="https://github.com/sindresorhus/quick-look-plugins">Quicklook-Plugins</a> - Finder 快速预览文件插件。</li><li><a href="http://www.cocoatech.com/pathfinder/">Path Finder</a> - 强大的 Finder 替代者，拥有很多特性。</li><li><a href="http://totalfinder.binaryage.com/">TotalFinder</a> - 强大的 Finder 替代者，界面风格像 Chrome。【荐】</li><li><a href="https://www.trankynam.com/xtrafinder/">XtraFinder</a> - 给 Finder 添加有用的新特性。</li></ul></li></ul><h2 id="二、办公软件"><a href="#二、办公软件" class="headerlink" title="二、办公软件"></a>二、办公软件</h2><h3 id="笔记软件-amp-知识管理"><a href="#笔记软件-amp-知识管理" class="headerlink" title="笔记软件 &amp; 知识管理"></a>笔记软件 &amp; 知识管理</h3><ul><li><a href="https://www.yinxiang.com/">印象笔记</a> - 记录一切。[荐]</li><li><a href="http://www.wiz.cn/download.html">为知笔记</a> - 支持 Markdown，搜集整理图片链接导入文档。[荐]</li><li><a href="https://www.notion.so/">Notion</a> - 新生代笔记软件。</li><li><a href="http://note.youdao.com/">有道云笔记</a> - 支持多目录，Markdown，iWork/Office 预览。</li><li><a href="http://happenapps.com/#quiver">Quiver</a> - 程序猿的笔记本。</li><li><a href="http://app.leanote.com/">leanote</a> - 蚂蚁笔记，支持 Markdown 的一款<a href="https://github.com/leanote/leanote">开源</a>笔记软件，支持直接成为个人博客。</li><li><a href="https://www.inkdrop.info/">Inkdrop</a> - Markdown 爱好者的笔记本应用程序。</li></ul><h3 id="网盘"><a href="#网盘" class="headerlink" title="网盘"></a>网盘</h3><ul><li><a href="http://www.dropboxchina.com/Download/dropbox-for-mac.html">Dropbox</a> - 非常好用的网络文件同步工具，提供在线存储服务。[荐]</li><li><a href="http://pan.baidu.com/download?from=header#pan">百度网盘</a> - 百度云客户端。</li><li><a href="https://www.jianguoyun.com/s/downloads">坚果云</a> - 坚果云客户端。</li><li><a href="https://www.weiyun.com/">腾讯微云</a> - 腾讯云客户端。</li><li><a href="https://owncloud.org/">owncloud</a> - 私有云网盘。</li><li><a href="https://mega.nz/">Mega</a> - 免费的云服务，提供 50GB 的免费存储空间。</li><li><a href="https://www.fangcloud.com/">亿方云</a> - 硅谷团队打造，个人免费。</li><li><a href="https://www.seafile.com/">Seafile</a> - 是由国内团队开发的国际化的开源云存储软件项目。</li></ul><h3 id="思维导图软件"><a href="#思维导图软件" class="headerlink" title="思维导图软件"></a>思维导图软件</h3><ul><li><a href="http://www.xmind.net/">XMind</a> - 思维导图软件。[荐]</li><li><a href="https://mindnode.com/">MindNode</a> -</li></ul><h2 id="三、图像处理-amp-设计"><a href="#三、图像处理-amp-设计" class="headerlink" title="三、图像处理&amp;设计"></a>三、图像处理&amp;设计</h2><h3 id="设计工具"><a href="#设计工具" class="headerlink" title="设计工具"></a>设计工具</h3><ul><li>Photoshop - 最强大的位图处理软件。</li><li><a href="https://www.pixelmator.com/pro/">Pixelmator Pro</a> - 强大的图像处理软件，可能替代 PS 的最佳选择。</li><li><a href="https://secure.flyingmeat.com/acorn/">Acorn</a> - 一个像 PS，全面的功能集的图像编辑器。</li><li><a href="https://affinity.serif.com/en-us/designer/">Affinity Designer</a> - 矢量图像设计工具，可能的 Adobe Illustrator 的替代。</li><li><a href="https://affinity.serif.com/en-us/photo/">Affinity Photo</a> - 光栅图像设计工具，可以替代 Adobe PS 图象处理软件。</li><li><a href="https://www.blender.org/">Blender</a> - 全功能可扩展的跨平台 3D 内容套件。<a href="https://developer.blender.org/">开源</a></li><li><a href="http://sketchtoolbox.com/">Sketch Toolbox</a> - 一个超级简单的 Sketch 插件管理器。<a href="https://github.com/buzzfeed/Sketch-Toolbox">开源</a></li><li><a href="https://tenonedesign.com/inklet.php">inklet</a> - 将 Mac 上的触摸板变成绘图板。</li><li><a href="http://helftone.com/">Monodraw</a> - 一款文本图像编辑器。</li><li><a href="https://www.sketchbook.com/?locale=cn">SketchBook</a> - 出众的绘图软件。</li><li><a href="http://www.tayasui.com/sketches/">Tayasui Sketches</a> - 专业的绘图软件。</li><li><a href="https://www.google.com/nikcollection/">Nik Collection</a> - 专业照片后期制作工具 Google 收购后免费。</li><li><a href="http://paintbrush.sourceforge.net/">Paintbrush</a> - 位图图像编辑器。<a href="https://sourceforge.net/projects/paintbrush/files/">开源</a></li><li><a href="https://krita.org/">Krita</a> - 一个开源的位图形编辑软件，包含一个绘画程式和照片编辑器。 <a href="http://download.kde.org/stable/krita/3.0/krita-3.0.tgz.mirrorlist">开源</a></li><li><a href="https://vectr.com/">Vectr</a> - 免费图形编辑器。这是一个简单而强大的 Web 和桌面跨平台工具，把你的设计变成现实。</li><li><a href="http://principleformac.com/">Principle</a> - 使用它很容易设计动画和交互式用户界面。[star 5]</li><li><a href="https://ephtracy.github.io/">MagicaVoxel</a> - 轻量级的 8 位像素编辑和交互路径追踪渲染器。</li><li><a href="http://jeremyvizzini.com/screentolayers/">ScreenToLayers</a> - 轻松导出桌面分层文件 PSD 文件。<a href="https://github.com/jeremyvizzini/ScreenToLayers">开源</a></li></ul><h3 id="原型设计"><a href="#原型设计" class="headerlink" title="原型设计"></a>原型设计</h3><ul><li><a href="http://www.sketchapp.com/">Sketch</a> - 混合矢量/位图布局应用，特别适用于用户界面，Web 和移动设计。[荐]</li><li><a href="http://www.axure.com/">Axure RP 8</a> - 画原型图工具，团队协作 SVN 方便好用。[荐]</li><li><a href="http://www.justinmind.com/">Justinmind</a> - 功能更丰富团队协作方便。</li><li><a href="https://www.mockflow.com/">MockFlow</a> - 用于网页设计和可用性测试的在线原型设计套件。</li><li><a href="http://www.mockplus.com/">Mockplus</a> - 更快更简单的原型设计工具。</li><li><a href="https://www.omnigroup.com/omnigraffle">OmniGraffle</a> - 可用来绘制图表、流程图、组织结构图、思维导图以及插图或原型。</li><li><a href="http://www.literatureandlatte.com/scapple.php">Scapple</a> - 一款实用的思维导图软件。</li><li><a href="http://framerjs.com/">Framer</a> - 做交互原型的工具。![hot][hot icon] [star 5]</li><li><a href="https://balsamiq.com/products/mockups/">Balsamiq Mockups</a> - 一个快速的网页设计原型工具，帮助你更快、更聪明的工作。</li><li><a href="https://marvelapp.com/">Marvel</a> - 简单设计，原型设计和协作。</li><li><a href="http://mindnode.com/">MindNode</a> - 简洁的风格与人性化的操作，绘制思维脑图。[荐]</li><li><a href="https://mqxu.top/2021/08/13/mac-ruan-jian-hui-zong/">iThoughtX</a> - 进阶用户喜欢用它画脑图。[荐]。<a href="https://sspai.com/post/31516">#</a></li></ul><h3 id="其它工具"><a href="#其它工具" class="headerlink" title="其它工具"></a>其它工具</h3><ul><li><a href="http://www.get-notes.com/">Notes</a> - 简洁的笔记应用。 <a href="https://github.com/nuttyartist/notes">开源</a></li><li><a href="https://github.com/kyleduo/TinyPNG4Mac">TinyPNG4Mac</a> - 图片压缩专用开源工具。<a href="https://github.com/kyleduo/TinyPNG4Mac">开源</a></li><li><a href="http://www.img2icnsapp.com/">Image2icon</a> - 将你的图片转换成图标。</li><li><a href="https://pngmini.com/">ImageAlpha</a> - 压缩 PNG 图片，去掉无效的透明。<a href="https://github.com/pornel/ImageAlpha">开源</a></li><li><a href="https://imageoptim.com/mac">ImageOptim</a> - 压缩图片，删除 EXIF 信息。<a href="https://github.com/ImageOptim/ImageOptim">开源</a></li><li><a href="http://theolabrothers.com/">Sip</a> - 收集，整理和分享你的颜色拾色器。</li><li><a href="http://jumpzero.com/frank/">Frank DeLoupe</a> - 支持 Retina 的屏幕拾色器。</li><li><a href="http://www.colorschemer.com/">ColorSchemer</a> - 专业的配色、调色软件。</li><li><a href="https://itunes.apple.com/cn/app/iconkit-icon-resizer-for-app/id507135296?mt=12">IconKit</a> - App 图标自动生成器。</li><li><a href="https://itunes.apple.com/us/app/giphy-capture.-the-gif-maker/id668208984">GIPHY Capture</a> - 免费软件的捕捉和分享图片在桌面上。</li><li><a href="http://geticonjar.com/">Iconjar</a> - 图标管理软件，带组织和搜索功能。[star 5]</li><li><a href="http://rightfontapp.com/">RightFont</a> - 字体管理工具。[star 4]</li><li><a href="http://ethanschoonover.com/solarized">Solarized</a> - 干净清爽的颜色主题，支持 iTerm、Intellij IDEA、Vim 等。</li></ul><h3 id="图片管理"><a href="#图片管理" class="headerlink" title="图片管理"></a>图片管理</h3><ul><li><a href="https://cn.eagle.cool/">Eagle</a> - 图片管理必备工具。30 天试用期。</li></ul><p>Eagle 可以轻松管理大量图片素材，满足图片素材「收藏、整理、查找」的各种场景，支持 Mac 与 Windows 系统。号称图片管理中的印象笔记。</p><h2 id="系统工具"><a href="#系统工具" class="headerlink" title="系统工具"></a>系统工具</h2><h3 id="Mac-系统清理、内存管理"><a href="#Mac-系统清理、内存管理" class="headerlink" title="Mac 系统清理、内存管理"></a>Mac 系统清理、内存管理</h3><ul><li><a href="https://daisydiskapp.com/">DaisyDisk</a> - 磁盘分析工具。了解磁盘使用状况，并进行准确的分析。DaisyDisk 的视觉系属性大大超过了功能性。 <a href="https://www.twblogs.net/a/5baad01e2b7177781a0e94d6/zh-cn">#</a></li><li><a href="http://www.carrotchou.blog/5245.html">MacBooster</a> - 磁盘、内存清理工具。【荐】</li></ul><h2 id="上网"><a href="#上网" class="headerlink" title="上网"></a>上网</h2><ul><li><a href="http://shadowsocks.org/">Shadowsocks</a> - 一个快速的隧道代理，可以帮助你绕过防火墙。[荐]</li><li><a href="http://nssurge.com/">Surge</a> - 科学上网。[荐]</li><li><a href="http://www.godusevpn.cc/">佛跳墙</a> - 科学上网。[荐]</li><li><a href="https://agentwho.network/">AgentWho</a> - 网速很快，但有点贵。[荐]</li><li><a href="https://www.ytpub.com/">云梯</a> - 在圈内小有名气的 VPN 服务提供商。</li><li><a href="https://github.com/zhuhaow/SpechtLite">SpechtLite</a> - 支持 Shadowsocks 及规则管理的高效率代理。</li><li><a href="https://github.com/qiuyuzhou/ShadowsocksX-NG">ShadowsocksX-NG</a> - 一款 ShadowsocksX 客户端软件。</li><li><a href="https://getlantern.org/">Lantern</a> - 科学上网。</li><li><a href="https://ybb1024.com/">鱼摆摆</a> - 科学上网。</li><li><a href="https://tunnelblick.net/downloads.html">Tunnelblick</a> - OpenVPN 的免费软件。</li><li><a href="https://github.com/OldFrank/GoAgentX">GoAgentX</a> - 科学上网。</li><li><a href="http://www.2-vpn4.cc/home.action">二师兄 VPN</a> - 提供无限流量、无限续期免费 VPN 账号。</li><li><a href="http://www.jsqgtx.cc/DownLoad">GTX 加速器</a> - 每天签到领取 500M 流量。</li><li><a href="http://applewoods.org/article/">GreenVPN</a> - 注册激活送免费 VPN 加速流量。</li><li><a href="https://en.v2ss.info/">v2ss</a> -</li></ul><h2 id="FTP-客户端"><a href="#FTP-客户端" class="headerlink" title="FTP 客户端"></a>FTP 客户端</h2><ul><li><a href="https://filezilla-project.org/">FileZilla</a> - 跨平台的 FTP，FTPS 和 SFTP 客户端。[荐]</li><li><a href="https://panic.com/transmit/">Transmit</a> - 一个 FTP 客户端，支持 FTP + SFTP + S3【荐】。</li><li><a href="http://fivedetails.com/flow/">Flow</a> - 支持简单的 FTP + SFTP 客户端。</li><li><a href="http://www.yummysoftware.com/">Yummy FTP</a> - 专业快速，可靠的 FTP 客户端。</li><li><a href="https://cyberduck.io/">Cyberduck</a> - 免费 FTP，SFTP，S3 和 WebDAV 客户端 &amp; OpenStack Swift Client。</li></ul><h2 id="视频播放器"><a href="#视频播放器" class="headerlink" title="视频播放器"></a>视频播放器</h2><ul><li><a href="https://iina.io/">IINA</a> - 目前为止，Mac 上最好用对的视频播放器，没有之一。风格很接近系统原生应用。【荐】</li></ul><h2 id="音频和视频"><a href="#音频和视频" class="headerlink" title="音频和视频"></a>音频和视频</h2><ul><li><a href="https://kodi.tv/">Kodi</a> - 一款一流的免费开源媒体中心软件，可用于播放视频、音乐，查看图片，玩游戏等.<a href="https://github.com/xbmc/xbmc">!开源</a>。</li><li><a href="https://mpv.io/">MPV</a> - 一个免费、开源和跨平台的媒体播放器。<a href="https://github.com/mpv-player/mpv">开源</a>。</li><li><a href="https://coppertino.com/vox/mac">VOX Player</a> - 免费全能音乐播放器，撸码之余听听歌是一种享受。[荐]。</li><li><a href="http://radiant-player.github.io/radiant-player-mac/">Radiant Player</a> - Google Play 音乐播放器。<a href="https://github.com/radiant-player/radiant-player-mac">开源</a>。</li><li><a href="https://github.com/sonoramac/Sonora">Sonora</a> - 一个很小的音乐播放器。<a href="https://github.com/sonoramac/Sonora">开源</a>。</li><li><a href="http://www.audacityteam.org/">Audacity</a> - 免费开源的编辑音频的软件。<a href="https://github.com/audacity/audacity">开源</a>。</li><li><a href="http://www.rogueamoeba.com/audiohijack/">Audio Hijack</a> - 一个记录任何应用程序的音频，包括网络电话 Skype，网络流从 Safari，以及更多。</li><li><a href="https://itunes.apple.com/us/app/stringed/id698710517?mt=12">Stringed 2</a> - 音频编辑处理工具。</li><li><a href="http://mixxx.org/">Mixxx</a> - 免费的 DJ 软件，给你一切你需要的表演组合，名副其实的替代 Traktor。<a href="https://github.com/mixxxdj/mixxx">开源</a>。</li><li><a href="http://cogx.org/">Cog</a> - 一个免费的开源音频播放器。<a href="https://bitbucket.org/mamburu/cog/">![开源][oss icon]</a></li><li><a href="http://www.videolan.org/">VLC</a> - 开源的跨平台多媒体播放器及框架，可播放大多数多媒体文件。<a href="https://github.com/videolan/vlc">开源</a>。</li><li><a href="http://tmkk.undo.jp/xld/index_e.html">XLD</a> - 解码/解码/转换/播放各种“无损”音频文件。<a href="https://code.google.com/archive/p/xld/source">开源</a>。</li><li><a href="https://handbrake.fr/">HandBrake</a> - 高性能的视频编码和转换工具，具有很好的图形用户界面。<a href="https://github.com/HandBrake/HandBrake">开源</a>。</li><li><a href="http://mplayerx.org/">MPlayerX</a> - 媒体播放器。<a href="https://github.com/niltsh/MPlayerX">![开源][oss icon]</a> 。</li><li><a href="https://www.shotcut.org/">Shotcut</a> - 免费开源视频编辑器。 <a href="https://github.com/mltframework/shotcut">开源</a>。</li><li><a href="http://www.telestream.net/screenflow/">ScreenFlow</a> - 屏幕和视频编辑软件。</li><li><a href="http://www.arctime.org/">ArcTime</a> - 跨平台字幕制作软件。</li><li><a href="http://perian.org/#download">Perian</a> - 让 QuickTime 播放所有常见格式的免费插件。<a href="https://github.com/MaddTheSane/perian">开源</a> 。[荐]</li></ul><h2 id="阅读与写作"><a href="#阅读与写作" class="headerlink" title="阅读与写作"></a>阅读与写作</h2><h3 id="阅读相关"><a href="#阅读相关" class="headerlink" title="阅读相关"></a>阅读相关</h3><ul><li><a href="https://workflowy.com/downloads/mac/">WorkFlowy</a> - 很可能是极简主义者梦想中的笔记应用。[荐]</li></ul><h3 id="Markdown-编辑器"><a href="#Markdown-编辑器" class="headerlink" title="Markdown 编辑器"></a>Markdown 编辑器</h3><ul><li><a href="https://ulyssesapp.com/">Ulysses</a>- 专业文本编辑工具，支持 Markdown。[荐]</li><li><a href="https://bear.app/">Bear</a></li><li><a href="http://macdown.uranusjr.com/">MacDown</a> - 一款开源的 Markdown 编辑器，深受<a href="http://25.io/mou/">Mou</a>的影响。</li><li><a href="http://zh.mweb.im/">MWeb</a> - 专业的 Markdown 写作、记笔记、静态博客生成软件。[hot]</li><li><a href="http://25.io/mou/">Mou</a> - 免费 Markdown 编辑神器。</li><li><a href="https://yhatt.github.io/marp/">Marp</a> - Markdown 制作幻灯片编辑器。</li><li><a href="http://www.textnutwriter.com/">TextNut</a> - Markdown 编辑器，富文本之间自由切换。</li><li><a href="http://www.typora.io/">Typora</a> - 基于 Electron 的“读写一体” Markdown 编辑器。[hot]</li><li><a href="https://github.com/egoist/eme">EME</a> - 最近刚出的一款 Markdown 编辑器，界面很像 Chrome 浏览器的界面，很简约。</li><li><a href="http://lightpaper.42squares.in/">LightPaper</a> - 简单的 Markdown 文本编辑器。</li><li><a href="https://www.zybuluo.com/">Cmd Markdown</a> - Cmd Markdown 编辑阅读器，支持实时同步预览，区分写作和阅读模式，支持在线存储，分享文稿网址。</li></ul><h3 id="Markdown-图片上传"><a href="#Markdown-图片上传" class="headerlink" title="Markdown 图片上传"></a>Markdown 图片上传</h3><ul><li><a href="https://molunerfinn.com/PicGo/">PicGo</a> - Markdown 图片上传工具。[荐]。<a href="https://mp.weixin.qq.com/s/ZQtrlULJ5mNTd8jMCb5yEg">#</a></li><li><a href="https://toolinbox.net/iPic/">iPic</a> - Markdown 图片上传工具。60 元/年。</li></ul><h3 id="电子书相关"><a href="#电子书相关" class="headerlink" title="电子书相关"></a>电子书相关</h3><ul><li><a href="http://www.amazon.com/gp/help/customer/display.html?nodeId=201246110">Kindle App</a> - 亚马逊 Kindle App 电子书阅读器。</li><li><a href="http://calibre-ebook.com/">Calibre</a> - 丑陋的软件，但强大的软件电子书管理和转换。<a href="https://github.com/kovidgoyal/calibre">开源</a> 。[荐]</li><li><a href="https://sigil-ebook.com/">Sigil</a> - <a href="https://github.com/Sigil-Ebook/Sigil">开源</a>、多平台 EPUB 编辑器。[荐] 。EPub 电子书制作教程：<a href="https://kindlefere.com/post/73.html">#</a> <a href="https://kindlefere.com/post/71.html">#</a> <a href="https://kindlefere.com/post/72.html">#</a></li><li><a href="http://knotesapp.com/cn">Knotes</a> - 高效、优雅的 Kindle 标注管理器。</li></ul><h3 id="pdf-阅读"><a href="#pdf-阅读" class="headerlink" title="pdf 阅读"></a>pdf 阅读</h3><ul><li><a href="https://marginnote.com/">MarginNote</a> - 在阅读时做标注，记笔记，并可以利用思维导图(Mindmap)和大纲工具(Outline)对笔记进行组织。但就是比较贵。【荐】</li><li><a href="https://mqxu.top/2021/08/13/mac-ruan-jian-hui-zong/">PDF Expert</a> - 极致的 PDF 阅读标注工作体验。</li><li><a href="https://pdf.wondershare.cn/">PDFelement</a> - 采用类似 word 界面和工具条设计,无需改变工具操作习惯。国产良心软件。</li><li><a href="https://mqxu.top/2021/08/13/mac-ruan-jian-hui-zong/">iAnnotate</a> - 可以说是所有 PDF 标记类 app 中的 No.1 了。仅限 iOS 平台使用，没有 Mac 平台。</li></ul><h3 id="RSS"><a href="#RSS" class="headerlink" title="RSS"></a>RSS</h3><ul><li><a href="http://www.feedsapp.com/">Feeds 2</a> - 监控任何 RSS。</li><li><a href="http://readkitapp.com/">ReadKit</a> - 书签 RSS 管理客户端。</li><li><a href="http://reederapp.com/mac/">Reeder 3</a> - RSS 服务订阅。[hot]</li><li><a href="http://www.rockysandstudio.com/">Leaf</a> - RSS 客户端程序。[hot]</li><li><a href="http://www.vienna-rss.org/">Vienna</a> - <a href="https://github.com/ViennaRSS/vienna-rss">开源</a>的 RSS/Atom 新闻阅读客户端。</li></ul><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><ul><li><a href="http://www.openoffice.org/zh-cn/download/index.html">OpenOffice</a> - 是一套<a href="http://openoffice.apache.org/source.html">开源</a>、跨平台的办公室软件套件。</li><li><a href="https://bananafishsoftware.com/products/spillo/">Spillo</a> - 功能强大，美观、快速网络书签网页阅读。</li><li><a href="http://www.robinlu.com/ichm">iChm</a> - 读 chm 文件的软件。</li><li><a href="http://chmox.sourceforge.net/">Chmox</a> - 读 chm 文件的软件。</li><li><a href="http://www.hewbo.com/chm-reader.html">CHM Reader</a> - 读 chm 文件的软件。</li></ul><h2 id="浏览器"><a href="#浏览器" class="headerlink" title="浏览器"></a>浏览器</h2><ul><li><a href="http://www.apple.com/cn/safari/">Safari</a> - Mac 预装自带浏览器。</li><li><a href="http://www.google.cn/chrome/browser/">Chrome</a> - Chrome 浏览器谷歌出品。</li><li><a href="http://www.firefox.com.cn/">Firefox</a> - 火狐浏览器。</li><li><a href="http://www.opera.com/zh-cn">Opera</a> - Opera 浏览器。</li><li><a href="http://browser.qq.com/mac/">QQ 浏览器</a> - QQ 浏览器－腾讯出品。</li><li><a href="http://www.maxthon.cn/mac/">傲游云浏览器</a> - 傲游云浏览器。</li><li><a href="https://vivaldi.com/">Vivaldi</a> - Opera 开发商出品新的浏览器。</li><li><a href="http://oryoki.io/">Ōryōki</a> - 小的 web 浏览器。这是一个试验性的项目，目前正在开发中。</li></ul><h2 id="通信"><a href="#通信" class="headerlink" title="通信"></a>通信</h2><blockquote><p>推荐一些通信工具，沟通，团队协同。</p></blockquote><h3 id="即时通信"><a href="#即时通信" class="headerlink" title="即时通信"></a>即时通信</h3><ul><li><a href="http://meetfranz.com/">Franz</a> - 一个使用 <a href="http://electron.atom.io/">Electron</a>开发的，可以同时登录 23 个平台的即时通讯软件。[hot]</li><li><a href="http://im.qq.com/macqq/index.shtml">QQ</a> - QQ for Mac App。![Freeware][freeware icon]</li><li><a href="http://weixin.qq.com/cgi-bin/readtemplate?t=mac&amp;platform=wx&amp;lang=zh_CN">WeChat</a> - 微信 for Mac App。</li><li><a href="https://desktop.telegram.org/">Telegram</a> - 通讯新时代。[荐]</li><li><a href="https://github.com/trazyn/weweChat">weweChat</a> - 不比官方差的微信第三方客户端。[荐]。<a href="https://www.waerfa.com/wewechat-review">#</a></li><li><a href="https://github.com/geeeeeeeeek/electronic-wechat">Electronic WeChat</a> - 调用微信接口，使用 <a href="https://github.com/electron/electron">Electron</a> 开发的第三方漂亮<a href="https://github.com/geeeeeeeeek/electronic-wechat">开源</a>微信应用。</li><li><a href="https://www.skype.com/">Skype</a> - Skype 共享、跨平台的短信和电话。</li><li><a href="https://github.com/stonesam92/ChitChat">ChitChat</a> - WhatsApp 非官方，<a href="https://github.com/stonesam92/ChitChat">开源</a>。</li><li><a href="https://imach.me/gohanapp/">御飯</a> - 饭否第三方 Mac 应用。</li><li><a href="https://fbmacmessenger.rsms.me/">Messenger</a> - Facebook 第三方的啊、<a href="https://github.com/rsms/fb-mac-messenger">开源</a>聊天工具。</li><li><a href="https://adium.im/">Adium</a> - 这个是老的集成多个平台的聊天客户端。</li><li><a href="https://weechat.org/">WeeChat</a> - 一个命令行聊天客户端。</li></ul><h3 id="社交"><a href="#社交" class="headerlink" title="社交"></a>社交</h3><ul><li><a href="http://weiboformac.sinaapp.com/">WeiboX</a> - 微博第三方 Mac 应用。</li></ul><h3 id="团队协作"><a href="#团队协作" class="headerlink" title="团队协作"></a>团队协作</h3><ul><li><a href="https://www.codeux.com/textual">Textual</a> - 最受欢迎的世界与我们相关的 KPI 应用 for OS X。</li><li><a href="https://gitter.im/">Gitter</a> - 关于 GitHub 的项目交流，支持 Markdown，对开发者极为友好。</li><li><a href="https://github.com/jianliaoim/talk-os">简聊</a> - 企业级即时沟通工具，已经下线了，可以自己搭建一套<a href="https://github.com/jianliaoim/talk-os">系统</a>玩儿。</li><li><a href="http://www.dingtalk.com/index-b.html#download_block">钉钉</a> - 企业级办公通讯免费平台。</li><li><a href="https://slack.com/">Slack</a> - 团队协作，沟通工具。</li><li><a href="https://pubu.im/apps/osx">零信</a> - 随时随地工作，跨平台。</li><li><a href="http://www.jingoal.com/client/mac/mac.htm">今目标</a> - 一款面向中小企业的互联网工作平台。</li><li><a href="https://bearychat.com/">BearyChat</a> - 互联网团队协作，沟通工具。</li><li><a href="https://voluntary.net/bitpost/">Bitpost</a> - 私人分散消息，<a href="https://github.com/Voluntarynet/Bitpost">开源</a>。它是一个 p2p 的去中心化和无须第三方提供信用担保协议。</li><li><a href="https://www.teambition.com/">Teambition</a> - 团队协作。提供管理任务、安排日程、查找文件、即时讨论等团队所需要的一切协作功能。</li><li><a href="https://www.rishiqing.com/">日事清</a> - 个人日程管理，团队协作工具。日程安排，计划分配，笔记总结等。</li><li><a href="https://coding.net/">Coding.net</a> - 代码托管，项目管理，WebIDE，演示部署，开启云端开发模式，让开发更简单。</li></ul><h3 id="Email"><a href="#Email" class="headerlink" title="Email"></a>Email</h3><blockquote><p>其实 Mac 自带的邮件客户端已经很好用了。</p></blockquote><ul><li><a href="https://mqxu.top/2021/08/13/mac-ruan-jian-hui-zong/">网易邮箱大师</a>。[荐]。<a href="https://www.waerfa.com/neteasemailmaster-for-mac">#</a></li><li><a href="https://sparkmailapp.com/">Spark</a> - 新推出的快速邮件客户端支持 Mac 和 iPhone。[荐]</li><li><a href="http://airmailapp.com/">Airmail</a> - 快速的邮件客户端支持 Mac 和 iPhone。</li><li><a href="http://www.foxmail.com/mac/">Foxmail</a> - 快速的邮件客户端。</li><li><a href="https://smallcubed.com/mt/">MailTags</a> - 管理和组织邮件，日程和标签进行分类邮件。</li><li><a href="https://www.nylas.com/n1">N1</a> - 可以扩展的开源收费邮件客户端。</li><li><a href="https://www.postbox-inc.com/">Postbox</a> - 这个貌似也非常强大哦，关键是简洁漂亮的收费邮件客户端。</li><li><a href="https://polymail.io/">Polymail</a> - 简单，功能强大，长得好看的新晋邮件客户端。</li><li><a href="https://cloudmagic.com/">CloudMagic Email</a> - 界面非常简洁的一个邮件客户端。</li><li><a href="https://www.mozilla.org/zh-CN/thunderbird/">ThunderBird</a> - Mozilla 公司出品的强大的 Email 客户端程序。</li></ul><h2 id="数据恢复"><a href="#数据恢复" class="headerlink" title="数据恢复"></a>数据恢复</h2><ul><li><a href="http://www.alsoft.com/DiskWarrior/">DiskWarrior</a> - 恢复文件系统损坏时，磁盘工具进行选择。</li><li><a href="https://www.prosofteng.com/datarescue-mac-data-recovery/">Data Rescue</a> - 多种情况下的全面和专业的数据恢复。</li><li><a href="http://www.stellarinfo.com/data-recovery-mac.php">Stellar Phoenix Mac Data Recovery</a> - 一个功能强大的恢复文件面向 Mac 的工具。</li><li><a href="http://www.r-studio.com/data_recovery_macintosh/">R-Studio for Mac</a> - 可恢复分区被格式化、损坏或被删除的文件。</li></ul><h2 id="虚拟机"><a href="#虚拟机" class="headerlink" title="虚拟机"></a>虚拟机</h2><ul><li><a href="http://www.parallels.com/">Parallels Desktop</a> - 虽然好用但是收费机制，更新花钱、花钱、花钱。[hot]</li><li><a href="http://www.virtualbox.org/">Virtual Box</a> - 免费、免费、免费，带 NTFS 读写，不用买 ParagonNTFS，省 100 块。</li><li><a href="http://www.vmware.com/">VMWare Fusion</a> - 强大的虚拟机，商业软件。</li><li><a href="https://veertu.com/">Veertu</a> - Mac 上最轻便的虚拟机，只有跑 Windows 才会收费。比较新，很多功能不支持。</li></ul><h2 id="版本控制"><a href="#版本控制" class="headerlink" title="版本控制"></a>版本控制</h2><ul><li><a href="https://git-scm.com/">Git</a> - 版本控制工具，官网提供<a href="https://git-scm.com/download/gui/mac">数十种 GUI 客户端</a> for Mac。</li><li><a href="http://subversion.apache.org/">SVN</a> - 版本控制工具。</li></ul><h3 id="GUI"><a href="#GUI" class="headerlink" title="GUI"></a>GUI</h3><ul><li><a href="https://www.sourcetreeapp.com/">SourceTree</a> - 强大的 Git 跨平台客户端。[荐]</li><li><a href="https://www.git-tower.com/">Tower2</a> - 最强大的 Git 客户端。[荐]</li><li><a href="https://desktop.github.com/">GitHub Desktop</a> - 使用 GitHub 的 GUI 应用。</li><li><a href="https://github.com/Shikkic/gitbar">Gitbar</a> - 开源，在你的菜单栏上显示 GitHub 贡献统计。</li><li><a href="http://www.ohmystarapp.com/">Oh My Star</a> - GitHub 的 star 功能弱，比如分类，本地组织你的 GitHub star!</li><li><a href="http://gitup.co/">GitUp</a> - 一个简单功能强大的 git 客户端，<a href="https://github.com/git-up/GitUp">开源</a>。</li><li><a href="https://hub.github.com/">Hub</a> - 将 GitHub 接口和 git 命令进行包装，<a href="https://github.com/github/hub">开源</a>。</li><li><a href="http://www.versionsapp.com/">Versions</a> - Mac 上最好的 SVN 管理工具。</li><li><a href="http://www.zennaware.com/cornerstone/">Cornerstone</a> - Mac 上最佳的 SVN 管理工具。</li></ul><h3 id="版本控制系统"><a href="#版本控制系统" class="headerlink" title="版本控制系统"></a>版本控制系统</h3><ul><li><a href="http://gitlab.com/">GitLab</a> - 一个用于仓库管理系统的开源项目。</li><li><a href="https://github.com/">GitHub</a> GitHub 代码托管，项目管理，演示部署，瞧，您现在就访问 GitHub。</li><li><a href="https://coding.net/">Coding.net</a> - 代码托管，项目管理，WebIDE，演示部署，开启云端开发模式，让开发更简单。</li><li><a href="https://phabricator.com/">phabricator</a> phabricator 支持 Git、SVN、HG 基于 PHP + Mysql 的开放源代码软件开发平台。</li><li><a href="https://gogs.io/">Gogs</a> - 一款极易搭建的自助 Git 服务 Golang 版本。</li><li><a href="https://gerrit.rockbox.org/">Gerrit</a> Gerrit 是一个免费、开放源代码的代码审查软件，使用网页界面。</li><li><a href="http://www.gitblit.com/">Gitblit</a> Java 版本 Git 代码托管，项目管理。</li></ul><h2 id="编辑器"><a href="#编辑器" class="headerlink" title="编辑器"></a>编辑器</h2><ul><li><p><a href="http://code.visualstudio.com/">Visual Studio Code</a> - 微软推出的免费/开源编辑器，TypeScript 支持杠杠的。<a href="https://github.com/Microsoft/vscode">荐</a></p></li><li><p><a href="http://www.sublimetext.com/3">Sublime Text</a> - 一个比较简洁大方带插件管理系统的流行编辑器，<a href="https://mqxu.top/2021/08/13/mac-ruan-jian-hui-zong/editor-plugin.md#sublime-text-plugin">Sublime 常用插件</a>。[荐]</p></li><li><p><a href="https://atom.io/">Atom</a> - GitHub 推出的<a href="https://github.com/atom/atom">开源</a>编辑器。</p></li><li><p><a href="http://brackets.io/">Brackets</a> - Adobe 推出的 Brackets 免费/开源编辑器。<a href="https://github.com/adobe/brackets/">开源</a></p></li><li><p><a href="https://www.emacswiki.org/emacs/EmacsForMacOS">Emacs</a> - Emacs 是基于控制台的编辑器和高度可定制的。</p></li><li><p><a href="https://www.lighttable.com/">LightTable</a> - 下一代代码编辑器。<a href="https://github.com/LightTable/LightTable">开源</a></p></li><li><p><a href="https://macromates.com/">TextMate</a> - 文本编辑器软件，与 BBedit 一起并称苹果机上的 emacs 和 vim，这是以前。</p></li><li><p><a href="http://www.barebones.com/products/bbedit/">BBEdit</a> - 强大的文件编辑器，用于编辑文件，文本文件及程序源代码。</p></li><li><p><a href="https://panic.com/coda">Coda2</a> - 编写 Web 应用长得漂亮的编辑器。</p></li><li><p>Vim</p><p>- Vim 古老命令行中使用的编辑器。</p><ul><li><a href="https://github.com/VundleVim/Vundle.vim">Vundle.vim</a> - Vim 插件管理工具。<a href="https://github.com/VundleVim/Vundle.vim">开源</a></li><li><a href="https://github.com/junegunn/vim-plug">vim-plug</a> - 一个简约的 vim 插件管理器。<a href="https://github.com/junegunn/vim-plug">开源</a></li><li><a href="https://github.com/krampstudio/webvim">WebVim</a> - 倾向于开发 JavaScript 和 Web 的 vim。</li><li><a href="https://github.com/jaywcjlove/vim-web">vim-web</a> - 一个前端开发工程师的 vim。<a href="https://github.com/jaywcjlove/vim-web">开源</a></li><li><a href="https://neovim.io/">Neovim</a> - 提高 Vim 可扩张灵活性。<a href="https://github.com/neovim/neovim">开源</a></li><li><a href="https://github.com/ctjhoa/spacevim">Spacevim</a> - 模仿 Spacemacs 的使用方式。</li><li><a href="http://vim.spf13.com/">Spf13</a> - 一套全方位的配置项目。</li></ul></li><li><p><a href="http://vimr.org/">Vimr</a> - Vim 客户端，升级 Vim 体验。<a href="https://github.com/qvacua/vimr/">开源</a></p></li><li><p><a href="http://www.dcloud.io/">HBuilder</a> - HBuilder 是 DCloud（数字天堂）推出的一款支持 HTML5 的 Web 开发 IDE。</p></li><li><p><a href="https://mr-fridge.de/software/tincta/index.php">Tincta</a> - 一个免费的文本编辑器。</p></li><li><p><a href="https://www.jetbrains.com/idea/">IntelliJ IDEA</a> - 一款 Java 开发集成环境。<a href="https://mqxu.top/2021/08/13/mac-ruan-jian-hui-zong/%E8%8D%90"><strong>学生</strong>免费</a></p></li><li><p>Webstorm</p><p>- 是 jetbrains 公司旗下一款 JavaScript 开发工具。</p><ul><li><strong>学生</strong>免费，<a href="https://www.jetbrains.com/student/">点击这里</a> 查看更多。</li><li>一些很好的插件<ul><li><a href="https://plugins.jetbrains.com/plugin/6098?pr=webStorm">NodeJS</a> - 集成<code>Node.js</code>，你肯定需要它，很多功能需要它。</li><li><a href="https://plugins.jetbrains.com/plugin/7294?pr=webStorm">EditorConfig</a> - 帮助开发者在不同的编辑器和 IDE 之间定义和维护一致的代码风格。</li><li><a href="https://plugins.jetbrains.com/plugin/8006?pr=webStorm">Material Theme UI</a> - Google 为 React 开发的主题。</li></ul></li></ul></li><li><p><a href="https://www.decosoftware.com/">Deco IDE</a> - React Native IDE 支持控件拖拽界面实时变更。<a href="https://github.com/decosoftware/deco-ide">开源</a></p></li><li><p><a href="https://www.xamarin.com/studio">Xamarin Studio</a> - 免费的跨平台的 C# IDE。支持 iOS、Android 和.net 开发。<a href="https://github.com/mono/monodevelop">开源</a> ![Freeware][freeware icon]</p></li><li><p><a href="https://netbeans.org/">NetBeans IDE</a> - 免费、开源的 IDE，主要用于 java 开发，可支持多种语言和框架。<a href="https://netbeans.org/community/sources/">开源</a> ![Freeware][freeware icon]</p></li><li><p><a href="https://www.eclipse.org/">Eclipse</a> - 流行的开源 IDE，主要用于 Java，但为多种语言和平台的插件支持。</p></li></ul><h2 id="开发者工具"><a href="#开发者工具" class="headerlink" title="开发者工具"></a>开发者工具</h2><ul><li><a href="https://weflow.io/">WeFlow</a> - 一个基于 <a href="https://github.com/weixin/tmt-workflow">tmt-workflow</a> 前端工作流的开发工具。<a href="https://github.com/weixin/WeFlow">开源</a>。</li><li><a href="http://koala-app.com/">Koala</a> - 预处理器语言图形编译工具，支持 Less、Sass、CoffeeScript、Compass framework 的即时编译。<a href="https://github.com/oklai/koala/">开源</a>。</li><li><a href="https://incident57.com/codekit/">CodeKit</a> - 自动编译 Less、Sass、Stylus、CoffeeScript、Jade &amp; Haml 等文件。</li><li><a href="https://github.com/specialunderwear/Hosts.prefpane">Hosts.prefpane</a> - 编辑 hosts 文件的工具。<a href="https://github.com/specialunderwear/Hosts.prefpane">开源</a>。</li><li><a href="http://toolinbox.net/iHosts/">iHosts</a> - 唯一上架 <a href="https://itunes.apple.com/cn/app/id1102004240">Mac App Store</a> 的 /etc/hosts 编辑神器。</li><li><a href="https://oldj.github.io/SwitchHosts/">SwitchHosts</a> - 一个管理、切换多个 hosts 方案的工具。<a href="https://github.com/oldj/SwitchHosts">开源</a> 。</li><li><a href="https://github.com/2ndalpha/gasmask">Gas Mask</a> - 编辑 hosts 文件的工具，更简单方便。<a href="https://github.com/2ndalpha/gasmask">开源</a>。</li><li><a href="http://www.kaleidoscopeapp.com/">Kaleidoscope</a> - 一款很强大的文本文件和图像比较工具，同时和 git、svn 等版本控制工具能够完美的结合。</li><li><a href="https://github.com/TencentOpen/Fanvas">Fanvas</a> - 把 swf 转为 HTML5 canvas 动画的系统。<a href="https://github.com/oklai/koala/">开源</a>。</li><li><a href="https://github.com/hschmidt/EnvPane">EnvPane</a> - 图形终端查看环境变量的应用工具。<a href="https://github.com/hschmidt/EnvPane">开源</a>。</li><li><a href="https://kapeli.com/dash">Dash</a> - 强大到你无法想象的 API 离线文档软件。[荐]。</li><li><a href="https://github.com/nlf/dlite">Dlite</a> - 简单的使用 Docker 的一个软件。<a href="https://github.com/nlf/dlite">开源</a></li><li><a href="https://www.renfei.org/snippets-lab/">SnippetsLab</a> - 管理和组织你的代码片段。</li><li><a href="http://staruml.io/">StarUML</a> - 强大的软件建模软件。</li><li><a href="http://vagrantmanager.com/">Vagrant Manager</a> - 管理你本地服务。<a href="https://github.com/lanayotech/vagrant-manager/">开源</a>。</li><li><a href="https://www.zeplin.io/">zeplin</a> - 前端与设计协同工作专用工具。</li><li><a href="http://zipzapmac.com/Go2Shell">Go2Shell</a> - 从 Finder 打开命令行。</li><li><a href="https://mjmlio.github.io/mjml-app/">MJML</a> - 简化设计回应电子邮件的方式。<a href="https://github.com/mjmlio/mjml">开源</a>。</li><li><a href="http://www.texstudio.org/">TeXstudio</a> - 集成创建 LaTeX 文档的写作环境。 <a href="https://sourceforge.net/projects/texstudio/">开源</a>。</li><li><a href="https://www.vagrantup.com/">Vagrant</a> - 用来构建虚拟开发环境的工具。 <a href="https://github.com/mitchellh/vagrant">开源</a>。[荐]</li></ul><h3 id="代码比对"><a href="#代码比对" class="headerlink" title="代码比对"></a>代码比对</h3><ul><li><a href="http://sourcegear.com/diffmerge/">DiffMerge</a> - 可视化的文件比较（也可进行目录比较）与合并工具。</li><li><a href="http://www.scootersoftware.com/download.php">Beyond Compare</a> - 对比两个文件夹或者文件，并将差异以颜色标示。无限期试用。license 连接：<a href="https://gist.github.com/huqi/35f2a0792aef830898ca">#</a></li><li><a href="https://www.kaleidoscopeapp.com/">Kaleidoscope</a> - Kaleidoscope 是一款很强大的文件和图像比较工具，支持任何文本文件和 jpeg、tiff、png、psd 等格式的图像文件，同时和 git、svn 等版本控制工具能够完美的结合。[荐]。</li></ul><h3 id="正则编辑器"><a href="#正则编辑器" class="headerlink" title="正则编辑器"></a>正则编辑器</h3><ul><li><a href="http://krillapps.com/patterns/">Patterns</a> - 正则表达式编辑器。</li><li><a href="https://github.com/michaeltyson/Reginald">Reginald</a> - 正则表达式测试应用程序，使用 <a href="http://atastypixel.com/blog/reginald-regex-explorer/">RegexKitLite</a>。<a href="https://github.com/michaeltyson/Reginald">开源</a> 。</li><li><a href="http://motionobj.com/regex/?utm_source=RegexApp&amp;utm_medium=app">Regex</a> - 感觉是用过最漂亮的正则表达式测试工具。</li><li><a href="http://reggyapp.com/">Reggy</a> - 正则表达式编辑器。<a href="https://github.com/samsouder/reggy">开源</a>。</li><li><a href="http://www.mactechnologies.com/index.php?page=downloads#regexrx">RegExRX</a> - 正则表达式的开发工具。</li></ul><h3 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h3><ul><li><a href="http://www.sequelpro.com/">Sequel Pro</a> - 一个 MySQL 数据库管理软件。<a href="https://github.com/sequelpro/sequelpro">开源</a></li><li><a href="http://dev.mysql.com/downloads/workbench/">MySQL Workbench</a> - MySQL 数据库官方管理软件。</li><li><a href="https://eggerapps.at/postico/">Postico</a> - 现代 PostgreSQL 客户端，漂亮功能多。</li><li><a href="http://garrylachman.github.io/ElectroCRUD/">ElectroCRUD</a> - MySQL 数据库 CRUD 应用程序。<a href="https://github.com/garrylachman/ElectroCRUD">开源</a></li><li><a href="http://menial.co.uk/base/">Base 2</a> - 一个用于管理 SQLite 数据库的软件。</li><li><a href="http://postgresapp.com/">Postgres.app</a> - Mac 上最简单的方法的使用 PostgreSQL 关系型数据库管理系统。<a href="https://github.com/PostgresApp/PostgresApp">!开源</a></li><li><a href="http://www.psequel.com/">PSequel</a> - PostgreSQL 数据库 GUI 软件。</li><li><a href="https://robomongo.org/">Robomongo</a> - 基于 Shell 的 MongoDB 图形化客户端管理软件。<a href="https://github.com/paralect/robomongo">开源</a>。</li><li><a href="http://www.mongobooster.com/">MongoBooster</a> - MongoDB 图形化管理软件，内嵌 MongoShell，ES6 语法，流畅查询及智能感知。</li><li><a href="http://www.litixsoft.de/english/mms/">Mongo Management Studio</a> - MongoDB 图形化客户端管理软件。</li><li><a href="http://3t.io/mongochef">MongoChef</a> - MongoDB 图形化客户端管理软件。</li><li><a href="https://www.eisbahn.jp/chrome_mysql_admin">Chrome MySQL Admin</a> - 一个 Chrome 插件，是 MySQL 开发的跨平台、可视化数据库工具。<a href="https://github.com/yoichiro/chrome_mysql_admin">开源</a>。</li><li><a href="https://www.jackdb.com/">JackDB</a> - 直接的 SQL 访问你所有的数据，无论在哪里。[<img src="https://github.com/yoichiro/chrome_mysql_admin" alt="开源][oss icon]"> ![Freeware][freeware icon]</li><li><a href="http://getmedis.com/">medis</a> - 漂亮的 Redis 管理软件。<a href="https://github.com/luin/medis">开源</a>。</li><li><a href="http://redisdesktop.com/">RedisDesktopManager</a> - Redis 跨平台的 GUI 管理工具。<a href="https://github.com/uglide/RedisDesktopManager">开源</a> 。</li><li><a href="http://www.macexplorer.co/en/mdb-explorer.php">MDB Explorer</a> - Mac 上查看编辑 Access 数据库的工具。</li><li><a href="http://datumapps.com/datum.html">Datum - SQLite</a> - Sqlite3 数据库管理软件。</li><li><a href="https://gcollazo.github.io/mongodbapp/">mongoDB.app</a> - 在 Mac 上最简单的使用 MongoDB <a href="https://github.com/gcollazo/mongodbapp">开源</a>。</li><li><a href="http://www.jetbrains.com/datagrip/">DataGrip</a> - 是 jetbrains 公司旗下一款数据库管理工具。<a href="https://www.jetbrains.com/student/">点击这里</a> <strong>学生</strong>免费。</li><li><a href="https://public.tableau.com/s/">Tableau Public</a> - 数据可视化工具。</li></ul><h3 id="测试工具"><a href="#测试工具" class="headerlink" title="测试工具"></a>测试工具</h3><ul><li><a href="https://www.charlesproxy.com/">Charles</a> - 一个代理工具，允许你查看所有的 HTTP 和 HTTPS 流量。</li><li><a href="http://insomnia.rest/">Insomnia 3.0</a> - 漂亮的 HTTP 请求测试工具。</li><li><a href="https://mmattozzi.github.io/cocoa-rest-client/">Cocoa Rest Client</a> - 比 Postman 看起来漂亮的客户端，测试 HTTP/REST endpoints。<a href="https://github.com/mmattozzi/cocoa-rest-client">开源</a></li><li><a href="https://luckymarmot.com/paw">Paw</a> - 先进的 HTTP 客户端。</li><li><a href="http://cellist.patr0n.us/index.html">Cellist</a> - HTTP 调试客户端。</li><li><a href="http://peacockmedia.software/mac/integrity/free.html">Integrity</a> - 轻松找到无效链接。</li><li><a href="https://www.getpostman.com/">Postman</a> - Postman 帮助我们快速测试 API。[荐]</li></ul><h3 id="软件打包工具"><a href="#软件打包工具" class="headerlink" title="软件打包工具"></a>软件打包工具</h3><ul><li><a href="https://johnste.github.io/finicky/">Finicky</a> - Web 应用程序转化为苹果的应用程序。<a href="https://github.com/johnste/finicky">开源</a></li><li><a href="http://nwjs.io/">nw.js</a> - 使用 HTML 和 JavaScript 来制作桌面应用。<a href="https://github.com/nwjs/nw.js">开源</a></li><li><a href="http://electron.atom.io/">Electron</a> - 前身是 AtomShell，使用 JS、HTML 和 CSS 构建跨平台的桌面应用程序。<a href="https://github.com/electron/electron">开源</a></li><li><a href="http://reactdesktop.js.org/">react-desktop</a> - 为 macOS Sierra 带来 React UI 组件。<a href="https://github.com/gabrielbull/react-desktop">开源</a></li><li><a href="https://github.com/ptmt/react-native-desktop">React Native Desktop for Mac</a> - 用 React Native 技术构建 OS X 下的桌面应用程序。<a href="https://github.com/ptmt/react-native-desktop">开源</a></li><li><a href="https://github.com/CanonicalLtd/react-native">React Native Desktop for Ubuntu</a> - 用 React Native 技术构建 Ubuntu 下的桌面应用程序。<a href="https://github.com/CanonicalLtd/react-native">开源</a></li><li><a href="http://appjs.com/">AppJS</a> - 使用 JS、HTML 和 CSS 构建跨平台的桌面应用程序。<a href="https://github.com/appjs/appjs">开源</a></li><li><a href="http://hex.youdao.com/zh-cn/index.html">HEX</a> - 使用 JS、HTML 和 CSS 构建跨平台的桌面应用程序，有道出品。<a href="https://github.com/netease-youdao/hex">开源</a></li><li><a href="https://github.com/AlloyTeam/webtop">AlloyDesktop</a> - 同上，腾讯出品，给个差评。<a href="https://github.com/AlloyTeam/webtop">开源</a></li><li><a href="http://macgapproject.github.io/">MacGap</a> - 桌面 WebKit 打包 HTML、CSS、JS 应用。<a href="https://github.com/MacGapProject">开源</a></li><li><a href="http://ionicframework.com/">ionic</a> - 一个用来开发混合手机应用的，开源的，免费的代码库。 <a href="https://github.com/driftyco/ionic">开源</a></li></ul><h3 id="命令行工具"><a href="#命令行工具" class="headerlink" title="命令行工具"></a>命令行工具</h3><ul><li><a href="http://www.iterm2.com/">iTerm2</a> - 免费的终端工具，直接替代自带的 Terminal，有非常多惊人的特性。<a href="https://github.com/gnachman/iTerm2">开源</a> 。[荐]</li><li><a href="https://github.com/Swordfish90/cool-retro-term">cool-retro-term</a> - 怀旧的命令行终端。<a href="https://github.com/Swordfish90/cool-retro-term">开源</a>。</li><li><a href="http://ohmyz.sh/">Oh my zsh</a> - 拥有大量的有用的功能，助手，插件，主题，等特性的命令行工具插件。<a href="https://github.com/robbyrussell/oh-my-zsh">开源</a>。</li><li><a href="https://github.com/nicolargo/glances">Glances</a> - 在命令行中查看你系统运行状态的工具。<a href="https://github.com/nicolargo/glances">开源</a>。</li><li><a href="http://www.cakebrew.com/">Cakebrew</a> - <a href="http://brew.sh/">Homebrew</a> 的客户端软件。摆脱命令方便安装、查看、卸载软件。<a href="https://github.com/brunophilipe/Cakebrew/">开源</a>。</li><li><a href="https://720kb.github.io/ndm">ndm</a> - 查看本地<a href="http://npmjs.org/">NPM</a>安装的包客户端软件。摆脱命令方便安装、查看、卸载软件。<a href="https://github.com/720kb/ndm">开源</a> 。</li><li><a href="https://github.com/shockone/black-screen">Black Screen</a> - 来自 21 世纪的强大终端。<a href="https://github.com/shockone/black-screen">开源</a>。</li><li><a href="https://fishshell.com/">Fish Shell</a> - 智能且用户友好的命令行终端。</li><li><a href="https://github.com/oh-my-fish/oh-my-fish">oh-my-fish</a> - 和<strong>Oh my zsh</strong>相似，建立在 Fish Shell 框架上。</li><li><a href="https://github.com/Bash-it/bash-it">bash-it</a> - 一个社区的 bash 的框架。</li><li><a href="https://swordfishslabs.wordpress.com/2014/09/03/cool-old-term-is-dead-long-live-cool-retro-term/">color-retro-term</a> - 一款复古风格的终端，非常酷炫。</li><li><a href="https://hyperterm.org/">HyperTerm</a> - 一款基于 Node 开发的终端软件，逼格很高。<a href="https://github.com/zeit/hyperterm">开源</a>。</li><li><a href="https://github.com/mischah/itunes-remote">itunes-remote</a> - 通过终端控制您的 iTunes。<a href="https://github.com/mischah/itunes-remote">开源</a>。</li><li><a href="https://github.com/dbcli/mycli">mycli</a> - 为 MySQL 命令行客户端，提供语法高亮和提示功能的工具！ <a href="https://github.com/dbcli/mycli">开源</a>。</li><li><a href="http://lnav.org/">LNav</a> - 日志文件阅读器. <a href="https://github.com/tstack/lnav">开源</a>。</li><li><a href="https://github.com/tmux/tmux">tmux</a> 终端登录远程主机的命令行工具。<a href="https://github.com/tmux/tmux">开源</a></li><li><a href="https://github.com/mas-cli/mas">mas</a> - 一个简单的命令行界面的苹果应用商店。 <a href="https://github.com/mas-cli/mas">开源</a>。</li></ul><h3 id="ssh-远程连接"><a href="#ssh-远程连接" class="headerlink" title="ssh 远程连接"></a>ssh 远程连接</h3><ul><li><a href="https://www.vandyke.com/products/securecrt/">SecureCRT</a> - 一款支持 SSH、Telnet 等多种协议的终端仿真程序。</li><li><a href="http://www.shellcraftapp.com/">ShellCraft</a> - 强大的 SSH/Telnet 客户端。</li></ul><h2 id="其他软件"><a href="#其他软件" class="headerlink" title="其他软件"></a>其他软件</h2><h3 id="文件传输"><a href="#文件传输" class="headerlink" title="文件传输"></a>文件传输</h3><ul><li><a href="https://www.android.com/filetransfer/">Android File Transfer</a> - Google 官方推出的，让 Android 设备连接电脑，进行文件管理。</li><li><a href="http://www.smartisan.com/apps/handshaker">handshaker</a> - 锤子科技推出的，以前名叫 SmartFinder. <a href="http://www.ifanr.com/app/612734">#</a></li></ul><h2 id="远程协助"><a href="#远程协助" class="headerlink" title="远程协助"></a>远程协助</h2><ul><li><a href="https://www.teamviewer.com/">TeamViewer</a> - 远程协助及在线协作和会议功能的软件，商业软件个人使用免费。[荐]</li><li><a href="https://www.realvnc.com/">RealVNC</a> 是一款免费的远程控制跨多平台的程序。</li></ul><h2 id="网站推荐"><a href="#网站推荐" class="headerlink" title="网站推荐"></a>网站推荐</h2><blockquote><p>这里主要是推荐一些软件下载的网站，还有一些 MacOS 软件分享网站。</p></blockquote><h3 id="Mac-工具介绍"><a href="#Mac-工具介绍" class="headerlink" title="Mac 工具介绍"></a>Mac 工具介绍</h3><ul><li>少数派：<a href="http://sspai.com/tag/Mac">http://sspai.com/tag/Mac</a></li><li>Mac 玩儿法：<a href="http://www.waerfa.com/">http://www.waerfa.com</a></li><li><a href="https://ourmacs.com/">OurMacs</a> - 优秀的 mac 应用。</li></ul><h3 id="正版-Mac-软件下载"><a href="#正版-Mac-软件下载" class="headerlink" title="正版 Mac 软件下载"></a>正版 Mac 软件下载</h3><p><em>这里只提供正版软件购买下载的应用商店。</em></p><ul><li><a href="http://hack-store.com/">HackStore</a> - 一个类似于 cydia 的第三方 Mac 应用市场，平台拒绝盗版。</li><li><a href="http://caskroom.io/">homebrew-cask</a> - 体验通过命令行安装 Mac 软件的工具。</li><li>MacUpdate：<a href="https://www.macupdate.com/">https://www.macupdate.com/</a> - 管理/更新/下载 App，跟踪优惠信息。</li><li>App Shopper：<a href="http://appshopper.com/">http://appshopper.com/</a></li><li>类似于 iOS 上 Cydia 一样的第三方软件商店：<a href="http://hack-store.com/">http://hack-store.com</a></li></ul><h3 id="应用商店黑名单"><a href="#应用商店黑名单" class="headerlink" title="应用商店黑名单"></a>应用商店黑名单</h3><blockquote><p>第三方应用市场 APP 黑名单，存在盗版软件传播和下载，拒绝盗版从我做起，欢迎大家监督它们。</p></blockquote><ul><li><a href="http://mac.guanjia.qq.com/">腾讯电脑管家</a> - 电脑管家 for Mac 带应用市场。</li><li><a href="http://mac.xunlei.com/app/">迅雷 Thunder Store</a> - 迅雷 Thunder for Mac 带应用市场。</li><li><a href="http://box.macx.cn/">Mac 软件宝箱</a> - Macx 推出软件宝箱。</li><li><a href="http://www.machunter.net/">MacHunter</a> - Mac 应用市场。</li></ul><h3 id="盗版-Mac-软件下载网站黑名单"><a href="#盗版-Mac-软件下载网站黑名单" class="headerlink" title="盗版 Mac 软件下载网站黑名单"></a>盗版 Mac 软件下载网站黑名单</h3><blockquote><p>拒绝盗版从我做起，下面的网站提供大量破解软件下载，欢迎大家监督它们。</p></blockquote><ul><li>Mac 精品软件：<a href="http://xclient.info/%E3%80%90%E8%8D%90%E3%80%91">http://xclient.info/【荐】</a></li><li>马可菠萝：<a href="https://www.macbl.com/">https://www.macbl.com/</a></li><li>mac 毒：<a href="https://www.macdu.org/">https://www.macdu.org/</a></li><li>玩转苹果：<a href="http://www.ifunmac.com/">http://www.ifunmac.com</a></li><li>Mac 软件下载站：<a href="http://www.pshezi.com/">http://www.pshezi.com</a></li><li>MacPeers：<a href="http://www.macpeers.com/">http://www.macpeers.com</a></li><li>Mac 志：<a href="http://www.isofts.org/">http://www.isofts.org</a></li><li>Mac 软件分享：<a href="http://www.waitsun.com/">http://www.waitsun.com</a></li><li>AppKed：<a href="http://www.macbed.com/">http://www.macbed.com</a></li><li>苹果软件园：<a href="http://www.maczapp.com/">http://www.maczapp.com</a></li><li>Macx：<a href="http://www.macx.cn/">http://www.macx.cn/</a></li><li>腾牛网：<a href="http://www.qqtn.com/mac/r_17_1.html">http://www.qqtn.com/mac/r_17_1.html</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/09/01/hello-world/"/>
      <url>/2021/09/01/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hello </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
